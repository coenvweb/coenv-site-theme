<<<<<<< Updated upstream
void 0===jQuery.migrateMute&&(jQuery.migrateMute=!0),function(a,b,c){"use strict";function d(c){f[c]||(f[c]=!0,a.migrateWarnings.push(c),b.console&&console.warn&&!a.migrateMute&&(console.warn("JQMIGRATE: "+c),a.migrateTrace&&console.trace&&console.trace()))}function e(b,e,f,g){if(Object.defineProperty)try{return Object.defineProperty(b,e,{configurable:!0,enumerable:!0,get:function(){return d(g),f},set:function(a){d(g),f=a}}),c}catch(h){}a._definePropertyBroken=!0,b[e]=f}var f={};a.migrateWarnings=[],!a.migrateMute&&b.console&&console.log&&console.log("JQMIGRATE: Logging is active"),a.migrateTrace===c&&(a.migrateTrace=!0),a.migrateReset=function(){f={},a.migrateWarnings.length=0},"BackCompat"===document.compatMode&&d("jQuery is not compatible with Quirks Mode");var g={},h=a.attr,i=a.attrHooks.value&&a.attrHooks.value.get||function(){return null},j=a.attrHooks.value&&a.attrHooks.value.set||function(){return c},k=/^(?:input|button)$/i,l=/^[238]$/,m=/^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,n=/^(?:checked|selected)$/i;e(a,"attrFn",g,"jQuery.attrFn is deprecated"),a.attr=function(b,e,f,g){var i=e.toLowerCase(),j=b&&b.nodeType;return g&&4>h.length&&(d("jQuery.fn.attr( props, pass ) is deprecated"),b&&!l.test(j)&&a.isFunction(a.fn[e]))?a(b)[e](f):("type"===e&&f!==c&&k.test(b.nodeName)&&b.parentNode&&d("Can't change the 'type' of an input or button in IE 6/7/8"),!a.attrHooks[i]&&m.test(i)&&(a.attrHooks[i]={get:function(b,d){var e,f=a.prop(b,d);return f===!0||"boolean"!=typeof f&&(e=b.getAttributeNode(d))&&e.nodeValue!==!1?d.toLowerCase():c},set:function(b,c,d){var e;return c===!1?a.removeAttr(b,d):(e=a.propFix[d]||d,e in b&&(b[e]=!0),b.setAttribute(d,d.toLowerCase())),d}},n.test(i)&&d("jQuery.fn.attr('"+i+"') may use property instead of attribute")),h.call(a,b,e,f))},a.attrHooks.value={get:function(a,b){var c=(a.nodeName||"").toLowerCase();return"button"===c?i.apply(this,arguments):("input"!==c&&"option"!==c&&d("jQuery.fn.attr('value') no longer gets properties"),b in a?a.value:null)},set:function(a,b){var e=(a.nodeName||"").toLowerCase();return"button"===e?j.apply(this,arguments):("input"!==e&&"option"!==e&&d("jQuery.fn.attr('value', val) no longer sets properties"),a.value=b,c)}};var o,p,q=a.fn.init,r=a.parseJSON,s=/^(?:[^<]*(<[\w\W]+>)[^>]*|#([\w\-]*))$/;a.fn.init=function(b,c,e){var f;return b&&"string"==typeof b&&!a.isPlainObject(c)&&(f=s.exec(b))&&f[1]&&("<"!==b.charAt(0)&&d("$(html) HTML strings must start with '<' character"),c&&c.context&&(c=c.context),a.parseHTML)?q.call(this,a.parseHTML(a.trim(b),c,!0),c,e):q.apply(this,arguments)},a.fn.init.prototype=a.fn,a.parseJSON=function(a){return a||null===a?r.apply(this,arguments):(d("jQuery.parseJSON requires a valid JSON string"),null)},a.uaMatch=function(a){a=a.toLowerCase();var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||0>a.indexOf("compatible")&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},o=a.uaMatch(navigator.userAgent),p={},o.browser&&(p[o.browser]=!0,p.version=o.version),p.chrome?p.webkit=!0:p.webkit&&(p.safari=!0),a.browser=p,e(a,"browser",p,"jQuery.browser is deprecated"),a.sub=function(){function b(a,c){return new b.fn.init(a,c)}a.extend(!0,b,this),b.superclass=this,b.fn=b.prototype=this(),b.fn.constructor=b,b.sub=this.sub,b.fn.init=function(d,e){return e&&e instanceof a&&!(e instanceof b)&&(e=b(e)),a.fn.init.call(this,d,e,c)},b.fn.init.prototype=b.fn;var c=b(document);return d("jQuery.sub() is deprecated"),b};var t=a.fn.data;a.fn.data=function(b){var e,f,g=this[0];return!g||"events"!==b||1!==arguments.length||(e=a.data(g,b),f=a._data(g,b),e!==c&&e!==f||f===c)?t.apply(this,arguments):(d("Use of jQuery.fn.data('events') is deprecated"),f)};var u=/\/(java|ecma)script/i,v=a.fn.andSelf||a.fn.addBack;a.fn.andSelf=function(){return d("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"),v.apply(this,arguments)},a.clean||(a.clean=function(b,e,f,g){e=e||document,e=!e.nodeType&&e[0]||e,e=e.ownerDocument||e,d("jQuery.clean() is deprecated");var h,i,j,k,l=[];if(a.merge(l,a.buildFragment(b,e).childNodes),f)for(j=function(a){return!a.type||u.test(a.type)?g?g.push(a.parentNode?a.parentNode.removeChild(a):a):f.appendChild(a):c},h=0;null!=(i=l[h]);h++)a.nodeName(i,"script")&&j(i)||(f.appendChild(i),i.getElementsByTagName!==c&&(k=a.grep(a.merge([],i.getElementsByTagName("script")),j),l.splice.apply(l,[h+1,0].concat(k)),h+=k.length));return l});var w=a.event.add,x=a.event.remove,y=a.event.trigger,z=a.fn.toggle,A=a.fn.live,B=a.fn.die,C="ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",D=RegExp("\\b(?:"+C+")\\b"),E=/(?:^|\s)hover(\.\S+|)\b/,F=function(b){return"string"!=typeof b||a.event.special.hover?b:(E.test(b)&&d("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"),b&&b.replace(E,"mouseenter$1 mouseleave$1"))};a.event.props&&"attrChange"!==a.event.props[0]&&a.event.props.unshift("attrChange","attrName","relatedNode","srcElement"),a.event.dispatch&&e(a.event,"handle",a.event.dispatch,"jQuery.event.handle is undocumented and deprecated"),a.event.add=function(a,b,c,e,f){a!==document&&D.test(b)&&d("AJAX events should be attached to document: "+b),w.call(this,a,F(b||""),c,e,f)},a.event.remove=function(a,b,c,d,e){x.call(this,a,F(b)||"",c,d,e)},a.fn.error=function(){var a=Array.prototype.slice.call(arguments,0);return d("jQuery.fn.error() is deprecated"),a.splice(0,0,"error"),arguments.length?this.bind.apply(this,a):(this.triggerHandler.apply(this,a),this)},a.fn.toggle=function(b,c){if(!a.isFunction(b)||!a.isFunction(c))return z.apply(this,arguments);d("jQuery.fn.toggle(handler, handler...) is deprecated");var e=arguments,f=b.guid||a.guid++,g=0,h=function(c){var d=(a._data(this,"lastToggle"+b.guid)||0)%g;return a._data(this,"lastToggle"+b.guid,d+1),c.preventDefault(),e[d].apply(this,arguments)||!1};for(h.guid=f;e.length>g;)e[g++].guid=f;return this.click(h)},a.fn.live=function(b,c,e){return d("jQuery.fn.live() is deprecated"),A?A.apply(this,arguments):(a(this.context).on(b,this.selector,c,e),this)},a.fn.die=function(b,c){return d("jQuery.fn.die() is deprecated"),B?B.apply(this,arguments):(a(this.context).off(b,this.selector||"**",c),this)},a.event.trigger=function(a,b,c,e){return!c&!D.test(a)&&d("Global events are undocumented and deprecated"),y.call(this,a,b,c||document,e)},a.each(C.split("|"),function(b,c){a.event.special[c]={setup:function(){var b=this;return b!==document&&(a.event.add(document,c+"."+a.guid,function(){a.event.trigger(c,null,b,!0)}),a._data(this,c,a.guid++)),!1},teardown:function(){return this!==document&&a.event.remove(document,c+"."+a._data(this,c)),!1}}})}(jQuery,window),function(a){a.fn.fastClick=function(b){return a(this).each(function(){a.FastButton(a(this)[0],b)})},a.FastButton=function(b,c){var d,e,f=function(){a(b).unbind("touchend"),a("body").unbind("touchmove.fastClick")},g=function(b){b.stopPropagation(),f(),c.call(this,b),"touchend"===b.type&&a.clickbuster.preventGhostClick(d,e)},h=function(a){(Math.abs(a.originalEvent.touches[0].clientX-d)>10||Math.abs(a.originalEvent.touches[0].clientY-e)>10)&&f()},i=function(c){c.stopPropagation(),a(b).bind("touchend",g),a("body").bind("touchmove.fastClick",h),d=c.originalEvent.touches[0].clientX,e=c.originalEvent.touches[0].clientY};a(b).bind({touchstart:i,click:g})},a.clickbuster={coordinates:[],preventGhostClick:function(b,c){a.clickbuster.coordinates.push(b,c),window.setTimeout(a.clickbuster.pop,2500)},pop:function(){a.clickbuster.coordinates.splice(0,2)},onClick:function(b){var c,d,e;for(e=0;e<a.clickbuster.coordinates.length;e+=2)c=a.clickbuster.coordinates[e],d=a.clickbuster.coordinates[e+1],Math.abs(b.clientX-c)<25&&Math.abs(b.clientY-d)<25&&(b.stopPropagation(),b.preventDefault())}},a(function(){document.addEventListener?document.addEventListener("click",a.clickbuster.onClick,!0):document.attachEvent&&document.attachEvent("onclick",a.clickbuster.onClick)})}(jQuery),function(a,b){"$:nomunge";var c,d=a.jQuery||a.Cowboy||(a.Cowboy={});d.throttle=c=function(a,c,e,f){function g(){function d(){i=+new Date,e.apply(j,l)}function g(){h=b}var j=this,k=+new Date-i,l=arguments;f&&!h&&d(),h&&clearTimeout(h),f===b&&k>a?d():c!==!0&&(h=setTimeout(f?g:d,f===b?a-k:a))}var h,i=0;return"boolean"!=typeof c&&(f=e,e=c,c=b),d.guid&&(g.guid=e.guid=e.guid||d.guid++),g},d.debounce=function(a,d,e){return e===b?c(a,d,!1):c(a,e,d!==!1)}}(this),function(){var a;a=function(){function a(){this.options_index=0,this.parsed=[]}return a.prototype.add_node=function(a){return"OPTGROUP"===a.nodeName.toUpperCase()?this.add_group(a):this.add_option(a)},a.prototype.add_group=function(a){var b,c,d,e,f,g;for(b=this.parsed.length,this.parsed.push({array_index:b,group:!0,label:a.label,children:0,disabled:a.disabled}),f=a.childNodes,g=[],d=0,e=f.length;e>d;d++)c=f[d],g.push(this.add_option(c,b,a.disabled));return g},a.prototype.add_option=function(a,b,c){return"OPTION"===a.nodeName.toUpperCase()?(""!==a.text?(null!=b&&(this.parsed[b].children+=1),this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,value:a.value,text:a.text,html:a.innerHTML,selected:a.selected,disabled:c===!0?c:a.disabled,group_array_index:b,classes:a.className,style:a.style.cssText})):this.parsed.push({array_index:this.parsed.length,options_index:this.options_index,empty:!0}),this.options_index+=1):void 0},a}(),a.select_to_array=function(b){var c,d,e,f,g;for(d=new a,g=b.childNodes,e=0,f=g.length;f>e;e++)c=g[e],d.add_node(c);return d.parsed},this.SelectParser=a}.call(this),function(){var a,b;b=this,a=function(){function a(b,c){this.form_field=b,this.options=null!=c?c:{},a.browser_is_supported()&&(this.is_multiple=this.form_field.multiple,this.set_default_text(),this.set_default_values(),this.setup(),this.set_up_html(),this.register_observers(),this.finish_setup())}return a.prototype.set_default_values=function(){var a=this;return this.click_test_action=function(b){return a.test_active_click(b)},this.activate_action=function(b){return a.activate_field(b)},this.active_field=!1,this.mouse_on_container=!1,this.results_showing=!1,this.result_highlighted=null,this.result_single_selected=null,this.allow_single_deselect=null!=this.options.allow_single_deselect&&null!=this.form_field.options[0]&&""===this.form_field.options[0].text?this.options.allow_single_deselect:!1,this.disable_search_threshold=this.options.disable_search_threshold||0,this.disable_search=this.options.disable_search||!1,this.enable_split_word_search=null!=this.options.enable_split_word_search?this.options.enable_split_word_search:!0,this.search_contains=this.options.search_contains||!1,this.single_backstroke_delete=this.options.single_backstroke_delete||!1,this.max_selected_options=this.options.max_selected_options||1/0,this.inherit_select_classes=this.options.inherit_select_classes||!1},a.prototype.set_default_text=function(){return this.default_text=this.form_field.getAttribute("data-placeholder")?this.form_field.getAttribute("data-placeholder"):this.is_multiple?this.options.placeholder_text_multiple||this.options.placeholder_text||a.default_multiple_text:this.options.placeholder_text_single||this.options.placeholder_text||a.default_single_text,this.results_none_found=this.form_field.getAttribute("data-no_results_text")||this.options.no_results_text||a.default_no_result_text},a.prototype.mouse_enter=function(){return this.mouse_on_container=!0},a.prototype.mouse_leave=function(){return this.mouse_on_container=!1},a.prototype.input_focus=function(){var a=this;if(this.is_multiple){if(!this.active_field)return setTimeout(function(){return a.container_mousedown()},50)}else if(!this.active_field)return this.activate_field()},a.prototype.input_blur=function(){var a=this;return this.mouse_on_container?void 0:(this.active_field=!1,setTimeout(function(){return a.blur_test()},100))},a.prototype.result_add_option=function(a){var b,c;return a.disabled?"":(a.dom_id=this.container_id+"_o_"+a.array_index,b=a.selected&&this.is_multiple?[]:["active-result"],a.selected&&b.push("result-selected"),null!=a.group_array_index&&b.push("group-option"),""!==a.classes&&b.push(a.classes),c=""!==a.style.cssText?' style="'+a.style+'"':"",'<li id="'+a.dom_id+'" class="'+b.join(" ")+'"'+c+">"+a.html+"</li>")},a.prototype.results_update_field=function(){return this.set_default_text(),this.is_multiple||this.results_reset_cleanup(),this.result_clear_highlight(),this.result_single_selected=null,this.results_build()},a.prototype.results_toggle=function(){return this.results_showing?this.results_hide():this.results_show()},a.prototype.results_search=function(){return this.results_showing?this.winnow_results():this.results_show()},a.prototype.choices_count=function(){var a,b,c,d;if(null!=this.selected_option_count)return this.selected_option_count;for(this.selected_option_count=0,d=this.form_field.options,b=0,c=d.length;c>b;b++)a=d[b],a.selected&&(this.selected_option_count+=1);return this.selected_option_count},a.prototype.choices_click=function(a){return a.preventDefault(),this.results_showing?void 0:this.results_show()},a.prototype.keyup_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),b){case 8:if(this.is_multiple&&this.backstroke_length<1&&this.choices_count()>0)return this.keydown_backstroke();if(!this.pending_backstroke)return this.result_clear_highlight(),this.results_search();break;case 13:if(a.preventDefault(),this.results_showing)return this.result_select(a);break;case 27:return this.results_showing&&this.results_hide(),!0;case 9:case 38:case 40:case 16:case 91:case 17:break;default:return this.results_search()}},a.prototype.generate_field_id=function(){var a;return a=this.generate_random_id(),this.form_field.id=a,a},a.prototype.generate_random_char=function(){var a,b,c;return a="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ",c=Math.floor(Math.random()*a.length),b=a.substring(c,c+1)},a.prototype.container_width=function(){return null!=this.options.width?this.options.width:""+this.form_field.offsetWidth+"px"},a.browser_is_supported=function(){var a;return"Microsoft Internet Explorer"===window.navigator.appName?null!==(a=document.documentMode)&&a>=8:!0},a.default_multiple_text="Select Some Options",a.default_single_text="Select an Option",a.default_no_result_text="No results match",a}(),b.AbstractChosen=a}.call(this),function(){var a,b,c,d,e={}.hasOwnProperty,f=function(a,b){function c(){this.constructor=a}for(var d in b)e.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a};c=this,a=jQuery,a.fn.extend({chosen:function(c){return AbstractChosen.browser_is_supported()?this.each(function(){var d;return d=a(this),d.hasClass("chzn-done")?void 0:d.data("chosen",new b(this,c))}):this}}),b=function(b){function e(){return d=e.__super__.constructor.apply(this,arguments)}return f(e,b),e.prototype.setup=function(){return this.form_field_jq=a(this.form_field),this.current_selectedIndex=this.form_field.selectedIndex,this.is_rtl=this.form_field_jq.hasClass("chzn-rtl")},e.prototype.finish_setup=function(){return this.form_field_jq.addClass("chzn-done")},e.prototype.set_up_html=function(){var b,c;return this.container_id=this.form_field.id.length?this.form_field.id.replace(/[^\w]/g,"_"):this.generate_field_id(),this.container_id+="_chzn",b=["chzn-container"],b.push("chzn-container-"+(this.is_multiple?"multi":"single")),this.inherit_select_classes&&this.form_field.className&&b.push(this.form_field.className),this.is_rtl&&b.push("chzn-rtl"),c={id:this.container_id,"class":b.join(" "),style:"width: "+this.container_width()+";",title:this.form_field.title},this.container=a("<div />",c),this.container.html(this.is_multiple?'<ul class="chzn-choices"><li class="search-field"><input type="text" value="'+this.default_text+'" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop"><ul class="chzn-results"></ul></div>':'<a href="javascript:void(0)" class="chzn-single chzn-default" tabindex="-1"><span>'+this.default_text+'</span><div><b></b></div></a><div class="chzn-drop"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>'),this.form_field_jq.hide().after(this.container),this.dropdown=this.container.find("div.chzn-drop").first(),this.search_field=this.container.find("input").first(),this.search_results=this.container.find("ul.chzn-results").first(),this.search_field_scale(),this.search_no_results=this.container.find("li.no-results").first(),this.is_multiple?(this.search_choices=this.container.find("ul.chzn-choices").first(),this.search_container=this.container.find("li.search-field").first()):(this.search_container=this.container.find("div.chzn-search").first(),this.selected_item=this.container.find(".chzn-single").first()),this.results_build(),this.set_tab_index(),this.set_label_behavior(),this.form_field_jq.trigger("liszt:ready",{chosen:this})},e.prototype.register_observers=function(){var a=this;return this.container.mousedown(function(b){a.container_mousedown(b)}),this.container.mouseup(function(b){a.container_mouseup(b)}),this.container.mouseenter(function(b){a.mouse_enter(b)}),this.container.mouseleave(function(b){a.mouse_leave(b)}),this.search_results.mouseup(function(b){a.search_results_mouseup(b)}),this.search_results.mouseover(function(b){a.search_results_mouseover(b)}),this.search_results.mouseout(function(b){a.search_results_mouseout(b)}),this.search_results.bind("mousewheel DOMMouseScroll",function(b){a.search_results_mousewheel(b)}),this.form_field_jq.bind("liszt:updated",function(b){a.results_update_field(b)}),this.form_field_jq.bind("liszt:activate",function(b){a.activate_field(b)}),this.form_field_jq.bind("liszt:open",function(b){a.container_mousedown(b)}),this.search_field.blur(function(b){a.input_blur(b)}),this.search_field.keyup(function(b){a.keyup_checker(b)}),this.search_field.keydown(function(b){a.keydown_checker(b)}),this.search_field.focus(function(b){a.input_focus(b)}),this.is_multiple?this.search_choices.click(function(b){a.choices_click(b)}):this.container.click(function(a){a.preventDefault()})},e.prototype.search_field_disabled=function(){return this.is_disabled=this.form_field_jq[0].disabled,this.is_disabled?(this.container.addClass("chzn-disabled"),this.search_field[0].disabled=!0,this.is_multiple||this.selected_item.unbind("focus",this.activate_action),this.close_field()):(this.container.removeClass("chzn-disabled"),this.search_field[0].disabled=!1,this.is_multiple?void 0:this.selected_item.bind("focus",this.activate_action))},e.prototype.container_mousedown=function(b){return this.is_disabled||(b&&"mousedown"===b.type&&!this.results_showing&&b.preventDefault(),null!=b&&a(b.target).hasClass("search-choice-close"))?void 0:(this.active_field?this.is_multiple||!b||a(b.target)[0]!==this.selected_item[0]&&!a(b.target).parents("a.chzn-single").length||(b.preventDefault(),this.results_toggle()):(this.is_multiple&&this.search_field.val(""),a(document).click(this.click_test_action),this.results_show()),this.activate_field())},e.prototype.container_mouseup=function(a){return"ABBR"!==a.target.nodeName||this.is_disabled?void 0:this.results_reset(a)},e.prototype.search_results_mousewheel=function(a){var b,c,d;return b=-(null!=(c=a.originalEvent)?c.wheelDelta:void 0)||(null!=(d=a.originialEvent)?d.detail:void 0),null!=b?(a.preventDefault(),"DOMMouseScroll"===a.type&&(b=40*b),this.search_results.scrollTop(b+this.search_results.scrollTop())):void 0},e.prototype.blur_test=function(){return!this.active_field&&this.container.hasClass("chzn-container-active")?this.close_field():void 0},e.prototype.close_field=function(){return a(document).unbind("click",this.click_test_action),this.active_field=!1,this.results_hide(),this.container.removeClass("chzn-container-active"),this.winnow_results_clear(),this.clear_backstroke(),this.show_search_field_default(),this.search_field_scale()},e.prototype.activate_field=function(){return this.container.addClass("chzn-container-active"),this.active_field=!0,this.search_field.val(this.search_field.val()),this.search_field.focus()},e.prototype.test_active_click=function(b){return a(b.target).parents("#"+this.container_id).length?this.active_field=!0:this.close_field()},e.prototype.results_build=function(){var a,b,d,e,f;for(this.parsing=!0,this.selected_option_count=null,this.results_data=c.SelectParser.select_to_array(this.form_field),this.is_multiple&&this.choices_count()>0?this.search_choices.find("li.search-choice").remove():this.is_multiple||(this.selected_item.addClass("chzn-default").find("span").text(this.default_text),this.disable_search||this.form_field.options.length<=this.disable_search_threshold?this.container.addClass("chzn-container-single-nosearch"):this.container.removeClass("chzn-container-single-nosearch")),a="",f=this.results_data,d=0,e=f.length;e>d;d++)b=f[d],b.group?a+=this.result_add_group(b):b.empty||(a+=this.result_add_option(b),b.selected&&this.is_multiple?this.choice_build(b):b.selected&&!this.is_multiple&&(this.selected_item.removeClass("chzn-default").find("span").text(b.text),this.allow_single_deselect&&this.single_deselect_control_build()));return this.search_field_disabled(),this.show_search_field_default(),this.search_field_scale(),this.search_results.html(a),this.parsing=!1},e.prototype.result_add_group=function(b){return b.disabled?"":(b.dom_id=this.container_id+"_g_"+b.array_index,'<li id="'+b.dom_id+'" class="group-result">'+a("<div />").text(b.label).html()+"</li>")},e.prototype.result_do_highlight=function(a){var b,c,d,e,f;if(a.length){if(this.result_clear_highlight(),this.result_highlight=a,this.result_highlight.addClass("highlighted"),d=parseInt(this.search_results.css("maxHeight"),10),f=this.search_results.scrollTop(),e=d+f,c=this.result_highlight.position().top+this.search_results.scrollTop(),b=c+this.result_highlight.outerHeight(),b>=e)return this.search_results.scrollTop(b-d>0?b-d:0);if(f>c)return this.search_results.scrollTop(c)}},e.prototype.result_clear_highlight=function(){return this.result_highlight&&this.result_highlight.removeClass("highlighted"),this.result_highlight=null},e.prototype.results_show=function(){if(null!=this.result_single_selected)this.result_do_highlight(this.result_single_selected);else if(this.is_multiple&&this.max_selected_options<=this.choices_count())return this.form_field_jq.trigger("liszt:maxselected",{chosen:this}),!1;return this.container.addClass("chzn-with-drop"),this.form_field_jq.trigger("liszt:showing_dropdown",{chosen:this}),this.results_showing=!0,this.search_field.focus(),this.search_field.val(this.search_field.val()),this.winnow_results()},e.prototype.results_hide=function(){return this.result_clear_highlight(),this.container.removeClass("chzn-with-drop"),this.form_field_jq.trigger("liszt:hiding_dropdown",{chosen:this}),this.results_showing=!1},e.prototype.set_tab_index=function(){var a;return this.form_field_jq.attr("tabindex")?(a=this.form_field_jq.attr("tabindex"),this.form_field_jq.attr("tabindex",-1),this.search_field.attr("tabindex",a)):void 0},e.prototype.set_label_behavior=function(){var b=this;return this.form_field_label=this.form_field_jq.parents("label"),!this.form_field_label.length&&this.form_field.id.length&&(this.form_field_label=a("label[for='"+this.form_field.id+"']")),this.form_field_label.length>0?this.form_field_label.click(function(a){return b.is_multiple?b.container_mousedown(a):b.activate_field()}):void 0},e.prototype.show_search_field_default=function(){return this.is_multiple&&this.choices_count()<1&&!this.active_field?(this.search_field.val(this.default_text),this.search_field.addClass("default")):(this.search_field.val(""),this.search_field.removeClass("default"))},e.prototype.search_results_mouseup=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c.length?(this.result_highlight=c,this.result_select(b),this.search_field.focus()):void 0},e.prototype.search_results_mouseover=function(b){var c;return c=a(b.target).hasClass("active-result")?a(b.target):a(b.target).parents(".active-result").first(),c?this.result_do_highlight(c):void 0},e.prototype.search_results_mouseout=function(b){return a(b.target).hasClass("active-result")?this.result_clear_highlight():void 0},e.prototype.choice_build=function(b){var c,d,e=this;return c=a("<li />",{"class":"search-choice"}).html("<span>"+b.html+"</span>"),b.disabled?c.addClass("search-choice-disabled"):(d=a("<a />",{href:"#","class":"search-choice-close",rel:b.array_index}),d.click(function(a){return e.choice_destroy_link_click(a)}),c.append(d)),this.search_container.before(c)},e.prototype.choice_destroy_link_click=function(b){return b.preventDefault(),b.stopPropagation(),this.is_disabled?void 0:this.choice_destroy(a(b.target))},e.prototype.choice_destroy=function(a){return this.result_deselect(a.attr("rel"))?(this.show_search_field_default(),this.is_multiple&&this.choices_count()>0&&this.search_field.val().length<1&&this.results_hide(),a.parents("li").first().remove(),this.search_field_scale()):void 0},e.prototype.results_reset=function(){return this.form_field.options[0].selected=!0,this.selected_option_count=null,this.selected_item.find("span").text(this.default_text),this.is_multiple||this.selected_item.addClass("chzn-default"),this.show_search_field_default(),this.results_reset_cleanup(),this.form_field_jq.trigger("change"),this.active_field?this.results_hide():void 0},e.prototype.results_reset_cleanup=function(){return this.current_selectedIndex=this.form_field.selectedIndex,this.selected_item.find("abbr").remove()},e.prototype.result_select=function(a){var b,c,d,e;return this.result_highlight?(b=this.result_highlight,c=b.attr("id"),this.result_clear_highlight(),this.is_multiple&&this.max_selected_options<=this.choices_count()?(this.form_field_jq.trigger("liszt:maxselected",{chosen:this}),!1):(this.is_multiple?this.result_deactivate(b):(this.search_results.find(".result-selected").removeClass("result-selected"),this.result_single_selected=b,this.selected_item.removeClass("chzn-default")),b.addClass("result-selected"),e=c.substr(c.lastIndexOf("_")+1),d=this.results_data[e],d.selected=!0,this.form_field.options[d.options_index].selected=!0,this.selected_option_count=null,this.is_multiple?this.choice_build(d):(this.selected_item.find("span").first().text(d.text),this.allow_single_deselect&&this.single_deselect_control_build()),(a.metaKey||a.ctrlKey)&&this.is_multiple||this.results_hide(),this.search_field.val(""),(this.is_multiple||this.form_field.selectedIndex!==this.current_selectedIndex)&&this.form_field_jq.trigger("change",{selected:this.form_field.options[d.options_index].value}),this.current_selectedIndex=this.form_field.selectedIndex,this.search_field_scale())):void 0},e.prototype.result_activate=function(a){return a.addClass("active-result")},e.prototype.result_deactivate=function(a){return a.removeClass("active-result")},e.prototype.result_deselect=function(b){var c,d;return d=this.results_data[b],this.form_field.options[d.options_index].disabled?!1:(d.selected=!1,this.form_field.options[d.options_index].selected=!1,this.selected_option_count=null,c=a("#"+this.container_id+"_o_"+b),c.removeClass("result-selected").addClass("active-result").show(),this.result_clear_highlight(),this.winnow_results(),this.form_field_jq.trigger("change",{deselected:this.form_field.options[d.options_index].value}),this.search_field_scale(),!0)},e.prototype.single_deselect_control_build=function(){return this.allow_single_deselect&&this.selected_item.find("abbr").length<1?this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'):void 0},e.prototype.winnow_results=function(){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;for(this.no_results_clear(),j=0,k=this.search_field.val()===this.default_text?"":a("<div/>").text(a.trim(this.search_field.val())).html(),g=this.search_contains?"":"^",f=new RegExp(g+k.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),n=new RegExp(k.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&"),"i"),s=this.results_data,o=0,q=s.length;q>o;o++)if(c=s[o],!c.disabled&&!c.empty)if(c.group)a("#"+c.dom_id).css("display","none");else if(!this.is_multiple||!c.selected){if(b=!1,i=c.dom_id,h=a("#"+i),f.test(c.html))b=!0,j+=1;else if(this.enable_split_word_search&&(c.html.indexOf(" ")>=0||0===c.html.indexOf("["))&&(e=c.html.replace(/\[|\]/g,"").split(" "),e.length))for(p=0,r=e.length;r>p;p++)d=e[p],f.test(d)&&(b=!0,j+=1);b?(k.length?(l=c.html.search(n),m=c.html.substr(0,l+k.length)+"</em>"+c.html.substr(l+k.length),m=m.substr(0,l)+"<em>"+m.substr(l)):m=c.html,h.html(m),this.result_activate(h),null!=c.group_array_index&&a("#"+this.results_data[c.group_array_index].dom_id).css("display","list-item")):(this.result_highlight&&i===this.result_highlight.attr("id")&&this.result_clear_highlight(),this.result_deactivate(h))}return 1>j&&k.length?this.no_results(k):this.winnow_results_set_highlight()},e.prototype.winnow_results_clear=function(){var b,c,d,e,f;for(this.search_field.val(""),c=this.search_results.find("li"),f=[],d=0,e=c.length;e>d;d++)b=c[d],b=a(b),f.push(b.hasClass("group-result")?b.css("display","auto"):this.is_multiple&&b.hasClass("result-selected")?void 0:this.result_activate(b));return f},e.prototype.winnow_results_set_highlight=function(){var a,b;return this.result_highlight||(b=this.is_multiple?[]:this.search_results.find(".result-selected.active-result"),a=b.length?b.first():this.search_results.find(".active-result").first(),null==a)?void 0:this.result_do_highlight(a)},e.prototype.no_results=function(b){var c;return c=a('<li class="no-results">'+this.results_none_found+' "<span></span>"</li>'),c.find("span").first().html(b),this.search_results.append(c)},e.prototype.no_results_clear=function(){return this.search_results.find(".no-results").remove()},e.prototype.keydown_arrow=function(){var b,c;return this.result_highlight?this.results_showing&&(c=this.result_highlight.nextAll("li.active-result").first(),c&&this.result_do_highlight(c)):(b=this.search_results.find("li.active-result").first(),b&&this.result_do_highlight(a(b))),this.results_showing?void 0:this.results_show()},e.prototype.keyup_arrow=function(){var a;return this.results_showing||this.is_multiple?this.result_highlight?(a=this.result_highlight.prevAll("li.active-result"),a.length?this.result_do_highlight(a.first()):(this.choices_count()>0&&this.results_hide(),this.result_clear_highlight())):void 0:this.results_show()},e.prototype.keydown_backstroke=function(){var a;return this.pending_backstroke?(this.choice_destroy(this.pending_backstroke.find("a").first()),this.clear_backstroke()):(a=this.search_container.siblings("li.search-choice").last(),a.length&&!a.hasClass("search-choice-disabled")?(this.pending_backstroke=a,this.single_backstroke_delete?this.keydown_backstroke():this.pending_backstroke.addClass("search-choice-focus")):void 0)},e.prototype.clear_backstroke=function(){return this.pending_backstroke&&this.pending_backstroke.removeClass("search-choice-focus"),this.pending_backstroke=null},e.prototype.keydown_checker=function(a){var b,c;switch(b=null!=(c=a.which)?c:a.keyCode,this.search_field_scale(),8!==b&&this.pending_backstroke&&this.clear_backstroke(),b){case 8:this.backstroke_length=this.search_field.val().length;break;case 9:this.results_showing&&!this.is_multiple&&this.result_select(a),this.mouse_on_container=!1;break;case 13:a.preventDefault();break;case 38:a.preventDefault(),this.keyup_arrow();break;case 40:this.keydown_arrow()}},e.prototype.search_field_scale=function(){var b,c,d,e,f,g,h,i;if(this.is_multiple){for(c=0,g=0,e="position:absolute; left: -1000px; top: -1000px; display:none;",f=["font-size","font-style","font-weight","font-family","line-height","text-transform","letter-spacing"],h=0,i=f.length;i>h;h++)d=f[h],e+=d+":"+this.search_field.css(d)+";";
<<<<<<< HEAD
return b=a("<div />",{style:e}),b.text(this.search_field.val()),a("body").append(b),g=b.width()+25,b.remove(),this.f_width||(this.f_width=this.container.outerWidth()),g>this.f_width-10&&(g=this.f_width-10),this.search_field.css({width:g+"px"})}},e.prototype.generate_random_id=function(){var b;for(b="sel"+this.generate_random_char()+this.generate_random_char()+this.generate_random_char();a("#"+b).length>0;)b+=this.generate_random_char();return b},e}(AbstractChosen),c.Chosen=b}.call(this),function(a){"use strict";a.fn.fitVids=function(b){var c={customSelector:null};if(!document.getElementById("fit-vids-style")){var d=document.createElement("div"),e=document.getElementsByTagName("base")[0]||document.getElementsByTagName("script")[0],f="&shy;<style>.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style>";d.className="fit-vids-style",d.id="fit-vids-style",d.style.display="none",d.innerHTML=f,e.parentNode.insertBefore(d,e)}return b&&a.extend(c,b),this.each(function(){var b=["iframe[src*='player.vimeo.com']","iframe[src*='youtube.com']","iframe[src*='youtube-nocookie.com']","iframe[src*='kickstarter.com'][src*='video.html']","object","embed"];c.customSelector&&b.push(c.customSelector);var d=a(this).find(b.join(","));d=d.not("object object"),d.each(function(){var b=a(this);if(!("embed"===this.tagName.toLowerCase()&&b.parent("object").length||b.parent(".fluid-width-video-wrapper").length)){var c="object"===this.tagName.toLowerCase()||b.attr("height")&&!isNaN(parseInt(b.attr("height"),10))?parseInt(b.attr("height"),10):b.height(),d=isNaN(parseInt(b.attr("width"),10))?b.width():parseInt(b.attr("width"),10),e=c/d;if(!b.attr("id")){var f="fitvid"+Math.floor(999999*Math.random());b.attr("id",f)}b.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top",100*e+"%"),b.removeAttr("height").removeAttr("width")}})})}}(window.jQuery||window.Zepto),function(a,b,c){function d(a){var b={},d=/^jQuery\d+$/;return c.each(a.attributes,function(a,c){c.specified&&!d.test(c.name)&&(b[c.name]=c.value)}),b}function e(a,d){var e=this,f=c(e);if(e.value==f.attr("placeholder")&&f.hasClass("placeholder"))if(f.data("placeholder-password")){if(f=f.hide().next().show().attr("id",f.removeAttr("id").data("placeholder-id")),a===!0)return f[0].value=d;f.focus()}else e.value="",f.removeClass("placeholder"),e==b.activeElement&&e.select()}function f(){var a,b=this,f=c(b),g=this.id;if(""==b.value){if("password"==b.type){if(!f.data("placeholder-textinput")){try{a=f.clone().attr({type:"text"})}catch(h){a=c("<input>").attr(c.extend(d(this),{type:"text"}))}a.removeAttr("name").data({"placeholder-password":!0,"placeholder-id":g}).bind("focus.placeholder",e),f.data({"placeholder-textinput":a,"placeholder-id":g}).before(a)}f=f.removeAttr("id").hide().prev().attr("id",g).show()}f.addClass("placeholder"),f[0].value=f.attr("placeholder")}else f.removeClass("placeholder")}var g,h,i="placeholder"in b.createElement("input"),j="placeholder"in b.createElement("textarea"),k=c.fn,l=c.valHooks;i&&j?(h=k.placeholder=function(){return this},h.input=h.textarea=!0):(h=k.placeholder=function(){var a=this;return a.filter((i?"textarea":":input")+"[placeholder]").not(".placeholder").bind({"focus.placeholder":e,"blur.placeholder":f}).data("placeholder-enabled",!0).trigger("blur.placeholder"),a},h.input=i,h.textarea=j,g={get:function(a){var b=c(a);return b.data("placeholder-enabled")&&b.hasClass("placeholder")?"":a.value},set:function(a,d){var g=c(a);return g.data("placeholder-enabled")?(""==d?(a.value=d,a!=b.activeElement&&f.call(a)):g.hasClass("placeholder")?e.call(a,!0,d)||(a.value=d):a.value=d,g):a.value=d}},i||(l.input=g),j||(l.textarea=g),c(function(){c(b).delegate("form","submit.placeholder",function(){var a=c(".placeholder",this).each(e);setTimeout(function(){a.each(f)},10)})}),c(a).bind("beforeunload.placeholder",function(){c(".placeholder").each(function(){this.value=""})}))}(this,document,jQuery),function(a){a.fn.hoverIntent=function(b,c,d){var e={interval:100,sensitivity:7,timeout:0};e="object"==typeof b?a.extend(e,b):a.isFunction(c)?a.extend(e,{over:b,out:c,selector:d}):a.extend(e,{over:b,out:b,selector:c});var f,g,h,i,j=function(a){f=a.pageX,g=a.pageY},k=function(b,c){return c.hoverIntent_t=clearTimeout(c.hoverIntent_t),Math.abs(h-f)+Math.abs(i-g)<e.sensitivity?(a(c).off("mousemove.hoverIntent",j),c.hoverIntent_s=1,e.over.apply(c,[b])):(h=f,i=g,c.hoverIntent_t=setTimeout(function(){k(b,c)},e.interval),void 0)},l=function(a,b){return b.hoverIntent_t=clearTimeout(b.hoverIntent_t),b.hoverIntent_s=0,e.out.apply(b,[a])},m=function(b){var c=jQuery.extend({},b),d=this;d.hoverIntent_t&&(d.hoverIntent_t=clearTimeout(d.hoverIntent_t)),"mouseenter"==b.type?(h=c.pageX,i=c.pageY,a(d).on("mousemove.hoverIntent",j),1!=d.hoverIntent_s&&(d.hoverIntent_t=setTimeout(function(){k(c,d)},e.interval))):(a(d).off("mousemove.hoverIntent",j),1==d.hoverIntent_s&&(d.hoverIntent_t=setTimeout(function(){l(c,d)},e.timeout)))};return this.on({"mouseenter.hoverIntent":m,"mouseleave.hoverIntent":m},e.selector)}}(jQuery),function(a){"use strict";a.picturefill=function(){for(var b=a.document.getElementsByTagName("span"),c=0,d=b.length;d>c;c++)if(null!==b[c].getAttribute("data-picture")){for(var e=b[c].getElementsByTagName("span"),f=[],g=0,h=e.length;h>g;g++){var i=e[g].getAttribute("data-media");(!i||a.matchMedia&&a.matchMedia(i).matches)&&f.push(e[g])}var j=b[c].getElementsByTagName("img")[0];if(f.length){var k=f.pop();if(j&&"NOSCRIPT"!==j.parentNode.nodeName){if(k===j.parentNode)continue}else j=a.document.createElement("img"),j.alt=b[c].getAttribute("data-alt");j.src=k.getAttribute("data-src"),k.appendChild(j),j.removeAttribute("width"),j.removeAttribute("height")}else j&&j.parentNode.removeChild(j)}},a.addEventListener?(a.addEventListener("resize",a.picturefill,!1),a.addEventListener("DOMContentLoaded",function(){a.picturefill(),a.removeEventListener("load",a.picturefill,!1)},!1),a.addEventListener("load",a.picturefill,!1)):a.attachEvent&&a.attachEvent("onload",a.picturefill)}(this),function(a,b,c){var d=b.matchMedia;"undefined"!=typeof module&&module.exports?module.exports=c(d):"function"==typeof define&&define.amd?define(function(){return b[a]=c(d)}):b[a]=c(d)}("enquire",this,function(a){"use strict";function b(a,b){var c,d=0,e=a.length;for(d;e>d&&(c=b(a[d],d),c!==!1);d++);}function c(a){return"[object Array]"===Object.prototype.toString.apply(a)}function d(a){return"function"==typeof a}function e(a){this.options=a,!a.deferSetup&&this.setup()}function f(b,c){this.query=b,this.isUnconditional=c,this.handlers=[],this.mql=a(b);var d=this;this.listener=function(a){d.mql=a,d.assess()},this.mql.addListener(this.listener)}function g(){if(!a)throw new Error("matchMedia not present, legacy browsers require a polyfill");this.queries={},this.browserIsIncapable=!a("only all").matches}return e.prototype={setup:function(){this.options.setup&&this.options.setup(),this.initialised=!0},on:function(){!this.initialised&&this.setup(),this.options.match&&this.options.match()},off:function(){this.options.unmatch&&this.options.unmatch()},destroy:function(){this.options.destroy?this.options.destroy():this.off()},equals:function(a){return this.options===a||this.options.match===a}},f.prototype={addHandler:function(a){var b=new e(a);this.handlers.push(b),this.matches()&&b.on()},removeHandler:function(a){var c=this.handlers;b(c,function(b,d){return b.equals(a)?(b.destroy(),!c.splice(d,1)):void 0})},matches:function(){return this.mql.matches||this.isUnconditional},clear:function(){b(this.handlers,function(a){a.destroy()}),this.mql.removeListener(this.listener),this.handlers.length=0},assess:function(){var a=this.matches()?"on":"off";b(this.handlers,function(b){b[a]()})}},g.prototype={register:function(a,e,g){var h=this.queries,i=g&&this.browserIsIncapable;return h[a]||(h[a]=new f(a,i)),d(e)&&(e={match:e}),c(e)||(e=[e]),b(e,function(b){h[a].addHandler(b)}),this},unregister:function(a,b){var c=this.queries[a];return c&&(b?c.removeHandler(b):(c.clear(),delete this.queries[a])),this}},new g}),function(a){function b(b,c){function d(a,b){return'<div style="'+(f._isMove?"":a!==f.currSlideId?f._opacityCSS:"z-index:0;")+'" class="rsSlide '+(b||"")+'"></div>'}var e,f=this,g=navigator.userAgent.toLowerCase();f.uid=a.rsModules.uid++,f.ns=".rs"+f.uid;var h,i=document.createElement("div").style,j=["webkit","Moz","ms","O"],k="",l=0;for(e=0;e<j.length;e++)h=j[e],!k&&h+"Transform"in i&&(k=h),h=h.toLowerCase(),window.requestAnimationFrame||(window.requestAnimationFrame=window[h+"RequestAnimationFrame"],window.cancelAnimationFrame=window[h+"CancelAnimationFrame"]||window[h+"CancelRequestAnimationFrame"]);window.requestAnimationFrame||(window.requestAnimationFrame=function(a){var b=(new Date).getTime(),c=Math.max(0,16-(b-l)),d=window.setTimeout(function(){a(b+c)},c);return l=b+c,d}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),f.isIPAD=g.match(/(ipad)/);var m=function(a){var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},n=m(g),o={};if(n.browser&&(o[n.browser]=!0,o.version=n.version),o.chrome&&(o.webkit=!0),f._browser=o,f.slider=a(b),f.ev=a(f),f._doc=a(document),f.st=a.extend({},a.fn.royalSlider.defaults,c),f._currAnimSpeed=f.st.transitionSpeed,f._minPosOffset=0,f.st.allowCSS3&&(!o.webkit||f.st.allowCSS3OnWebkit)){var p=k+(k?"T":"t");f._useCSS3Transitions=p+"ransform"in i&&p+"ransition"in i,f._useCSS3Transitions&&(f._use3dTransform=k+(k?"P":"p")+"erspective"in i)}k=k.toLowerCase(),f._vendorPref="-"+k+"-",f._slidesHorizontal="vertical"===f.st.slidesOrientation?!1:!0,f._reorderProp=f._slidesHorizontal?"left":"top",f._sizeProp=f._slidesHorizontal?"width":"height",f._prevNavItemId=-1,f._isMove="fade"===f.st.transitionType?!1:!0,f._isMove||(f.st.sliderDrag=!1,f._fadeZIndex=10),f._opacityCSS="z-index:0; display:none; opacity:0;",f._newSlideId=0,f._sPosition=0,f._nextSlidePos=0,a.each(a.rsModules,function(a,b){"uid"!==a&&b.call(f)}),f.slides=[],f._idCount=0;var q=f.st.slides?a(f.st.slides):f.slider.children().detach();q.each(function(){f._parseNode(this,!0)}),f.st.randomizeSlides&&f.slides.sort(function(){return.5-Math.random()}),f.numSlides=f.slides.length,f._refreshNumPreloadImages(),f.st.startSlideId?f.st.startSlideId>f.numSlides-1&&(f.st.startSlideId=f.numSlides-1):f.st.startSlideId=0,f._newSlideId=f.staticSlideId=f.currSlideId=f._realId=f.st.startSlideId,f.currSlide=f.slides[f.currSlideId],f._accelerationPos=0,f.msTouch=!1,f.slider.addClass((f._slidesHorizontal?"rsHor":"rsVer")+(f._isMove?"":" rsFade"));var r='<div class="rsOverflow"><div class="rsContainer">';f.slidesSpacing=f.st.slidesSpacing,f._slideSize=(f._slidesHorizontal?f.slider.width():f.slider.height())+f.st.slidesSpacing,f._preload=Boolean(f._numPreloadImages>0),f.numSlides<=1&&(f._loop=!1);var s=f._loop&&f._isMove?2===f.numSlides?1:2:0;for(f._loopHelpers=s,f._maxImages=f.numSlides<6?f.numSlides:6,f._currBlockIndex=0,f._idOffset=0,f.slidesJQ=[],e=0;e<f.numSlides;e++)f.slidesJQ.push(a(d(e)));f._sliderOverflow=r=a(r+"</div></div>");var t=function(){f.st.sliderDrag&&(f._hasDrag=!0,o.msie||o.opera?f._grabCursor=f._grabbingCursor="move":o.mozilla?(f._grabCursor="-moz-grab",f._grabbingCursor="-moz-grabbing"):o.webkit&&-1!=navigator.platform.indexOf("Mac")&&(f._grabCursor="-webkit-grab",f._grabbingCursor="-webkit-grabbing"),f._setGrabCursor())},u=f.ns,v=function(a,b,c,d,e){f._downEvent=a+b+u,f._moveEvent=a+c+u,f._upEvent=a+d+u,e&&(f._cancelEvent=a+e+u)};f.msEnabled=window.navigator.msPointerEnabled,f.msEnabled?(f.msTouch=Boolean(window.navigator.msMaxTouchPoints>1),f.hasTouch=!1,f._lastItemFriction=.2,v("MSPointer","Down","Move","Up","Cancel")):(v("mouse","down","move","up","up"),"ontouchstart"in window||"createTouch"in document?(f.hasTouch=!0,f._downEvent+=" touchstart"+u,f._moveEvent+=" touchmove"+u,f._upEvent+=" touchend"+u,f._cancelEvent+=" touchcancel"+u,f._lastItemFriction=.5,f.st.sliderTouch&&(f._hasDrag=!0)):(f.hasTouch=!1,f._lastItemFriction=.2)),t(),f.slider.html(r),f._controlsContainer=f.st.controlsInside?f._sliderOverflow:f.slider,f._slidesContainer=f._sliderOverflow.children(".rsContainer"),f.msEnabled&&f._slidesContainer.css("-ms-touch-action",f._slidesHorizontal?"pan-y":"pan-x"),f._preloader=a('<div class="rsPreloader"></div>');var w=f._slidesContainer.children(".rsSlide");if(f._currHolder=f.slidesJQ[f.currSlideId],f._selectedSlideHolder=0,f._useCSS3Transitions)if(f._TP="transition-property",f._TD="transition-duration",f._TTF="transition-timing-function",f._yProp=f._xProp=f._vendorPref+"transform",f._use3dTransform?(o.webkit&&f.slider.addClass("rsWebkit3d"),f._tPref1="translate3d(",f._tPref2="px, ",f._tPref3="px, 0px)"):(f._tPref1="translate(",f._tPref2="px, ",f._tPref3="px)"),f._isMove)f._slidesContainer[f._vendorPref+f._TP]=f._vendorPref+"transform";else{var x={};x[f._vendorPref+f._TP]="opacity",x[f._vendorPref+f._TD]=f.st.transitionSpeed+"ms",x[f._vendorPref+f._TTF]=f.st.css3easeInOut,w.css(x)}else f._xProp="left",f._yProp="top";var y;if(a(window).on("resize"+f.ns,function(){y&&clearTimeout(y),y=setTimeout(function(){f.updateSliderSize()},50)}),f.ev.trigger("rsAfterPropsSetup"),f.updateSliderSize(),f.st.keyboardNavEnabled&&f._bindKeyboardNav(),f.st.arrowsNavHideOnTouch&&(f.hasTouch||f.msTouch)&&(f.st.arrowsNav=!1),f.st.arrowsNav){var z="rsArrow",A=f._controlsContainer;if(a('<div class="'+z+" "+z+'Left"><div class="'+z+'Icn"></div></div><div class="'+z+" "+z+'Right"><div class="'+z+'Icn"></div></div>').appendTo(A),f._arrowLeft=A.children("."+z+"Left").click(function(a){a.preventDefault(),f.prev()}),f._arrowRight=A.children("."+z+"Right").click(function(a){a.preventDefault(),f.next()}),f.st.arrowsNavAutoHide&&!f.hasTouch){f._arrowLeft.addClass("rsHidden"),f._arrowRight.addClass("rsHidden");var B=A;B.one("mousemove.arrowshover",function(){f._arrowLeft.removeClass("rsHidden"),f._arrowRight.removeClass("rsHidden")}),B.hover(function(){f._arrowsAutoHideLocked||(f._arrowLeft.removeClass("rsHidden"),f._arrowRight.removeClass("rsHidden"))},function(){f._arrowsAutoHideLocked||(f._arrowLeft.addClass("rsHidden"),f._arrowRight.addClass("rsHidden"))})}f.ev.on("rsOnUpdateNav",function(){f._updateArrowsNav()}),f._updateArrowsNav()}f._hasDrag?f._slidesContainer.on(f._downEvent,function(a){f._onDragStart(a)}):f.dragSuccess=!1;var C=["rsPlayBtnIcon","rsPlayBtn","rsCloseVideoBtn","rsCloseVideoIcn"];f._slidesContainer.click(function(b){if(!f.dragSuccess){var c=a(b.target),d=c.attr("class");if(-1!==a.inArray(d,C)&&f.toggleVideo())return!1;if(f.st.navigateByClick&&!f._blockActions){if(a(b.target).closest(".rsNoDrag",f._currHolder).length)return!0;f._mouseNext(b)}f.ev.trigger("rsSlideClick")}}).on("click.rs","a",function(){return f.dragSuccess?!1:(f._blockActions=!0,void setTimeout(function(){f._blockActions=!1},3))}),f.ev.trigger("rsAfterInit")}a.rsModules||(a.rsModules={uid:0}),b.prototype={constructor:b,_mouseNext:function(a){var b=this,c=a[b._slidesHorizontal?"pageX":"pageY"]-b._sliderOffset;c>=b._nextSlidePos?b.next():0>c&&b.prev()},_refreshNumPreloadImages:function(){var a,b=this;a=b.st.numImagesToPreload,b._loop=b.st.loop,b._loop&&(2===b.numSlides?(b._loop=!1,b.st.loopRewind=!0):b.numSlides<2&&(b.st.loopRewind=b._loop=!1)),b._loop&&a>0&&(b.numSlides<=4?a=1:b.st.numImagesToPreload>(b.numSlides-1)/2&&(a=Math.floor((b.numSlides-1)/2))),b._numPreloadImages=a},_parseNode:function(b,c){function d(a,b){if(h.images.push(b?a.attr(b):a.text()),i){i=!1,h.caption="src"===b?a.attr("alt"):a.contents(),h.image=h.images[0],h.videoURL=a.attr("data-rsVideo");var c=a.attr("data-rsw"),d=a.attr("data-rsh");"undefined"!=typeof c&&c!==!1&&"undefined"!=typeof d&&d!==!1?(h.iW=parseInt(c),h.iH=parseInt(d)):g.st.imgWidth&&g.st.imgHeight&&(h.iW=g.st.imgWidth,h.iH=g.st.imgHeight)}}var e,f,g=this,h={},i=!0;return b=a(b),g._currContent=b,g.ev.trigger("rsBeforeParseNode",[b,h]),h.stopParsing?void 0:(b=g._currContent,h.id=g._idCount,h.contentAdded=!1,g._idCount++,h.images=[],h.isBig=!1,h.hasCover||(b.hasClass("rsImg")?(f=b,e=!0):(f=b.find(".rsImg"),f.length&&(e=!0)),e?(h.bigImage=f.eq(0).attr("data-rsBigImg"),f.each(function(){var b=a(this);b.is("a")?d(b,"href"):b.is("img")?d(b,"src"):d(b)})):b.is("img")&&(b.addClass("rsImg rsMainSlideImage"),d(b,"src"))),f=b.find(".rsCaption"),f.length&&(h.caption=f.remove()),h.content=b,g.ev.trigger("rsAfterParseNode",[b,h]),c&&g.slides.push(h),0===h.images.length&&(h.isLoaded=!0,h.isRendered=!1,h.isLoading=!1,h.images=null),h)},_bindKeyboardNav:function(){var a,b,c=this,d=function(a){37===a?c.prev():39===a&&c.next()};c._doc.on("keydown"+c.ns,function(e){c._isDragging||(b=e.keyCode,(37===b||39===b)&&(a||(d(b),a=setInterval(function(){d(b)},700))))}).on("keyup"+c.ns,function(){a&&(clearInterval(a),a=null)})},goTo:function(a,b){var c=this;a!==c.currSlideId&&c._moveTo(a,c.st.transitionSpeed,!0,!b)},destroy:function(b){var c=this;c.ev.trigger("rsBeforeDestroy"),c._doc.off("keydown"+c.ns+" keyup"+c.ns+" "+c._moveEvent+" "+c._upEvent),c._slidesContainer.off(c._downEvent+" click"),c.slider.data("royalSlider",null),a.removeData(c.slider,"royalSlider"),a(window).off("resize"+c.ns),b&&c.slider.remove(),c.slides=null,c.slider=null,c.ev=null},_updateBlocksContent:function(b,c){function d(c,d,g){c.isAdded?(e(d,c),f(d,c)):(g||(g=j.slidesJQ[d]),c.holder?g=c.holder:(g=j.slidesJQ[d]=a(g),c.holder=g),c.appendOnLoaded=!1,f(d,c,g),e(d,c),j._addBlockToContainer(c,g,b),c.isAdded=!0,appended=!0)}function e(a,c){c.contentAdded||(j.setItemHtml(c,b),b||(c.contentAdded=!0))}function f(a,b,c){j._isMove&&(c||(c=j.slidesJQ[a]),c.css(j._reorderProp,(a+j._idOffset+m)*j._slideSize))}function g(a){if(k){if(a>l-1)return g(a-l);if(0>a)return g(l+a)}return a}var h,i,j=this,k=j._loop,l=j.numSlides;if(!isNaN(c))return g(c);var m,n,o=j.currSlideId,p=b?Math.abs(j._prevSlideId-j.currSlideId)>=j.numSlides-1?0:1:j._numPreloadImages,q=Math.min(2,p),r=!1,s=!1;for(i=o;o+1+q>i;i++)if(n=g(i),h=j.slides[n],h&&(!h.isAdded||!h.positionSet)){r=!0;break}for(i=o-1;i>o-1-q;i--)if(n=g(i),h=j.slides[n],h&&(!h.isAdded||!h.positionSet)){s=!0;break}if(r)for(i=o;o+p+1>i;i++)n=g(i),m=Math.floor((j._realId-(o-i))/j.numSlides)*j.numSlides,h=j.slides[n],h&&d(h,n);if(s)for(i=o-1;i>o-1-p;i--)n=g(i),m=Math.floor((j._realId-(o-i))/l)*l,h=j.slides[n],h&&d(h,n);if(!b){var t=g(o-p),u=g(o+p),v=t>u?0:t;for(i=0;l>i;i++)t>u&&i>t-1||(v>i||i>u)&&(h=j.slides[i],h&&h.holder&&(h.holder.detach(),h.isAdded=!1))}},setItemHtml:function(b,c){function d(){if(!b.images)return b.isRendered=!0,b.isLoaded=!0,b.isLoading=!1,void h(!0);if(!b.isLoading){var c,d;b.content.hasClass("rsImg")?(c=b.content,d=!0):c=b.content.find(".rsImg:not(img)"),c&&!c.is("img")&&c.each(function(){var c=a(this),e='<img class="rsImg" src="'+(c.is("a")?c.attr("href"):c.text())+'" />';d?b.content=a(e):c.replaceWith(e)}),c=d?b.content:b.content.find("img.rsImg"),j(),c.eq(0).addClass("rsMainSlideImage"),b.iW&&b.iH&&(b.isLoaded||l._resizeImage(b),h()),b.isLoading=!0;if(b.isBig)a("<img />").on("load.rs error.rs",function(){e([this],!0)}).attr("src",b.image);else{b.loaded=[],b.imgLoaders=[];for(var f=0;f<b.images.length;f++){var g=a("<img />");b.imgLoaders.push(this),g.on("load.rs error.rs",function(){b.loaded.push(this),b.loaded.length===b.imgLoaders.length&&e(b.loaded,!1)}).attr("src",b.images[f])}}}}function e(a,c){if(a.length){{var d=a[0];d.src}if(c!==b.isBig){var e=b.holder.children();return void(e&&e.length>1&&k())}if(b.iW&&b.iH)return void f();if(b.iW=d.width,b.iH=d.height,b.iW&&b.iH)return void f();var g=new Image;g.onload=function(){g.width?(b.iW=g.width,b.iH=g.height,f()):setTimeout(function(){g.width&&(b.iW=g.width,b.iH=g.height),f()},1e3)},g.src=d.src}else f()}function f(){b.isLoaded=!0,b.isLoading=!1,h(),k(),i()}function g(){return!l._isMove&&b.images&&b.iW&&b.iH?void d():(b.holder.isWaiting=!0,j(),void(b.holder.slideId=-99))}function h(){if(!b.isAppended){var a=l.st.visibleNearby,d=b.id-l._newSlideId;if(!c&&!b.appendOnLoaded&&l.st.fadeinLoadedSlide&&(0===d||(a||l._isAnimating||l._isDragging)&&(-1===d||1===d))){var e={visibility:"visible",opacity:0};e[l._vendorPref+"transition"]="opacity 400ms ease-in-out",b.content.css(e),setTimeout(function(){b.content.css("opacity",1)},16)}b.holder.find(".rsPreloader").length?b.holder.append(b.content):b.holder.html(b.content),b.isAppended=!0,b.isLoaded&&(l._resizeImage(b),i()),b.sizeReady||(b.sizeReady=!0,setTimeout(function(){l.ev.trigger("rsMaybeSizeReady",b)},100))}}function i(){b.loadedTriggered||(b.isLoaded=b.loadedTriggered=!0,b.holder.trigger("rsAfterContentSet"),l.ev.trigger("rsAfterContentSet",b))}function j(){l.st.usePreloader&&b.holder.html(l._preloader.clone())}function k(){if(l.st.usePreloader){var a=b.holder.find(".rsPreloader");a.length&&a.remove()}}var l=this;return b.isLoaded?void h():void(c?g():d())},_addBlockToContainer:function(a){{var b=this,c=a.holder;a.id-b._newSlideId}b._slidesContainer.append(c),a.appendOnLoaded=!1},_onDragStart:function(b,c){var d,e=this,f="touchstart"===b.type;if(e._isTouchGesture=f,e.ev.trigger("rsDragStart"),a(b.target).closest(".rsNoDrag",e._currHolder).length)return e.dragSuccess=!1,!0;if(c||e._isAnimating&&(e._wasAnimating=!0,e._stopAnimation()),e.dragSuccess=!1,e._isDragging)return void(f&&(e._multipleTouches=!0));if(f&&(e._multipleTouches=!1),e._setGrabbingCursor(),f){var g=b.originalEvent.touches;if(!(g&&g.length>0))return;d=g[0],g.length>1&&(e._multipleTouches=!0)}else b.preventDefault(),d=b,e.msEnabled&&(d=d.originalEvent);e._isDragging=!0,e._doc.on(e._moveEvent,function(a){e._onDragMove(a,c)}).on(e._upEvent,function(a){e._onDragRelease(a,c)}),e._currMoveAxis="",e._hasMoved=!1,e._pageX=d.pageX,e._pageY=d.pageY,e._startPagePos=e._accelerationPos=(c?e._thumbsHorizontal:e._slidesHorizontal)?d.pageX:d.pageY,e._horDir=0,e._verDir=0,e._currRenderPosition=c?e._thumbsPosition:e._sPosition,e._startTime=(new Date).getTime(),f&&e._sliderOverflow.on(e._cancelEvent,function(a){e._onDragRelease(a,c)})},_renderMovement:function(a,b){var c=this;if(c._checkedAxis){var d=c._renderMoveTime,e=a.pageX-c._pageX,f=a.pageY-c._pageY,g=c._currRenderPosition+e,h=c._currRenderPosition+f,i=b?c._thumbsHorizontal:c._slidesHorizontal,j=i?g:h,k=c._currMoveAxis;c._hasMoved=!0,c._pageX=a.pageX,c._pageY=a.pageY,"x"===k&&0!==e?c._horDir=e>0?1:-1:"y"===k&&0!==f&&(c._verDir=f>0?1:-1);var l=i?c._pageX:c._pageY,m=i?e:f;b?j>c._thumbsMinPosition?j=c._currRenderPosition+m*c._lastItemFriction:j<c._thumbsMaxPosition&&(j=c._currRenderPosition+m*c._lastItemFriction):c._loop||(c.currSlideId<=0&&l-c._startPagePos>0&&(j=c._currRenderPosition+m*c._lastItemFriction),c.currSlideId>=c.numSlides-1&&l-c._startPagePos<0&&(j=c._currRenderPosition+m*c._lastItemFriction)),c._currRenderPosition=j,d-c._startTime>200&&(c._startTime=d,c._accelerationPos=l),b?c._setThumbsPosition(c._currRenderPosition):c._isMove&&c._setPosition(c._currRenderPosition)}},_onDragMove:function(a,b){var c,d=this,e="touchmove"===a.type;if(!d._isTouchGesture||e){if(e){if(d._lockAxis)return;var f=a.originalEvent.touches;if(!f)return;if(f.length>1)return;c=f[0]}else c=a,d.msEnabled&&(c=c.originalEvent);if(d._hasMoved||(d._useCSS3Transitions&&(b?d._thumbsContainer:d._slidesContainer).css(d._vendorPref+d._TD,"0s"),function i(){d._isDragging&&(d._animFrame=requestAnimationFrame(i),d._renderMoveEvent&&d._renderMovement(d._renderMoveEvent,b))}()),d._checkedAxis)a.preventDefault(),d._renderMoveTime=(new Date).getTime(),d._renderMoveEvent=c;else{var g=b?d._thumbsHorizontal:d._slidesHorizontal,h=Math.abs(c.pageX-d._pageX)-Math.abs(c.pageY-d._pageY)-(g?-7:7);if(h>7){if(g)a.preventDefault(),d._currMoveAxis="x";else if(e)return void d._completeGesture();d._checkedAxis=!0}else if(-7>h){if(g){if(e)return void d._completeGesture()}else a.preventDefault(),d._currMoveAxis="y";d._checkedAxis=!0}}}},_completeGesture:function(){var a=this;a._lockAxis=!0,a._hasMoved=a._isDragging=!1,a._onDragRelease()},_onDragRelease:function(b,c){function d(a){return 100>a?100:a>500?500:a}function e(a,b){(l._isMove||c)&&(j=(-l._realId-l._idOffset)*l._slideSize,k=Math.abs(l._sPosition-j),l._currAnimSpeed=k/b,a&&(l._currAnimSpeed+=250),l._currAnimSpeed=d(l._currAnimSpeed),l._animateTo(j,!1))}var f,g,h,i,j,k,l=this,m="touchend"===b.type||"touchcancel"===b.type;if(!l._isTouchGesture||m){if(l._isTouchGesture=!1,l.ev.trigger("rsDragRelease"),l._renderMoveEvent=null,l._isDragging=!1,l._lockAxis=!1,l._checkedAxis=!1,l._renderMoveTime=0,cancelAnimationFrame(l._animFrame),l._hasMoved&&(c?l._setThumbsPosition(l._currRenderPosition):l._isMove&&l._setPosition(l._currRenderPosition)),l._doc.off(l._moveEvent).off(l._upEvent),m&&l._sliderOverflow.off(l._cancelEvent),l._setGrabCursor(),!l._hasMoved&&!l._multipleTouches&&c&&l._thumbsEnabled){var n=a(b.target).closest(".rsNavItem");return void(n.length&&l.goTo(n.index()))}var o=c?l._thumbsHorizontal:l._slidesHorizontal;if(!l._hasMoved||"y"===l._currMoveAxis&&o||"x"===l._currMoveAxis&&!o){if(c||!l._wasAnimating)return l._wasAnimating=!1,void(l.dragSuccess=!1);if(l._wasAnimating=!1,l.st.navigateByClick)return l._mouseNext(l.msEnabled?b.originalEvent:b),void(l.dragSuccess=!0);l.dragSuccess=!0}else l.dragSuccess=!0;l._wasAnimating=!1,l._currMoveAxis="";var p=l.st.minSlideOffset,q=m?b.originalEvent.changedTouches[0]:l.msEnabled?b.originalEvent:b,r=o?q.pageX:q.pageY,s=l._startPagePos,t=l._accelerationPos,u=l.currSlideId,v=l.numSlides,w=o?l._horDir:l._verDir,x=l._loop,y=!1;if(f=Math.abs(r-s),g=r-t,h=(new Date).getTime()-l._startTime,i=Math.abs(g)/h,0===w||1>=v)return void e(!0,i);if(!x&&!c)if(0>=u){if(w>0)return void e(!0,i)}else if(u>=v-1&&0>w)return void e(!0,i);if(c){var z,j=l._thumbsPosition;if(j>l._thumbsMinPosition)j=l._thumbsMinPosition;else if(j<l._thumbsMaxPosition)j=l._thumbsMaxPosition;else{var A=.003,B=i*i/(2*A),C=-l._thumbsPosition,D=l._thumbsContainerSize-l._thumbsViewportSize+l._thumbsPosition;if(g>0&&B>C?(C+=l._thumbsViewportSize/(15/(B/i*A)),i=i*C/B,B=C):0>g&&B>D&&(D+=l._thumbsViewportSize/(15/(B/i*A)),i=i*D/B,B=D),z=Math.max(Math.round(i/A),50),j+=B*(0>g?-1:1),j>l._thumbsMinPosition)return void l._animateThumbsTo(j,z,!0,l._thumbsMinPosition,200);if(j<l._thumbsMaxPosition)return void l._animateThumbsTo(j,z,!0,l._thumbsMaxPosition,200)}l._animateThumbsTo(j,z,!0)}else if(r>s+p){if(0>w)return void e(!1,i);l._moveTo("prev",d(Math.abs(l._sPosition-(-l._realId-l._idOffset+1)*l._slideSize)/i),y,!0,!0)}else if(s-p>r){if(w>0)return void e(!1,i);l._moveTo("next",d(Math.abs(l._sPosition-(-l._realId-l._idOffset-1)*l._slideSize)/i),y,!0,!0)}else e(!1,i)}},_setPosition:function(a){var b=this;a=b._sPosition=a,b._useCSS3Transitions?b._slidesContainer.css(b._xProp,b._tPref1+(b._slidesHorizontal?a+b._tPref2+0:0+b._tPref2+a)+b._tPref3):b._slidesContainer.css(b._slidesHorizontal?b._xProp:b._yProp,a)},updateSliderSize:function(a){var b,c,d=this;if(d.st.autoScaleSlider){var e=d.st.autoScaleSliderWidth,f=d.st.autoScaleSliderHeight;d.st.autoScaleHeight?(b=d.slider.width(),b!=d.width&&(d.slider.css("height",b*(f/e)),b=d.slider.width()),c=d.slider.height()):(c=d.slider.height(),c!=d.height&&(d.slider.css("width",c*(e/f)),c=d.slider.height()),b=d.slider.width())}else b=d.slider.width(),c=d.slider.height();if(a||b!=d.width||c!=d.height){d.width=b,d.height=c,d._wrapWidth=b,d._wrapHeight=c,d.ev.trigger("rsBeforeSizeSet"),d.ev.trigger("rsAfterSizePropSet"),d._sliderOverflow.css({width:d._wrapWidth,height:d._wrapHeight}),d._slideSize=(d._slidesHorizontal?d._wrapWidth:d._wrapHeight)+d.st.slidesSpacing,d._imagePadding=d.st.imageScalePadding;var g,h;for(h=0;h<d.slides.length;h++)g=d.slides[h],g.positionSet=!1,g&&g.images&&g.isLoaded&&(g.isRendered=!1,d._resizeImage(g));if(d._cloneHolders)for(h=0;h<d._cloneHolders.length;h++)g=d._cloneHolders[h],g.holder.css(d._reorderProp,(g.id+d._idOffset)*d._slideSize);d._updateBlocksContent(),d._isMove&&(d._useCSS3Transitions&&d._slidesContainer.css(d._vendorPref+"transition-duration","0s"),d._setPosition((-d._realId-d._idOffset)*d._slideSize)),d.ev.trigger("rsOnUpdateNav")}d._sliderOffset=d._sliderOverflow.offset(),d._sliderOffset=d._sliderOffset[d._reorderProp]},appendSlide:function(a,b){var c=this,d=c._parseNode(a);(isNaN(b)||b>c.numSlides)&&(b=c.numSlides),c.slides.splice(b,0,d),c.slidesJQ.splice(b,0,'<div style="'+(c._isMove?"position:absolute;":c._opacityCSS)+'" class="rsSlide"></div>'),b<c.currSlideId&&c.currSlideId++,c.ev.trigger("rsOnAppendSlide",[d,b]),c._refreshSlides(b),b===c.currSlideId&&c.ev.trigger("rsAfterSlideChange")},removeSlide:function(a){var b=this,c=b.slides[a];c&&(c.holder&&c.holder.remove(),a<b.currSlideId&&b.currSlideId--,b.slides.splice(a,1),b.slidesJQ.splice(a,1),b.ev.trigger("rsOnRemoveSlide",[a]),b._refreshSlides(a),a===b.currSlideId&&b.ev.trigger("rsAfterSlideChange"))},_refreshSlides:function(){var a=this,b=a.numSlides,c=a._realId<=0?0:Math.floor(a._realId/b);a.numSlides=a.slides.length,0===a.numSlides?(a.currSlideId=a._idOffset=a._realId=0,a.currSlide=a._oldHolder=null):a._realId=c*a.numSlides+a.currSlideId;for(var d=0;d<a.numSlides;d++)a.slides[d].id=d;a.currSlide=a.slides[a.currSlideId],a._currHolder=a.slidesJQ[a.currSlideId],a.currSlideId>=a.numSlides?a.goTo(a.numSlides-1):a.currSlideId<0&&a.goTo(0),a._refreshNumPreloadImages(),a._isMove&&a._loop&&a._slidesContainer.css(a._vendorPref+a._TD,"0ms"),a._refreshSlidesTimeout&&clearTimeout(a._refreshSlidesTimeout),a._refreshSlidesTimeout=setTimeout(function(){a._isMove&&a._setPosition((-a._realId-a._idOffset)*a._slideSize),a._updateBlocksContent(),a._isMove||a._currHolder.css({display:"block",opacity:1})},14),a.ev.trigger("rsOnUpdateNav")},_setGrabCursor:function(){var a=this;a._hasDrag&&a._isMove&&(a._grabCursor?a._sliderOverflow.css("cursor",a._grabCursor):(a._sliderOverflow.removeClass("grabbing-cursor"),a._sliderOverflow.addClass("grab-cursor")))},_setGrabbingCursor:function(){var a=this;a._hasDrag&&a._isMove&&(a._grabbingCursor?a._sliderOverflow.css("cursor",a._grabbingCursor):(a._sliderOverflow.removeClass("grab-cursor"),a._sliderOverflow.addClass("grabbing-cursor")))},next:function(a){var b=this;b._moveTo("next",b.st.transitionSpeed,!0,!a)},prev:function(a){var b=this;b._moveTo("prev",b.st.transitionSpeed,!0,!a)},_moveTo:function(a,b,c,d,e){var f,g,h,i=this;if(i.ev.trigger("rsBeforeMove",[a,d]),newItemId="next"===a?i.currSlideId+1:"prev"===a?i.currSlideId-1:a=parseInt(a,10),!i._loop){if(0>newItemId)return void i._doBackAndForthAnim("left",!d);if(newItemId>=i.numSlides)return void i._doBackAndForthAnim("right",!d)}i._isAnimating&&(i._stopAnimation(!0),c=!1),g=newItemId-i.currSlideId,i._prevSlideId=i.currSlideId;var j,k=i.currSlideId,l=i.currSlideId+g,m=i._realId;i._loop?(l=i._updateBlocksContent(!1,l),m+=g):m=l,i._newSlideId=l,i._oldHolder=i.slidesJQ[i.currSlideId],i._realId=m,i.currSlideId=i._newSlideId,i.currSlide=i.slides[i.currSlideId],i._currHolder=i.slidesJQ[i.currSlideId];var n=i.st.slidesDiff,o=Boolean(g>0),p=Math.abs(g),q=Math.floor(k/i._numPreloadImages),r=Math.floor((k+(o?n:-n))/i._numPreloadImages),s=o?Math.max(q,r):Math.min(q,r),t=s*i._numPreloadImages+(o?i._numPreloadImages-1:0);t>i.numSlides-1?t=i.numSlides-1:0>t&&(t=0);var u=o?t-k:k-t;if(u>i._numPreloadImages&&(u=i._numPreloadImages),p>u+n)for(i._idOffset+=(p-(u+n))*(o?-1:1),b=1.4*b,h=0;h<i.numSlides;h++)i.slides[h].positionSet=!1;i._currAnimSpeed=b,i._updateBlocksContent(!0),e||(j=!0),f=(-m-i._idOffset)*i._slideSize,j?setTimeout(function(){i._isWorking=!1,i._animateTo(f,a,!1,c),i.ev.trigger("rsOnUpdateNav")},0):(i._animateTo(f,a,!1,c),i.ev.trigger("rsOnUpdateNav"))},_updateArrowsNav:function(){var a=this,b="rsArrowDisabled";if(a.st.arrowsNav){if(a.numSlides<=1)return a._arrowLeft.css("display","none"),void a._arrowRight.css("display","none");
a._arrowLeft.css("display","block"),a._arrowRight.css("display","block"),a._loop||a.st.loopRewind||(0===a.currSlideId?a._arrowLeft.addClass(b):a._arrowLeft.removeClass(b),a.currSlideId===a.numSlides-1?a._arrowRight.addClass(b):a._arrowRight.removeClass(b))}},_animateTo:function(b,c,d,e,f){function g(){var a;h&&(a=h.data("rsTimeout"),a&&(h!==i&&h.css({opacity:0,display:"none",zIndex:0}),clearTimeout(a),h.data("rsTimeout",""))),a=i.data("rsTimeout"),a&&(clearTimeout(a),i.data("rsTimeout",""))}var h,i,j=this,k={};if(isNaN(j._currAnimSpeed)&&(j._currAnimSpeed=400),j._sPosition=j._currRenderPosition=b,j.ev.trigger("rsBeforeAnimStart"),j._useCSS3Transitions)if(j._isMove){j._currAnimSpeed=parseInt(j._currAnimSpeed);var l=j._vendorPref+j._TD,m=j._vendorPref+j._TTF;k[l]=j._currAnimSpeed+"ms",k[m]=e?a.rsCSS3Easing[j.st.easeInOut]:a.rsCSS3Easing[j.st.easeOut],j._slidesContainer.css(k),e||!j.hasTouch?setTimeout(function(){j._setPosition(b)},5):j._setPosition(b)}else j._currAnimSpeed=j.st.transitionSpeed,h=j._oldHolder,i=j._currHolder,i.data("rsTimeout")&&i.css("opacity",0),g(),h&&h.data("rsTimeout",setTimeout(function(){k[j._vendorPref+j._TD]="0ms",k.zIndex=0,k.display="none",h.data("rsTimeout",""),h.css(k),setTimeout(function(){h.css("opacity",0)},16)},j._currAnimSpeed+60)),k.display="block",k.zIndex=j._fadeZIndex,k.opacity=0,k[j._vendorPref+j._TD]="0ms",k[j._vendorPref+j._TTF]=a.rsCSS3Easing[j.st.easeInOut],i.css(k),i.data("rsTimeout",setTimeout(function(){i.css(j._vendorPref+j._TD,j._currAnimSpeed+"ms"),i.data("rsTimeout",setTimeout(function(){i.css("opacity",1),i.data("rsTimeout","")},20))},20));else j._isMove?(k[j._slidesHorizontal?j._xProp:j._yProp]=b+"px",j._slidesContainer.animate(k,j._currAnimSpeed,e?j.st.easeInOut:j.st.easeOut)):(h=j._oldHolder,i=j._currHolder,i.stop(!0,!0).css({opacity:0,display:"block",zIndex:j._fadeZIndex}),j._currAnimSpeed=j.st.transitionSpeed,i.animate({opacity:1},j._currAnimSpeed,j.st.easeInOut),g(),h&&h.data("rsTimeout",setTimeout(function(){h.stop(!0,!0).css({opacity:0,display:"none",zIndex:0})},j._currAnimSpeed+60)));j._isAnimating=!0,j.loadingTimeout&&clearTimeout(j.loadingTimeout),j.loadingTimeout=f?setTimeout(function(){j.loadingTimeout=null,f.call()},j._currAnimSpeed+60):setTimeout(function(){j.loadingTimeout=null,j._animationComplete(c)},j._currAnimSpeed+60)},_stopAnimation:function(a){var b=this;if(b._isAnimating=!1,clearTimeout(b.loadingTimeout),b._isMove)if(b._useCSS3Transitions){if(!a){var c=b._sPosition,d=b._currRenderPosition=b._getTransformProp();b._slidesContainer.css(b._vendorPref+b._TD,"0ms"),c!==d&&b._setPosition(d)}}else b._slidesContainer.stop(!0),b._sPosition=parseInt(b._slidesContainer.css(b._xProp),10);else b._fadeZIndex>20?b._fadeZIndex=10:b._fadeZIndex++},_getTransformProp:function(){var a=this,b=window.getComputedStyle(a._slidesContainer.get(0),null).getPropertyValue(a._vendorPref+"transform"),c=b.replace(/^matrix\(/i,"").split(/, |\)$/g),d=0===c[0].indexOf("matrix3d");return parseInt(c[a._slidesHorizontal?d?12:4:d?13:5],10)},_getCSS3Prop:function(a,b){var c=this;return c._useCSS3Transitions?c._tPref1+(b?a+c._tPref2+0:0+c._tPref2+a)+c._tPref3:a},_animationComplete:function(){var a=this;a._isMove||(a._currHolder.css("z-index",0),a._fadeZIndex=10),a._isAnimating=!1,a.staticSlideId=a.currSlideId,a._updateBlocksContent(),a._slidesMoved=!1,a.ev.trigger("rsAfterSlideChange")},_doBackAndForthAnim:function(a,b){function c(){e._isAnimating=!1}function d(){e._isAnimating=!1,e._animateTo(f,"",!1,!0,c)}var e=this,f=(-e._realId-e._idOffset)*e._slideSize;if(0!==e.numSlides&&!e._isAnimating)return e.st.loopRewind?void e.goTo("left"===a?e.numSlides-1:0,b):void(e._isMove&&(e._currAnimSpeed=200,e._animateTo(f+("left"===a?30:-30),"",!1,!0,d)))},_resizeImage:function(a){var b=!0;if(!a.isRendered){var c,d,e=a.content,f="rsMainSlideImage",g=this,h=g.st.imageAlignCenter,i=g.st.imageScaleMode;if(a.videoURL&&(f="rsVideoContainer","fill"!==i?c=!0:(d=e,d.hasClass(f)||(d=d.find("."+f)),d.css({width:"100%",height:"100%"}),f="rsMainSlideImage")),e.hasClass(f)||(b=!1,e=e.find("."+f)),e){var j=a.iW,k=a.iH;if(a.isRendered=!0,"none"!==i||h){bMargin="fill"!==i?g._imagePadding:0;var l,m,n,o,p,q=g._wrapWidth-2*bMargin,r=g._wrapHeight-2*bMargin,s={};"fit-if-smaller"===i&&(j>q||k>r)&&(i="fit"),"fill"===i||"fit"===i?(l=q/j,m=r/k,n="fill"==i?l>m?l:m:"fit"==i?m>l?l:m:1,o=Math.ceil(j*n,10),p=Math.ceil(k*n,10)):(o=j,p=k),"none"!==i&&(s.width=o,s.height=p,c&&e.find(".rsImg").css({width:"100%",height:"100%"})),h&&(s.marginLeft=Math.floor((q-o)/2)+bMargin,s.marginTop=Math.floor((r-p)/2)+bMargin),e.css(s)}}}}},a.rsProto=b.prototype,a.fn.royalSlider=function(c){var d=arguments;return this.each(function(){var e=a(this);if("object"!=typeof c&&c){var f=e.data("royalSlider");if(f&&f[c])return f[c].apply(f,Array.prototype.slice.call(d,1))}else e.data("royalSlider")||e.data("royalSlider",new b(e,c))})},a.fn.royalSlider.defaults={slidesSpacing:8,startSlideId:0,loop:!1,loopRewind:!1,numImagesToPreload:4,fadeinLoadedSlide:!0,slidesOrientation:"horizontal",transitionType:"move",transitionSpeed:600,controlNavigation:"bullets",controlsInside:!0,arrowsNav:!0,arrowsNavAutoHide:!0,navigateByClick:!0,randomizeSlides:!1,sliderDrag:!0,sliderTouch:!0,keyboardNavEnabled:!1,fadeInAfterLoaded:!0,allowCSS3:!0,allowCSS3OnWebkit:!0,addActiveClass:!1,autoHeight:!1,easeOut:"easeOutSine",easeInOut:"easeInOutSine",minSlideOffset:10,imageScaleMode:"fit-if-smaller",imageAlignCenter:!0,imageScalePadding:4,usePreloader:!0,autoScaleSlider:!1,autoScaleSliderWidth:800,autoScaleSliderHeight:400,autoScaleHeight:!0,arrowsNavHideOnTouch:!1,globalCaption:!1,slidesDiff:2},a.rsCSS3Easing={easeOutSine:"cubic-bezier(0.390, 0.575, 0.565, 1.000)",easeInOutSine:"cubic-bezier(0.445, 0.050, 0.550, 0.950)"},a.extend(jQuery.easing,{easeInOutSine:function(a,b,c,d,e){return-d/2*(Math.cos(Math.PI*b/e)-1)+c},easeOutSine:function(a,b,c,d,e){return d*Math.sin(b/e*(Math.PI/2))+c},easeOutCubic:function(a,b,c,d,e){return d*((b=b/e-1)*b*b+1)+c}})}(jQuery,window),function(a){a.extend(a.rsProto,{_initAutoHeight:function(){var a=this;if(a.st.autoHeight){var b,c,d,e,f=function(f){d=a.slides[a.currSlideId],b=d.holder,b&&(c=b.height(),c&&c!==e&&(a._wrapHeight=c,a._useCSS3Transitions||!f?a._sliderOverflow.css("height",c):a._sliderOverflow.stop(!0,!0).animate({height:c},a.st.transitionSpeed)))};a.ev.on("rsMaybeSizeReady.rsAutoHeight",function(a,b){d===b&&f()}),a.ev.on("rsAfterContentSet.rsAutoHeight",function(a,b){d===b&&f()}),a.slider.addClass("rsAutoHeight"),a.ev.one("rsAfterInit",function(){setTimeout(function(){f(!1),setTimeout(function(){a.slider.append('<div style="clear:both; float: none;"></div>'),a._useCSS3Transitions&&a._sliderOverflow.css(a._vendorPref+"transition","height "+a.st.transitionSpeed+"ms ease-in-out")},16)},16)}),a.ev.on("rsBeforeAnimStart",function(){f(!0)}),a.ev.on("rsBeforeSizeSet",function(){setTimeout(function(){f(!1)},16)})}}}),a.rsModules.autoHeight=a.rsProto._initAutoHeight}(jQuery),function(a){a.extend(a.rsProto,{_initAutoplay:function(){var b,c=this;c._autoPlayDefaults={enabled:!1,stopAtAction:!0,pauseOnHover:!0,delay:2e3},!c.st.autoPlay&&c.st.autoplay&&(c.st.autoPlay=c.st.autoplay),c.st.autoPlay=a.extend({},c._autoPlayDefaults,c.st.autoPlay),c.st.autoPlay.enabled&&(c.ev.on("rsBeforeParseNode",function(c,d,e){d=a(d),b=d.attr("data-rsDelay"),b&&(e.customDelay=parseInt(b,10))}),c.ev.one("rsAfterInit",function(){c._setupAutoPlay()}),c.ev.on("rsBeforeDestroy",function(){c.stopAutoPlay(),a(window).off("blur"+c.ns+" focus"+c.ns)}))},_setupAutoPlay:function(){var b=this;b.startAutoPlay(),b.ev.on("rsAfterContentSet",function(a,c){b._isDragging||b._isAnimating||!b._autoPlayEnabled||c!==b.currSlide||b._play()}),b.ev.on("rsDragRelease",function(){b._autoPlayEnabled&&b._autoPlayPaused&&(b._autoPlayPaused=!1,b._play())}),b.ev.on("rsAfterSlideChange",function(){b._autoPlayEnabled&&b._autoPlayPaused&&(b._autoPlayPaused=!1,b.currSlide.isLoaded&&b._play())}),b.ev.on("rsDragStart",function(){b._autoPlayEnabled&&(b.st.autoPlay.stopAtAction?b.stopAutoPlay():(b._autoPlayPaused=!0,b._pause()))}),b.ev.on("rsBeforeMove",function(a,c,d){b._autoPlayEnabled&&(d&&b.st.autoPlay.stopAtAction?b.stopAutoPlay():(b._autoPlayPaused=!0,b._pause()))}),b._pausedByVideo=!1,b.ev.on("rsVideoStop",function(){b._autoPlayEnabled&&(b._pausedByVideo=!1,b._play())}),b.ev.on("rsVideoPlay",function(){b._autoPlayEnabled&&(b._autoPlayPaused=!1,b._pause(),b._pausedByVideo=!0)}),a(window).on("blur"+b.ns,function(){b._autoPlayEnabled&&(b._autoPlayPaused=!0,b._pause())}).on("focus"+b.ns,function(){b._autoPlayEnabled&&b._autoPlayPaused&&(b._autoPlayPaused=!1,b._play())}),b.st.autoPlay.pauseOnHover&&(b._pausedByHover=!1,b.slider.hover(function(){b._autoPlayEnabled&&(b._autoPlayPaused=!1,b._pause(),b._pausedByHover=!0)},function(){b._autoPlayEnabled&&(b._pausedByHover=!1,b._play())}))},toggleAutoPlay:function(){var a=this;a._autoPlayEnabled?a.stopAutoPlay():a.startAutoPlay()},startAutoPlay:function(){var a=this;a._autoPlayEnabled=!0,a.currSlide.isLoaded&&a._play()},stopAutoPlay:function(){var a=this;a._pausedByVideo=a._pausedByHover=a._autoPlayPaused=a._autoPlayEnabled=!1,a._pause()},_play:function(){var a=this;a._pausedByHover||a._pausedByVideo||(a._autoPlayRunning=!0,a._autoPlayTimeout&&clearTimeout(a._autoPlayTimeout),a._autoPlayTimeout=setTimeout(function(){var b;a._loop||a.st.loopRewind||(b=!0,a.st.loopRewind=!0),a.next(!0),b&&(b=!1,a.st.loopRewind=!1)},a.currSlide.customDelay?a.currSlide.customDelay:a.st.autoPlay.delay))},_pause:function(){var a=this;a._pausedByHover||a._pausedByVideo||(a._autoPlayRunning=!1,a._autoPlayTimeout&&(clearTimeout(a._autoPlayTimeout),a._autoPlayTimeout=null))}}),a.rsModules.autoplay=a.rsProto._initAutoplay}(jQuery),jQuery(function(a){"use strict";a("html").not(".lt-ie9").coenvmenu()}),function(a,b,c,d){"use strict";a.CoEnvMenu=function(b,c){this.options=b,this.element=a(c),this._create(b)},a.CoEnvMenu.settings={outerSelector:"#outer",wrapperSelector:"#wrapper",menuSelector:".main-menu",submenuClass:"children",topMenuSelector:".top-menu",menuButtonSelector:"#show-menu button",topLevelItemSelector:".page-depth-0",mobileMenuClass:"mobile-menu",normalMenuClass:"normal-menu",normalTopMenuClass:"normal-top-menu",mobileTopMenuClass:"mobile-top-menu",mobileMenuActiveClass:"mobile-menu-active",mobileTopMenuActiveClass:"mobile-top-menu-active",menuItemActiveClass:"menu-item-active"},a.CoEnvMenu.prototype._create=function(b){this.options=a.extend(!0,{},a.CoEnvMenu.settings,b),this._init()},a.CoEnvMenu.prototype._init=function(){this.$outer=a(this.options.outerSelector),this.$wrapper=a(this.options.wrapperSelector),this.$menu=a(this.options.menuSelector),this.$topMenu=a(this.options.topMenuSelector),this.$menuButton=a(this.options.menuButtonSelector),this._buildMenu(),this._dropdowns(),this._setupMobileMenu(),this._addArrowIcons(),this._setupTopMenu(),this._handleMenuButton(),this._handleWrapperClicking(),this._handleMenuInteractions(),this._handleWindowResize()},a.CoEnvMenu.prototype._buildMenu=function(){var b=this,c=this.$menu.find(this.options.topLevelItemSelector),e=c.find("> ."+this.options.submenuClass),f=a('<div class="submenu-container"></div>');e.each(function(){var b=a(this).find("> li"),c=b.length,d=Math.round(c/2);b.slice(0,d).wrapAll('<li class="col-left"><ul></ul></li>'),b.slice(d,c).wrapAll('<li class="col-right"><ul></ul></li>')}),c.each(function(){var c,e,f=a(this).find("> span > a"),g=f.attr("title");c=g!==d&&g!==!1?g:f.text(),e=f.attr("href"),a(this).find("> ."+b.options.submenuClass).length||a(this).append('<ul class="'+b.options.submenuClass+'"></ul>'),a(this).find("> ."+b.options.submenuClass).prepend('<li class="pagenav"><a href="'+e+'">'+c+"</a></li>")}),this.$menu.find(this.options.topLevelItemSelector+" > ."+this.options.submenuClass).wrap(f)},a.CoEnvMenu.prototype._dropdowns=function(){var b=this;this.$menu.find(this.options.topLevelItemSelector).has("."+this.options.submenuClass).hoverIntent(function(){a(this).toggleClass(b.options.menuItemActiveClass)})},a.CoEnvMenu.prototype._setupMobileMenu=function(){this.$mobileMenu=this.$menu.clone(),this.$mobileMenu.removeClass(this.options.normalMenuClass).addClass(this.options.mobileMenuClass),this.$mobileMenu.appendTo(this.$outer).show()},a.CoEnvMenu.prototype._addArrowIcons=function(){this.$mobileMenu.find(this.options.topLevelItemSelector).has("."+this.options.submenuClass).each(function(){a(this).find("a").first().prepend("<i></i>")})},a.CoEnvMenu.prototype._setupTopMenu=function(){this.$mobileTopMenu=this.$topMenu.clone(),this.$mobileTopMenu.removeClass(this.options.normalTopMenuClass).addClass(this.options.mobileTopMenuClass),this.$mobileTopMenu.appendTo(this.$mobileMenu).show()},a.CoEnvMenu.prototype._handleMenuButton=function(){var a=this;this.$menuButton.fastClick(function(b){b.preventDefault(),a._toggleMobileMenu()})},a.CoEnvMenu.prototype._toggleMobileMenu=function(){a("html").toggleClass(this.options.mobileMenuActiveClass)},a.CoEnvMenu.prototype._handleWindowResize=function(){var c=this;a(b).on("resize",a.debounce(100,function(){a(b).width()>=768&&a("html").hasClass(c.options.mobileMenuActiveClass)&&c._toggleMobileMenu()}))},a.CoEnvMenu.prototype._handleWrapperClicking=function(){var b=this;this.$wrapper.on("click",function(c){a("html").hasClass(b.options.mobileMenuActiveClass)&&(c.preventDefault(),b._toggleMobileMenu())})},a.CoEnvMenu.prototype._handleMenuInteractions=function(){var b=this,c=this.$mobileMenu.find(this.options.topLevelItemSelector),d=c.find("> span > a");c.filter(".menu-item-active, .current_page_item, .current-page-ancestor").each(function(){a(this).addClass("expanded")}),d.fastClick(function(c){c.preventDefault();var d=a(this).parents(b.options.topLevelItemSelector),e=(a(this).find("i"),d.find("."+b.options.submenuClass));d.hasClass("expanded")?(e.slideUp(200),d.removeClass("expanded")):(e.slideDown(200),d.addClass("expanded"))})},a.CoEnvMenu.prototype.option=function(b){a.isPlainObject(b)&&(this.options=a.extend(!0,this.options,b))},a.fn.coenvmenu=function(b){if("string"==typeof b){var c=Array.prototype.slice.call(arguments,1);this.each(function(){var d=a.data(this,"coenvmenu");return d?a.isFunction(d[b])&&"_"!==b.charAt(0)?void d[b].apply(d,c):void console.log("error",'no such method "'+b+'" for coenvmenu instance'):void console.log("error",'cannot call methods on coenvmenu prior to initialization; attempted to call method "'+b+'"')})}else this.each(function(){var c=a.data(this,"coenvmenu");c?(c.option(b||{}),c._init()):a.data(this,"coenvmenu",new a.CoEnvMenu(b,this))});return this}}(jQuery,window,document),jQuery(function(a){"use strict";a("body").hasClass("lt-ie8")||a(".home #features").homeFeatures()}),$.fn.homeFeatures=function(){"use strict";var a,b,c,d=$(this),e=d.find(".features-container"),f=d.find(".feature"),g=$("<div></div>");if(e.length){a=e.offset().top,e.royalSlider({loop:!0,fadeInLoadedSlide:!1,autoHeight:!0,navigateByClick:!1,autoPlay:{enabled:!0,pauseOnHover:!0,stopAtAction:!1,delay:8e3}}),b=e.data("royalSlider"),f.removeClass("loading"),$(window).on("scroll",$.debounce(200,function(){var a=$(window).scrollTop(),c=e.offset().top,d=e.outerHeight(!0);a>c+d/2?b.stopAutoPlay():b.startAutoPlay()})),c="<ul>",g.addClass("features-nav");for(var h=0,i=b.numSlides;i>h;h++)c+='<li><a href="#"><span>'+(h+1)+"</span></a></li>";c+="</ul>",g.append($(c)),g.appendTo(d),g.find("a").eq(b.currSlideId).addClass("active"),g.find("a").on("click",function(a){a.preventDefault(),e.royalSlider("goTo",$(this).parent().index()),g.find("a").removeClass("active"),$(this).addClass("active")}),b.ev.on("rsAfterSlideChange",function(){g.find("a").removeClass("active"),g.find("a").eq(b.currSlideId).addClass("active")})}},jQuery(function(a){"use strict";a("#blog-header").blogHeader()}),$.fn.blogHeader=function(){"use strict";var a=$(this),b=a.find(".select-category select"),c=a.find(".select-month select");b.on("change",function(){var a=$(this).val(),b=$(this).parent("div").attr("data-url");window.location.href=b+a}),c.on("change",function(){var a=$(this).val();window.location.href=a})},function(a){"use strict";a.coenvshare=function(b,c){this.options=b,this.element=a(c),this._create(b)},a.coenvshare.settings={},a.coenvshare.prototype._create=function(b){this.options=a.extend(!0,{},a.coenvshare.settings,b),this._init()},a.coenvshare.prototype._init=function(){this.articleID=this.element.attr("data-article-id"),this.articleTitle=this.element.attr("data-article-title"),this.articleShortLink=this.element.attr("data-article-shortlink"),this.articlePermalink=this.element.attr("data-article-permalink"),"undefined"!=typeof this.articleID&&"undefined"!=typeof this.articleTitle&&"undefined"!=typeof this.articleShortLink&&"undefined"!=typeof this.articlePermalink&&(this.element.addClass("active"),this._buildModal(),this._interactions())},a.coenvshare.prototype._buildModal=function(){var b=[{name:"Twitter",className:"twitter",url:"http://twitter.com/home?status="+this.articleTitle+" "+this.articleShortLink+' from @UW_CoEnv" target="_blank'},{name:"Facebook",className:"facebook",url:"http://www.facebook.com/sharer/sharer.php?s=100&p[url]="+this.articleShortLink+"&p[images][0]=&p[title]="+this.articleTitle+' from UW College of the Environment" target="_blank'},{name:"Email",className:"email",url:"mailto:?subject="+this.articleTitle+"&body=Check%20out%20this%20article%20from%20the%20UW%20College%20of%20the%20Environment:%20"+this.articleShortLink}];this.$modal=a('<div class="share-modal" role="dialog" aria-labelledby="shareModal" aria-hidden="true"></div>'),this.$modal.append('<div class="share-modal-inner"><ul class="share-modal-content"></ul></div>');for(var c=0,d=b.length;d>c;c++)this.$modal.find(".share-modal-content").append('<a href="'+b[c].url+'" ><li class="social-link share-'+b[c].className+'"></li></a>')},a.coenvshare.prototype._interactions=function(){var b=this;this.element.on("click",function(a){a.preventDefault(),a.stopPropagation(),b._launchModal()}),a("body").on("click",function(c){b.modalIsActive===!0&&(a(c.target).is(".social-link")||b._hideModal())})},a.coenvshare.prototype._launchModal=function(){var b=this;a(".post-"+this.articleID).prepend(this.$modal),this.$modal.addClass("active"),this.modalIsActive=!0,setTimeout(function(){b.$modal.addClass("active-visible")},10)},a.coenvshare.prototype._hideModal=function(){var a=this;this.$modal.removeClass("active-visible"),a.$modal.removeClass("active"),a.$modal.remove(),a.modalIsActive=!1},a.coenvshare.prototype.option=function(b){a.isPlainObject(b)&&(this.options=a.extend(!0,this.options,b))},a.fn.coenvshare=function(b){if("string"==typeof b){var c=Array.prototype.slice.call(arguments,1);this.each(function(){var d=a.data(this,"coenvshare");return d?a.isFunction(d[b])&&"_"!==b.charAt(0)?void d[b].apply(d,c):void console.log("error",'no such method "'+b+'" for coenvshare instance'):void console.log("error",'cannot call methods on coenvshare prior to initialization; attempted to call method "'+b+'"')})}else this.each(function(){var c=a.data(this,"coenvshare");c?(c.option(b||{}),c._init()):a.data(this,"coenvshare",new a.coenvshare(b,this))});return this}}(jQuery,window,document),jQuery(function(a){"use strict";a("body").hasClass("lt-ie8")||(a("select.chosen").chosen(),a("input, textarea").placeholder(),a(".article-content").handleFitVids(),a(".Faculty-member-tab-nav").memberTabs(),a(".banner-wrapper").bannerReveals(),a(".share").coenvshare())}),$.fn.bannerReveals=function(){"use strict";return this.each(function(){var a=$(this),b=$(".banner-info"),c="banner-revealed";b.on("click",function(a){a.preventDefault(),a.stopPropagation(),$("body").toggleClass(c)}),a.on("click",function(){$("body").hasClass(c)&&$("body").removeClass(c)})})},$.fn.handleFitVids=function(){"use strict";$(this).fitVids(),$(".fluid-width-video-wrapper").each(function(){var a=$(this),b=parseFloat(a.css("max-width")),c=parseFloat(a[0].style["padding-top"]),d=.01*b*c+"%";a.css("padding-top",d)})},$.fn.memberTabs=function(){"use strict";var a=$(this),b=$(".Faculty-member-tabs"),c="active-tab";a.find("a").click(function(d){d.preventDefault();var e=($(this),b.find("."+$(this).attr("data-tab")));a.find("."+c).removeClass(c),$(this).parent("li").addClass(c),b.find("."+c).removeClass(c),e.addClass(c)})};
//# sourceMappingURL=main.min.map
=======
/*! jQuery Migrate v1.1.0 | (c) 2005, 2013 jQuery Foundation, Inc. and other contributors | jquery.org/license */
jQuery.migrateMute === void 0 && (jQuery.migrateMute = !0), function(e, t, n) {
    "use strict";
    function r(n) {
        o[n] || (o[n] = !0, e.migrateWarnings.push(n), t.console && console.warn && !e.migrateMute && (console.warn("JQMIGRATE: " + n), 
        e.migrateTrace && console.trace && console.trace()));
    }
    function a(t, a, o, i) {
        if (Object.defineProperty) try {
            return Object.defineProperty(t, a, {
                configurable: !0,
                enumerable: !0,
                get: function() {
                    return r(i), o;
                },
                set: function(e) {
                    r(i), o = e;
                }
            }), n;
        } catch (s) {}
        e._definePropertyBroken = !0, t[a] = o;
    }
    var o = {};
    e.migrateWarnings = [], !e.migrateMute && t.console && console.log && console.log("JQMIGRATE: Logging is active"), 
    e.migrateTrace === n && (e.migrateTrace = !0), e.migrateReset = function() {
        o = {}, e.migrateWarnings.length = 0;
    }, "BackCompat" === document.compatMode && r("jQuery is not compatible with Quirks Mode");
    var i = {}, s = e.attr, u = e.attrHooks.value && e.attrHooks.value.get || function() {
        return null;
    }, c = e.attrHooks.value && e.attrHooks.value.set || function() {
        return n;
    }, l = /^(?:input|button)$/i, d = /^[238]$/, p = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i, f = /^(?:checked|selected)$/i;
    a(e, "attrFn", i, "jQuery.attrFn is deprecated"), e.attr = function(t, a, o, i) {
        var u = a.toLowerCase(), c = t && t.nodeType;
        return i && 4 > s.length && (r("jQuery.fn.attr( props, pass ) is deprecated"), t && !d.test(c) && e.isFunction(e.fn[a])) ? e(t)[a](o) : ("type" === a && o !== n && l.test(t.nodeName) && t.parentNode && r("Can't change the 'type' of an input or button in IE 6/7/8"), 
        !e.attrHooks[u] && p.test(u) && (e.attrHooks[u] = {
            get: function(t, r) {
                var a, o = e.prop(t, r);
                return o === !0 || "boolean" != typeof o && (a = t.getAttributeNode(r)) && a.nodeValue !== !1 ? r.toLowerCase() : n;
            },
            set: function(t, n, r) {
                var a;
                return n === !1 ? e.removeAttr(t, r) : (a = e.propFix[r] || r, a in t && (t[a] = !0), 
                t.setAttribute(r, r.toLowerCase())), r;
            }
        }, f.test(u) && r("jQuery.fn.attr('" + u + "') may use property instead of attribute")), 
        s.call(e, t, a, o));
    }, e.attrHooks.value = {
        get: function(e, t) {
            var n = (e.nodeName || "").toLowerCase();
            return "button" === n ? u.apply(this, arguments) : ("input" !== n && "option" !== n && r("jQuery.fn.attr('value') no longer gets properties"), 
            t in e ? e.value : null);
        },
        set: function(e, t) {
            var a = (e.nodeName || "").toLowerCase();
            return "button" === a ? c.apply(this, arguments) : ("input" !== a && "option" !== a && r("jQuery.fn.attr('value', val) no longer sets properties"), 
            e.value = t, n);
        }
    };
    var g, h, v = e.fn.init, m = e.parseJSON, y = /^(?:[^<]*(<[\w\W]+>)[^>]*|#([\w\-]*))$/;
    e.fn.init = function(t, n, a) {
        var o;
        return t && "string" == typeof t && !e.isPlainObject(n) && (o = y.exec(t)) && o[1] && ("<" !== t.charAt(0) && r("$(html) HTML strings must start with '<' character"), 
        n && n.context && (n = n.context), e.parseHTML) ? v.call(this, e.parseHTML(e.trim(t), n, !0), n, a) : v.apply(this, arguments);
    }, e.fn.init.prototype = e.fn, e.parseJSON = function(e) {
        return e || null === e ? m.apply(this, arguments) : (r("jQuery.parseJSON requires a valid JSON string"), 
        null);
    }, e.uaMatch = function(e) {
        e = e.toLowerCase();
        var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || 0 > e.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
        return {
            browser: t[1] || "",
            version: t[2] || "0"
        };
    }, g = e.uaMatch(navigator.userAgent), h = {}, g.browser && (h[g.browser] = !0, 
    h.version = g.version), h.chrome ? h.webkit = !0 : h.webkit && (h.safari = !0), 
    e.browser = h, a(e, "browser", h, "jQuery.browser is deprecated"), e.sub = function() {
        function t(e, n) {
            return new t.fn.init(e, n);
        }
        e.extend(!0, t, this), t.superclass = this, t.fn = t.prototype = this(), t.fn.constructor = t, 
        t.sub = this.sub, t.fn.init = function(r, a) {
            return a && a instanceof e && !(a instanceof t) && (a = t(a)), e.fn.init.call(this, r, a, n);
        }, t.fn.init.prototype = t.fn;
        var n = t(document);
        return r("jQuery.sub() is deprecated"), t;
    };
    var b = e.fn.data;
    e.fn.data = function(t) {
        var a, o, i = this[0];
        return !i || "events" !== t || 1 !== arguments.length || (a = e.data(i, t), o = e._data(i, t), 
        a !== n && a !== o || o === n) ? b.apply(this, arguments) : (r("Use of jQuery.fn.data('events') is deprecated"), 
        o);
    };
    var j = /\/(java|ecma)script/i, w = e.fn.andSelf || e.fn.addBack;
    e.fn.andSelf = function() {
        return r("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"), w.apply(this, arguments);
    }, e.clean || (e.clean = function(t, a, o, i) {
        a = a || document, a = !a.nodeType && a[0] || a, a = a.ownerDocument || a, r("jQuery.clean() is deprecated");
        var s, u, c, l, d = [];
        if (e.merge(d, e.buildFragment(t, a).childNodes), o) for (c = function(e) {
            return !e.type || j.test(e.type) ? i ? i.push(e.parentNode ? e.parentNode.removeChild(e) : e) : o.appendChild(e) : n;
        }, s = 0; null != (u = d[s]); s++) e.nodeName(u, "script") && c(u) || (o.appendChild(u), 
        u.getElementsByTagName !== n && (l = e.grep(e.merge([], u.getElementsByTagName("script")), c), 
        d.splice.apply(d, [ s + 1, 0 ].concat(l)), s += l.length));
        return d;
    });
    var Q = e.event.add, x = e.event.remove, k = e.event.trigger, N = e.fn.toggle, C = e.fn.live, T = e.fn.die, M = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess", S = RegExp("\\b(?:" + M + ")\\b"), H = /(?:^|\s)hover(\.\S+|)\b/, A = function(t) {
        return "string" != typeof t || e.event.special.hover ? t : (H.test(t) && r("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"), 
        t && t.replace(H, "mouseenter$1 mouseleave$1"));
    };
    e.event.props && "attrChange" !== e.event.props[0] && e.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"), 
    e.event.dispatch && a(e.event, "handle", e.event.dispatch, "jQuery.event.handle is undocumented and deprecated"), 
    e.event.add = function(e, t, n, a, o) {
        e !== document && S.test(t) && r("AJAX events should be attached to document: " + t), 
        Q.call(this, e, A(t || ""), n, a, o);
    }, e.event.remove = function(e, t, n, r, a) {
        x.call(this, e, A(t) || "", n, r, a);
    }, e.fn.error = function() {
        var e = Array.prototype.slice.call(arguments, 0);
        return r("jQuery.fn.error() is deprecated"), e.splice(0, 0, "error"), arguments.length ? this.bind.apply(this, e) : (this.triggerHandler.apply(this, e), 
        this);
    }, e.fn.toggle = function(t, n) {
        if (!e.isFunction(t) || !e.isFunction(n)) return N.apply(this, arguments);
        r("jQuery.fn.toggle(handler, handler...) is deprecated");
        var a = arguments, o = t.guid || e.guid++, i = 0, s = function(n) {
            var r = (e._data(this, "lastToggle" + t.guid) || 0) % i;
            return e._data(this, "lastToggle" + t.guid, r + 1), n.preventDefault(), a[r].apply(this, arguments) || !1;
        };
        for (s.guid = o; a.length > i; ) a[i++].guid = o;
        return this.click(s);
    }, e.fn.live = function(t, n, a) {
        return r("jQuery.fn.live() is deprecated"), C ? C.apply(this, arguments) : (e(this.context).on(t, this.selector, n, a), 
        this);
    }, e.fn.die = function(t, n) {
        return r("jQuery.fn.die() is deprecated"), T ? T.apply(this, arguments) : (e(this.context).off(t, this.selector || "**", n), 
        this);
    }, e.event.trigger = function(e, t, n, a) {
        return !n & !S.test(e) && r("Global events are undocumented and deprecated"), k.call(this, e, t, n || document, a);
    }, e.each(M.split("|"), function(t, n) {
        e.event.special[n] = {
            setup: function() {
                var t = this;
                return t !== document && (e.event.add(document, n + "." + e.guid, function() {
                    e.event.trigger(n, null, t, !0);
                }), e._data(this, n, e.guid++)), !1;
            },
            teardown: function() {
                return this !== document && e.event.remove(document, n + "." + e._data(this, n)), 
                !1;
            }
        };
    });
}(jQuery, window);

/**
 * jQuery.fastClick.js
 *
 * Work around the 300ms delay for the click event in some mobile browsers.
 *
 * Code based on <http://code.google.com/mobile/articles/fast_buttons.html>
 *
 * @usage
 * $('button').fastClick(function() {alert('clicked!');});
 *
 * @license Under Creative Commons Attribution 3.0 License
 * @author Dave Hulbert (dave1010)
 * @version 0.2 2011-09-20
 */
/*global document, window, jQuery, Math */
(function($) {
    $.fn.fastClick = function(handler) {
        return $(this).each(function() {
            $.FastButton($(this)[0], handler);
        });
    };
    $.FastButton = function(element, handler) {
        var startX, startY;
        var reset = function() {
            $(element).unbind("touchend");
            $("body").unbind("touchmove.fastClick");
        };
        var onClick = function(event) {
            event.stopPropagation();
            reset();
            handler.call(this, event);
            if (event.type === "touchend") {
                $.clickbuster.preventGhostClick(startX, startY);
            }
        };
        var onTouchMove = function(event) {
            if (Math.abs(event.originalEvent.touches[0].clientX - startX) > 10 || Math.abs(event.originalEvent.touches[0].clientY - startY) > 10) {
                reset();
            }
        };
        var onTouchStart = function(event) {
            event.stopPropagation();
            $(element).bind("touchend", onClick);
            $("body").bind("touchmove.fastClick", onTouchMove);
            startX = event.originalEvent.touches[0].clientX;
            startY = event.originalEvent.touches[0].clientY;
        };
        $(element).bind({
            touchstart: onTouchStart,
            click: onClick
        });
    };
    $.clickbuster = {
        coordinates: [],
        preventGhostClick: function(x, y) {
            $.clickbuster.coordinates.push(x, y);
            window.setTimeout($.clickbuster.pop, 2500);
        },
        pop: function() {
            $.clickbuster.coordinates.splice(0, 2);
        },
        onClick: function(event) {
            var x, y, i;
            for (i = 0; i < $.clickbuster.coordinates.length; i += 2) {
                x = $.clickbuster.coordinates[i];
                y = $.clickbuster.coordinates[i + 1];
                if (Math.abs(event.clientX - x) < 25 && Math.abs(event.clientY - y) < 25) {
                    event.stopPropagation();
                    event.preventDefault();
                }
            }
        }
    };
    $(function() {
        if (document.addEventListener) {
            document.addEventListener("click", $.clickbuster.onClick, true);
        } else if (document.attachEvent) {
            // for IE 7/8
            document.attachEvent("onclick", $.clickbuster.onClick);
        }
    });
})(jQuery);

/*!
 * jQuery throttle / debounce - v1.1 - 3/7/2010
 * http://benalman.com/projects/jquery-throttle-debounce-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
// Script: jQuery throttle / debounce: Sometimes, less is more!
//
// *Version: 1.1, Last updated: 3/7/2010*
// 
// Project Home - http://benalman.com/projects/jquery-throttle-debounce-plugin/
// GitHub       - http://github.com/cowboy/jquery-throttle-debounce/
// Source       - http://github.com/cowboy/jquery-throttle-debounce/raw/master/jquery.ba-throttle-debounce.js
// (Minified)   - http://github.com/cowboy/jquery-throttle-debounce/raw/master/jquery.ba-throttle-debounce.min.js (0.7kb)
// 
// About: License
// 
// Copyright (c) 2010 "Cowboy" Ben Alman,
// Dual licensed under the MIT and GPL licenses.
// http://benalman.com/about/license/
// 
// About: Examples
// 
// These working examples, complete with fully commented code, illustrate a few
// ways in which this plugin can be used.
// 
// Throttle - http://benalman.com/code/projects/jquery-throttle-debounce/examples/throttle/
// Debounce - http://benalman.com/code/projects/jquery-throttle-debounce/examples/debounce/
// 
// About: Support and Testing
// 
// Information about what version or versions of jQuery this plugin has been
// tested with, what browsers it has been tested in, and where the unit tests
// reside (so you can test it yourself).
// 
// jQuery Versions - none, 1.3.2, 1.4.2
// Browsers Tested - Internet Explorer 6-8, Firefox 2-3.6, Safari 3-4, Chrome 4-5, Opera 9.6-10.1.
// Unit Tests      - http://benalman.com/code/projects/jquery-throttle-debounce/unit/
// 
// About: Release History
// 
// 1.1 - (3/7/2010) Fixed a bug in <jQuery.throttle> where trailing callbacks
//       executed later than they should. Reworked a fair amount of internal
//       logic as well.
// 1.0 - (3/6/2010) Initial release as a stand-alone project. Migrated over
//       from jquery-misc repo v0.4 to jquery-throttle repo v1.0, added the
//       no_trailing throttle parameter and debounce functionality.
// 
// Topic: Note for non-jQuery users
// 
// jQuery isn't actually required for this plugin, because nothing internal
// uses any jQuery methods or properties. jQuery is just used as a namespace
// under which these methods can exist.
// 
// Since jQuery isn't actually required for this plugin, if jQuery doesn't exist
// when this plugin is loaded, the method described below will be created in
// the `Cowboy` namespace. Usage will be exactly the same, but instead of
// $.method() or jQuery.method(), you'll need to use Cowboy.method().
(function(window, undefined) {
    "$:nomunge";
    // Used by YUI compressor.
    // Since jQuery really isn't required for this plugin, use `jQuery` as the
    // namespace only if it already exists, otherwise use the `Cowboy` namespace,
    // creating it if necessary.
    var $ = window.jQuery || window.Cowboy || (window.Cowboy = {}), // Internal method reference.
    jq_throttle;
    // Method: jQuery.throttle
    // 
    // Throttle execution of a function. Especially useful for rate limiting
    // execution of handlers on events like resize and scroll. If you want to
    // rate-limit execution of a function to a single time, see the
    // <jQuery.debounce> method.
    // 
    // In this visualization, | is a throttled-function call and X is the actual
    // callback execution:
    // 
    // > Throttled with `no_trailing` specified as false or unspecified:
    // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||
    // > X    X    X    X    X    X        X    X    X    X    X    X
    // > 
    // > Throttled with `no_trailing` specified as true:
    // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||
    // > X    X    X    X    X             X    X    X    X    X
    // 
    // Usage:
    // 
    // > var throttled = jQuery.throttle( delay, [ no_trailing, ] callback );
    // > 
    // > jQuery('selector').bind( 'someevent', throttled );
    // > jQuery('selector').unbind( 'someevent', throttled );
    // 
    // This also works in jQuery 1.4+:
    // 
    // > jQuery('selector').bind( 'someevent', jQuery.throttle( delay, [ no_trailing, ] callback ) );
    // > jQuery('selector').unbind( 'someevent', callback );
    // 
    // Arguments:
    // 
    //  delay - (Number) A zero-or-greater delay in milliseconds. For event
    //    callbacks, values around 100 or 250 (or even higher) are most useful.
    //  no_trailing - (Boolean) Optional, defaults to false. If no_trailing is
    //    true, callback will only execute every `delay` milliseconds while the
    //    throttled-function is being called. If no_trailing is false or
    //    unspecified, callback will be executed one final time after the last
    //    throttled-function call. (After the throttled-function has not been
    //    called for `delay` milliseconds, the internal counter is reset)
    //  callback - (Function) A function to be executed after delay milliseconds.
    //    The `this` context and all arguments are passed through, as-is, to
    //    `callback` when the throttled-function is executed.
    // 
    // Returns:
    // 
    //  (Function) A new, throttled, function.
    $.throttle = jq_throttle = function(delay, no_trailing, callback, debounce_mode) {
        // After wrapper has stopped being called, this timeout ensures that
        // `callback` is executed at the proper times in `throttle` and `end`
        // debounce modes.
        var timeout_id, // Keep track of the last time `callback` was executed.
        last_exec = 0;
        // `no_trailing` defaults to falsy.
        if (typeof no_trailing !== "boolean") {
            debounce_mode = callback;
            callback = no_trailing;
            no_trailing = undefined;
        }
        // The `wrapper` function encapsulates all of the throttling / debouncing
        // functionality and when executed will limit the rate at which `callback`
        // is executed.
        function wrapper() {
            var that = this, elapsed = +new Date() - last_exec, args = arguments;
            // Execute `callback` and update the `last_exec` timestamp.
            function exec() {
                last_exec = +new Date();
                callback.apply(that, args);
            }
            // If `debounce_mode` is true (at_begin) this is used to clear the flag
            // to allow future `callback` executions.
            function clear() {
                timeout_id = undefined;
            }
            if (debounce_mode && !timeout_id) {
                // Since `wrapper` is being called for the first time and
                // `debounce_mode` is true (at_begin), execute `callback`.
                exec();
            }
            // Clear any existing timeout.
            timeout_id && clearTimeout(timeout_id);
            if (debounce_mode === undefined && elapsed > delay) {
                // In throttle mode, if `delay` time has been exceeded, execute
                // `callback`.
                exec();
            } else if (no_trailing !== true) {
                // In trailing throttle mode, since `delay` time has not been
                // exceeded, schedule `callback` to execute `delay` ms after most
                // recent execution.
                // 
                // If `debounce_mode` is true (at_begin), schedule `clear` to execute
                // after `delay` ms.
                // 
                // If `debounce_mode` is false (at end), schedule `callback` to
                // execute after `delay` ms.
                timeout_id = setTimeout(debounce_mode ? clear : exec, debounce_mode === undefined ? delay - elapsed : delay);
            }
        }
        // Set the guid of `wrapper` function to the same of original callback, so
        // it can be removed in jQuery 1.4+ .unbind or .die by using the original
        // callback as a reference.
        if ($.guid) {
            wrapper.guid = callback.guid = callback.guid || $.guid++;
        }
        // Return the wrapper function.
        return wrapper;
    };
    // Method: jQuery.debounce
    // 
    // Debounce execution of a function. Debouncing, unlike throttling,
    // guarantees that a function is only executed a single time, either at the
    // very beginning of a series of calls, or at the very end. If you want to
    // simply rate-limit execution of a function, see the <jQuery.throttle>
    // method.
    // 
    // In this visualization, | is a debounced-function call and X is the actual
    // callback execution:
    // 
    // > Debounced with `at_begin` specified as false or unspecified:
    // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||
    // >                          X                                 X
    // > 
    // > Debounced with `at_begin` specified as true:
    // > ||||||||||||||||||||||||| (pause) |||||||||||||||||||||||||
    // > X                                 X
    // 
    // Usage:
    // 
    // > var debounced = jQuery.debounce( delay, [ at_begin, ] callback );
    // > 
    // > jQuery('selector').bind( 'someevent', debounced );
    // > jQuery('selector').unbind( 'someevent', debounced );
    // 
    // This also works in jQuery 1.4+:
    // 
    // > jQuery('selector').bind( 'someevent', jQuery.debounce( delay, [ at_begin, ] callback ) );
    // > jQuery('selector').unbind( 'someevent', callback );
    // 
    // Arguments:
    // 
    //  delay - (Number) A zero-or-greater delay in milliseconds. For event
    //    callbacks, values around 100 or 250 (or even higher) are most useful.
    //  at_begin - (Boolean) Optional, defaults to false. If at_begin is false or
    //    unspecified, callback will only be executed `delay` milliseconds after
    //    the last debounced-function call. If at_begin is true, callback will be
    //    executed only at the first debounced-function call. (After the
    //    throttled-function has not been called for `delay` milliseconds, the
    //    internal counter is reset)
    //  callback - (Function) A function to be executed after delay milliseconds.
    //    The `this` context and all arguments are passed through, as-is, to
    //    `callback` when the debounced-function is executed.
    // 
    // Returns:
    // 
    //  (Function) A new, debounced, function.
    $.debounce = function(delay, at_begin, callback) {
        return callback === undefined ? jq_throttle(delay, at_begin, false) : jq_throttle(delay, callback, at_begin !== false);
    };
})(this);

// Chosen, a Select Box Enhancer for jQuery and Prototype
// by Patrick Filler for Harvest, http://getharvest.com
//
// Version 0.9.15
// Full source at https://github.com/harvesthq/chosen
// Copyright (c) 2011 Harvest http://getharvest.com
// MIT License, https://github.com/harvesthq/chosen/blob/master/LICENSE.md
// This file is generated by `cake build`, do not edit it by hand.
(function() {
    var SelectParser;
    SelectParser = function() {
        function SelectParser() {
            this.options_index = 0;
            this.parsed = [];
        }
        SelectParser.prototype.add_node = function(child) {
            if (child.nodeName.toUpperCase() === "OPTGROUP") {
                return this.add_group(child);
            } else {
                return this.add_option(child);
            }
        };
        SelectParser.prototype.add_group = function(group) {
            var group_position, option, _i, _len, _ref, _results;
            group_position = this.parsed.length;
            this.parsed.push({
                array_index: group_position,
                group: true,
                label: group.label,
                children: 0,
                disabled: group.disabled
            });
            _ref = group.childNodes;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                option = _ref[_i];
                _results.push(this.add_option(option, group_position, group.disabled));
            }
            return _results;
        };
        SelectParser.prototype.add_option = function(option, group_position, group_disabled) {
            if (option.nodeName.toUpperCase() === "OPTION") {
                if (option.text !== "") {
                    if (group_position != null) {
                        this.parsed[group_position].children += 1;
                    }
                    this.parsed.push({
                        array_index: this.parsed.length,
                        options_index: this.options_index,
                        value: option.value,
                        text: option.text,
                        html: option.innerHTML,
                        selected: option.selected,
                        disabled: group_disabled === true ? group_disabled : option.disabled,
                        group_array_index: group_position,
                        classes: option.className,
                        style: option.style.cssText
                    });
                } else {
                    this.parsed.push({
                        array_index: this.parsed.length,
                        options_index: this.options_index,
                        empty: true
                    });
                }
                return this.options_index += 1;
            }
        };
        return SelectParser;
    }();
    SelectParser.select_to_array = function(select) {
        var child, parser, _i, _len, _ref;
        parser = new SelectParser();
        _ref = select.childNodes;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            child = _ref[_i];
            parser.add_node(child);
        }
        return parser.parsed;
    };
    this.SelectParser = SelectParser;
}).call(this);

/*
Chosen source: generate output using 'cake build'
Copyright (c) 2011 by Harvest
*/
(function() {
    var AbstractChosen, root;
    root = this;
    AbstractChosen = function() {
        function AbstractChosen(form_field, options) {
            this.form_field = form_field;
            this.options = options != null ? options : {};
            if (!AbstractChosen.browser_is_supported()) {
                return;
            }
            this.is_multiple = this.form_field.multiple;
            this.set_default_text();
            this.set_default_values();
            this.setup();
            this.set_up_html();
            this.register_observers();
            this.finish_setup();
        }
        AbstractChosen.prototype.set_default_values = function() {
            var _this = this;
            this.click_test_action = function(evt) {
                return _this.test_active_click(evt);
            };
            this.activate_action = function(evt) {
                return _this.activate_field(evt);
            };
            this.active_field = false;
            this.mouse_on_container = false;
            this.results_showing = false;
            this.result_highlighted = null;
            this.result_single_selected = null;
            this.allow_single_deselect = this.options.allow_single_deselect != null && this.form_field.options[0] != null && this.form_field.options[0].text === "" ? this.options.allow_single_deselect : false;
            this.disable_search_threshold = this.options.disable_search_threshold || 0;
            this.disable_search = this.options.disable_search || false;
            this.enable_split_word_search = this.options.enable_split_word_search != null ? this.options.enable_split_word_search : true;
            this.search_contains = this.options.search_contains || false;
            this.single_backstroke_delete = this.options.single_backstroke_delete || false;
            this.max_selected_options = this.options.max_selected_options || Infinity;
            return this.inherit_select_classes = this.options.inherit_select_classes || false;
        };
        AbstractChosen.prototype.set_default_text = function() {
            if (this.form_field.getAttribute("data-placeholder")) {
                this.default_text = this.form_field.getAttribute("data-placeholder");
            } else if (this.is_multiple) {
                this.default_text = this.options.placeholder_text_multiple || this.options.placeholder_text || AbstractChosen.default_multiple_text;
            } else {
                this.default_text = this.options.placeholder_text_single || this.options.placeholder_text || AbstractChosen.default_single_text;
            }
            return this.results_none_found = this.form_field.getAttribute("data-no_results_text") || this.options.no_results_text || AbstractChosen.default_no_result_text;
        };
        AbstractChosen.prototype.mouse_enter = function() {
            return this.mouse_on_container = true;
        };
        AbstractChosen.prototype.mouse_leave = function() {
            return this.mouse_on_container = false;
        };
        AbstractChosen.prototype.input_focus = function(evt) {
            var _this = this;
            if (this.is_multiple) {
                if (!this.active_field) {
                    return setTimeout(function() {
                        return _this.container_mousedown();
                    }, 50);
                }
            } else {
                if (!this.active_field) {
                    return this.activate_field();
                }
            }
        };
        AbstractChosen.prototype.input_blur = function(evt) {
            var _this = this;
            if (!this.mouse_on_container) {
                this.active_field = false;
                return setTimeout(function() {
                    return _this.blur_test();
                }, 100);
            }
        };
        AbstractChosen.prototype.result_add_option = function(option) {
            var classes, style;
            if (!option.disabled) {
                option.dom_id = this.container_id + "_o_" + option.array_index;
                classes = option.selected && this.is_multiple ? [] : [ "active-result" ];
                if (option.selected) {
                    classes.push("result-selected");
                }
                if (option.group_array_index != null) {
                    classes.push("group-option");
                }
                if (option.classes !== "") {
                    classes.push(option.classes);
                }
                style = option.style.cssText !== "" ? ' style="' + option.style + '"' : "";
                return '<li id="' + option.dom_id + '" class="' + classes.join(" ") + '"' + style + ">" + option.html + "</li>";
            } else {
                return "";
            }
        };
        AbstractChosen.prototype.results_update_field = function() {
            this.set_default_text();
            if (!this.is_multiple) {
                this.results_reset_cleanup();
            }
            this.result_clear_highlight();
            this.result_single_selected = null;
            return this.results_build();
        };
        AbstractChosen.prototype.results_toggle = function() {
            if (this.results_showing) {
                return this.results_hide();
            } else {
                return this.results_show();
            }
        };
        AbstractChosen.prototype.results_search = function(evt) {
            if (this.results_showing) {
                return this.winnow_results();
            } else {
                return this.results_show();
            }
        };
        AbstractChosen.prototype.choices_count = function() {
            var option, _i, _len, _ref;
            if (this.selected_option_count != null) {
                return this.selected_option_count;
            }
            this.selected_option_count = 0;
            _ref = this.form_field.options;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                option = _ref[_i];
                if (option.selected) {
                    this.selected_option_count += 1;
                }
            }
            return this.selected_option_count;
        };
        AbstractChosen.prototype.choices_click = function(evt) {
            evt.preventDefault();
            if (!this.results_showing) {
                return this.results_show();
            }
        };
        AbstractChosen.prototype.keyup_checker = function(evt) {
            var stroke, _ref;
            stroke = (_ref = evt.which) != null ? _ref : evt.keyCode;
            this.search_field_scale();
            switch (stroke) {
              case 8:
                if (this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0) {
                    return this.keydown_backstroke();
                } else if (!this.pending_backstroke) {
                    this.result_clear_highlight();
                    return this.results_search();
                }
                break;

              case 13:
                evt.preventDefault();
                if (this.results_showing) {
                    return this.result_select(evt);
                }
                break;

              case 27:
                if (this.results_showing) {
                    this.results_hide();
                }
                return true;

              case 9:
              case 38:
              case 40:
              case 16:
              case 91:
              case 17:
                break;

              default:
                return this.results_search();
            }
        };
        AbstractChosen.prototype.generate_field_id = function() {
            var new_id;
            new_id = this.generate_random_id();
            this.form_field.id = new_id;
            return new_id;
        };
        AbstractChosen.prototype.generate_random_char = function() {
            var chars, newchar, rand;
            chars = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            rand = Math.floor(Math.random() * chars.length);
            return newchar = chars.substring(rand, rand + 1);
        };
        AbstractChosen.prototype.container_width = function() {
            if (this.options.width != null) {
                return this.options.width;
            } else {
                return "" + this.form_field.offsetWidth + "px";
            }
        };
        AbstractChosen.browser_is_supported = function() {
            var _ref;
            if (window.navigator.appName === "Microsoft Internet Explorer") {
                return null !== (_ref = document.documentMode) && _ref >= 8;
            }
            return true;
        };
        AbstractChosen.default_multiple_text = "Select Some Options";
        AbstractChosen.default_single_text = "Select an Option";
        AbstractChosen.default_no_result_text = "No results match";
        return AbstractChosen;
    }();
    root.AbstractChosen = AbstractChosen;
}).call(this);

/*
Chosen source: generate output using 'cake build'
Copyright (c) 2011 by Harvest
*/
(function() {
    var $, Chosen, root, _ref, __hasProp = {}.hasOwnProperty, __extends = function(child, parent) {
        for (var key in parent) {
            if (__hasProp.call(parent, key)) child[key] = parent[key];
        }
        function ctor() {
            this.constructor = child;
        }
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
        child.__super__ = parent.prototype;
        return child;
    };
    root = this;
    $ = jQuery;
    $.fn.extend({
        chosen: function(options) {
            if (!AbstractChosen.browser_is_supported()) {
                return this;
            }
            return this.each(function(input_field) {
                var $this;
                $this = $(this);
                if (!$this.hasClass("chzn-done")) {
                    return $this.data("chosen", new Chosen(this, options));
                }
            });
        }
    });
    Chosen = function(_super) {
        __extends(Chosen, _super);
        function Chosen() {
            _ref = Chosen.__super__.constructor.apply(this, arguments);
            return _ref;
        }
        Chosen.prototype.setup = function() {
            this.form_field_jq = $(this.form_field);
            this.current_selectedIndex = this.form_field.selectedIndex;
            return this.is_rtl = this.form_field_jq.hasClass("chzn-rtl");
        };
        Chosen.prototype.finish_setup = function() {
            return this.form_field_jq.addClass("chzn-done");
        };
        Chosen.prototype.set_up_html = function() {
            var container_classes, container_props;
            this.container_id = this.form_field.id.length ? this.form_field.id.replace(/[^\w]/g, "_") : this.generate_field_id();
            this.container_id += "_chzn";
            container_classes = [ "chzn-container" ];
            container_classes.push("chzn-container-" + (this.is_multiple ? "multi" : "single"));
            if (this.inherit_select_classes && this.form_field.className) {
                container_classes.push(this.form_field.className);
            }
            if (this.is_rtl) {
                container_classes.push("chzn-rtl");
            }
            container_props = {
                id: this.container_id,
                "class": container_classes.join(" "),
                style: "width: " + this.container_width() + ";",
                title: this.form_field.title
            };
            this.container = $("<div />", container_props);
            if (this.is_multiple) {
                this.container.html('<ul class="chzn-choices"><li class="search-field"><input type="text" value="' + this.default_text + '" class="default" autocomplete="off" style="width:25px;" /></li></ul><div class="chzn-drop"><ul class="chzn-results"></ul></div>');
            } else {
                this.container.html('<a href="javascript:void(0)" class="chzn-single chzn-default" tabindex="-1"><span>' + this.default_text + '</span><div><b></b></div></a><div class="chzn-drop"><div class="chzn-search"><input type="text" autocomplete="off" /></div><ul class="chzn-results"></ul></div>');
            }
            this.form_field_jq.hide().after(this.container);
            this.dropdown = this.container.find("div.chzn-drop").first();
            this.search_field = this.container.find("input").first();
            this.search_results = this.container.find("ul.chzn-results").first();
            this.search_field_scale();
            this.search_no_results = this.container.find("li.no-results").first();
            if (this.is_multiple) {
                this.search_choices = this.container.find("ul.chzn-choices").first();
                this.search_container = this.container.find("li.search-field").first();
            } else {
                this.search_container = this.container.find("div.chzn-search").first();
                this.selected_item = this.container.find(".chzn-single").first();
            }
            this.results_build();
            this.set_tab_index();
            this.set_label_behavior();
            return this.form_field_jq.trigger("liszt:ready", {
                chosen: this
            });
        };
        Chosen.prototype.register_observers = function() {
            var _this = this;
            this.container.mousedown(function(evt) {
                _this.container_mousedown(evt);
            });
            this.container.mouseup(function(evt) {
                _this.container_mouseup(evt);
            });
            this.container.mouseenter(function(evt) {
                _this.mouse_enter(evt);
            });
            this.container.mouseleave(function(evt) {
                _this.mouse_leave(evt);
            });
            this.search_results.mouseup(function(evt) {
                _this.search_results_mouseup(evt);
            });
            this.search_results.mouseover(function(evt) {
                _this.search_results_mouseover(evt);
            });
            this.search_results.mouseout(function(evt) {
                _this.search_results_mouseout(evt);
            });
            this.search_results.bind("mousewheel DOMMouseScroll", function(evt) {
                _this.search_results_mousewheel(evt);
            });
            this.form_field_jq.bind("liszt:updated", function(evt) {
                _this.results_update_field(evt);
            });
            this.form_field_jq.bind("liszt:activate", function(evt) {
                _this.activate_field(evt);
            });
            this.form_field_jq.bind("liszt:open", function(evt) {
                _this.container_mousedown(evt);
            });
            this.search_field.blur(function(evt) {
                _this.input_blur(evt);
            });
            this.search_field.keyup(function(evt) {
                _this.keyup_checker(evt);
            });
            this.search_field.keydown(function(evt) {
                _this.keydown_checker(evt);
            });
            this.search_field.focus(function(evt) {
                _this.input_focus(evt);
            });
            if (this.is_multiple) {
                return this.search_choices.click(function(evt) {
                    _this.choices_click(evt);
                });
            } else {
                return this.container.click(function(evt) {
                    evt.preventDefault();
                });
            }
        };
        Chosen.prototype.search_field_disabled = function() {
            this.is_disabled = this.form_field_jq[0].disabled;
            if (this.is_disabled) {
                this.container.addClass("chzn-disabled");
                this.search_field[0].disabled = true;
                if (!this.is_multiple) {
                    this.selected_item.unbind("focus", this.activate_action);
                }
                return this.close_field();
            } else {
                this.container.removeClass("chzn-disabled");
                this.search_field[0].disabled = false;
                if (!this.is_multiple) {
                    return this.selected_item.bind("focus", this.activate_action);
                }
            }
        };
        Chosen.prototype.container_mousedown = function(evt) {
            if (!this.is_disabled) {
                if (evt && evt.type === "mousedown" && !this.results_showing) {
                    evt.preventDefault();
                }
                if (!(evt != null && $(evt.target).hasClass("search-choice-close"))) {
                    if (!this.active_field) {
                        if (this.is_multiple) {
                            this.search_field.val("");
                        }
                        $(document).click(this.click_test_action);
                        this.results_show();
                    } else if (!this.is_multiple && evt && ($(evt.target)[0] === this.selected_item[0] || $(evt.target).parents("a.chzn-single").length)) {
                        evt.preventDefault();
                        this.results_toggle();
                    }
                    return this.activate_field();
                }
            }
        };
        Chosen.prototype.container_mouseup = function(evt) {
            if (evt.target.nodeName === "ABBR" && !this.is_disabled) {
                return this.results_reset(evt);
            }
        };
        Chosen.prototype.search_results_mousewheel = function(evt) {
            var delta, _ref1, _ref2;
            delta = -((_ref1 = evt.originalEvent) != null ? _ref1.wheelDelta : void 0) || ((_ref2 = evt.originialEvent) != null ? _ref2.detail : void 0);
            if (delta != null) {
                evt.preventDefault();
                if (evt.type === "DOMMouseScroll") {
                    delta = delta * 40;
                }
                return this.search_results.scrollTop(delta + this.search_results.scrollTop());
            }
        };
        Chosen.prototype.blur_test = function(evt) {
            if (!this.active_field && this.container.hasClass("chzn-container-active")) {
                return this.close_field();
            }
        };
        Chosen.prototype.close_field = function() {
            $(document).unbind("click", this.click_test_action);
            this.active_field = false;
            this.results_hide();
            this.container.removeClass("chzn-container-active");
            this.winnow_results_clear();
            this.clear_backstroke();
            this.show_search_field_default();
            return this.search_field_scale();
        };
        Chosen.prototype.activate_field = function() {
            this.container.addClass("chzn-container-active");
            this.active_field = true;
            this.search_field.val(this.search_field.val());
            return this.search_field.focus();
        };
        Chosen.prototype.test_active_click = function(evt) {
            if ($(evt.target).parents("#" + this.container_id).length) {
                return this.active_field = true;
            } else {
                return this.close_field();
            }
        };
        Chosen.prototype.results_build = function() {
            var content, data, _i, _len, _ref1;
            this.parsing = true;
            this.selected_option_count = null;
            this.results_data = root.SelectParser.select_to_array(this.form_field);
            if (this.is_multiple && this.choices_count() > 0) {
                this.search_choices.find("li.search-choice").remove();
            } else if (!this.is_multiple) {
                this.selected_item.addClass("chzn-default").find("span").text(this.default_text);
                if (this.disable_search || this.form_field.options.length <= this.disable_search_threshold) {
                    this.container.addClass("chzn-container-single-nosearch");
                } else {
                    this.container.removeClass("chzn-container-single-nosearch");
                }
            }
            content = "";
            _ref1 = this.results_data;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                data = _ref1[_i];
                if (data.group) {
                    content += this.result_add_group(data);
                } else if (!data.empty) {
                    content += this.result_add_option(data);
                    if (data.selected && this.is_multiple) {
                        this.choice_build(data);
                    } else if (data.selected && !this.is_multiple) {
                        this.selected_item.removeClass("chzn-default").find("span").text(data.text);
                        if (this.allow_single_deselect) {
                            this.single_deselect_control_build();
                        }
                    }
                }
            }
            this.search_field_disabled();
            this.show_search_field_default();
            this.search_field_scale();
            this.search_results.html(content);
            return this.parsing = false;
        };
        Chosen.prototype.result_add_group = function(group) {
            if (!group.disabled) {
                group.dom_id = this.container_id + "_g_" + group.array_index;
                return '<li id="' + group.dom_id + '" class="group-result">' + $("<div />").text(group.label).html() + "</li>";
            } else {
                return "";
            }
        };
        Chosen.prototype.result_do_highlight = function(el) {
            var high_bottom, high_top, maxHeight, visible_bottom, visible_top;
            if (el.length) {
                this.result_clear_highlight();
                this.result_highlight = el;
                this.result_highlight.addClass("highlighted");
                maxHeight = parseInt(this.search_results.css("maxHeight"), 10);
                visible_top = this.search_results.scrollTop();
                visible_bottom = maxHeight + visible_top;
                high_top = this.result_highlight.position().top + this.search_results.scrollTop();
                high_bottom = high_top + this.result_highlight.outerHeight();
                if (high_bottom >= visible_bottom) {
                    return this.search_results.scrollTop(high_bottom - maxHeight > 0 ? high_bottom - maxHeight : 0);
                } else if (high_top < visible_top) {
                    return this.search_results.scrollTop(high_top);
                }
            }
        };
        Chosen.prototype.result_clear_highlight = function() {
            if (this.result_highlight) {
                this.result_highlight.removeClass("highlighted");
            }
            return this.result_highlight = null;
        };
        Chosen.prototype.results_show = function() {
            if (this.result_single_selected != null) {
                this.result_do_highlight(this.result_single_selected);
            } else if (this.is_multiple && this.max_selected_options <= this.choices_count()) {
                this.form_field_jq.trigger("liszt:maxselected", {
                    chosen: this
                });
                return false;
            }
            this.container.addClass("chzn-with-drop");
            this.form_field_jq.trigger("liszt:showing_dropdown", {
                chosen: this
            });
            this.results_showing = true;
            this.search_field.focus();
            this.search_field.val(this.search_field.val());
            return this.winnow_results();
        };
        Chosen.prototype.results_hide = function() {
            this.result_clear_highlight();
            this.container.removeClass("chzn-with-drop");
            this.form_field_jq.trigger("liszt:hiding_dropdown", {
                chosen: this
            });
            return this.results_showing = false;
        };
        Chosen.prototype.set_tab_index = function(el) {
            var ti;
            if (this.form_field_jq.attr("tabindex")) {
                ti = this.form_field_jq.attr("tabindex");
                this.form_field_jq.attr("tabindex", -1);
                return this.search_field.attr("tabindex", ti);
            }
        };
        Chosen.prototype.set_label_behavior = function() {
            var _this = this;
            this.form_field_label = this.form_field_jq.parents("label");
            if (!this.form_field_label.length && this.form_field.id.length) {
                this.form_field_label = $("label[for='" + this.form_field.id + "']");
            }
            if (this.form_field_label.length > 0) {
                return this.form_field_label.click(function(evt) {
                    if (_this.is_multiple) {
                        return _this.container_mousedown(evt);
                    } else {
                        return _this.activate_field();
                    }
                });
            }
        };
        Chosen.prototype.show_search_field_default = function() {
            if (this.is_multiple && this.choices_count() < 1 && !this.active_field) {
                this.search_field.val(this.default_text);
                return this.search_field.addClass("default");
            } else {
                this.search_field.val("");
                return this.search_field.removeClass("default");
            }
        };
        Chosen.prototype.search_results_mouseup = function(evt) {
            var target;
            target = $(evt.target).hasClass("active-result") ? $(evt.target) : $(evt.target).parents(".active-result").first();
            if (target.length) {
                this.result_highlight = target;
                this.result_select(evt);
                return this.search_field.focus();
            }
        };
        Chosen.prototype.search_results_mouseover = function(evt) {
            var target;
            target = $(evt.target).hasClass("active-result") ? $(evt.target) : $(evt.target).parents(".active-result").first();
            if (target) {
                return this.result_do_highlight(target);
            }
        };
        Chosen.prototype.search_results_mouseout = function(evt) {
            if ($(evt.target).hasClass("active-result" || $(evt.target).parents(".active-result").first())) {
                return this.result_clear_highlight();
            }
        };
        Chosen.prototype.choice_build = function(item) {
            var choice, close_link, _this = this;
            choice = $("<li />", {
                "class": "search-choice"
            }).html("<span>" + item.html + "</span>");
            if (item.disabled) {
                choice.addClass("search-choice-disabled");
            } else {
                close_link = $("<a />", {
                    href: "#",
                    "class": "search-choice-close",
                    rel: item.array_index
                });
                close_link.click(function(evt) {
                    return _this.choice_destroy_link_click(evt);
                });
                choice.append(close_link);
            }
            return this.search_container.before(choice);
        };
        Chosen.prototype.choice_destroy_link_click = function(evt) {
            evt.preventDefault();
            evt.stopPropagation();
            if (!this.is_disabled) {
                return this.choice_destroy($(evt.target));
            }
        };
        Chosen.prototype.choice_destroy = function(link) {
            if (this.result_deselect(link.attr("rel"))) {
                this.show_search_field_default();
                if (this.is_multiple && this.choices_count() > 0 && this.search_field.val().length < 1) {
                    this.results_hide();
                }
                link.parents("li").first().remove();
                return this.search_field_scale();
            }
        };
        Chosen.prototype.results_reset = function() {
            this.form_field.options[0].selected = true;
            this.selected_option_count = null;
            this.selected_item.find("span").text(this.default_text);
            if (!this.is_multiple) {
                this.selected_item.addClass("chzn-default");
            }
            this.show_search_field_default();
            this.results_reset_cleanup();
            this.form_field_jq.trigger("change");
            if (this.active_field) {
                return this.results_hide();
            }
        };
        Chosen.prototype.results_reset_cleanup = function() {
            this.current_selectedIndex = this.form_field.selectedIndex;
            return this.selected_item.find("abbr").remove();
        };
        Chosen.prototype.result_select = function(evt) {
            var high, high_id, item, position;
            if (this.result_highlight) {
                high = this.result_highlight;
                high_id = high.attr("id");
                this.result_clear_highlight();
                if (this.is_multiple && this.max_selected_options <= this.choices_count()) {
                    this.form_field_jq.trigger("liszt:maxselected", {
                        chosen: this
                    });
                    return false;
                }
                if (this.is_multiple) {
                    this.result_deactivate(high);
                } else {
                    this.search_results.find(".result-selected").removeClass("result-selected");
                    this.result_single_selected = high;
                    this.selected_item.removeClass("chzn-default");
                }
                high.addClass("result-selected");
                position = high_id.substr(high_id.lastIndexOf("_") + 1);
                item = this.results_data[position];
                item.selected = true;
                this.form_field.options[item.options_index].selected = true;
                this.selected_option_count = null;
                if (this.is_multiple) {
                    this.choice_build(item);
                } else {
                    this.selected_item.find("span").first().text(item.text);
                    if (this.allow_single_deselect) {
                        this.single_deselect_control_build();
                    }
                }
                if (!((evt.metaKey || evt.ctrlKey) && this.is_multiple)) {
                    this.results_hide();
                }
                this.search_field.val("");
                if (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) {
                    this.form_field_jq.trigger("change", {
                        selected: this.form_field.options[item.options_index].value
                    });
                }
                this.current_selectedIndex = this.form_field.selectedIndex;
                return this.search_field_scale();
            }
        };
        Chosen.prototype.result_activate = function(el) {
            return el.addClass("active-result");
        };
        Chosen.prototype.result_deactivate = function(el) {
            return el.removeClass("active-result");
        };
        Chosen.prototype.result_deselect = function(pos) {
            var result, result_data;
            result_data = this.results_data[pos];
            if (!this.form_field.options[result_data.options_index].disabled) {
                result_data.selected = false;
                this.form_field.options[result_data.options_index].selected = false;
                this.selected_option_count = null;
                result = $("#" + this.container_id + "_o_" + pos);
                result.removeClass("result-selected").addClass("active-result").show();
                this.result_clear_highlight();
                this.winnow_results();
                this.form_field_jq.trigger("change", {
                    deselected: this.form_field.options[result_data.options_index].value
                });
                this.search_field_scale();
                return true;
            } else {
                return false;
            }
        };
        Chosen.prototype.single_deselect_control_build = function() {
            if (this.allow_single_deselect && this.selected_item.find("abbr").length < 1) {
                return this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>');
            }
        };
        Chosen.prototype.winnow_results = function() {
            var found, option, part, parts, regex, regexAnchor, result, result_id, results, searchText, startpos, text, zregex, _i, _j, _len, _len1, _ref1;
            this.no_results_clear();
            results = 0;
            searchText = this.search_field.val() === this.default_text ? "" : $("<div/>").text($.trim(this.search_field.val())).html();
            regexAnchor = this.search_contains ? "" : "^";
            regex = new RegExp(regexAnchor + searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), "i");
            zregex = new RegExp(searchText.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), "i");
            _ref1 = this.results_data;
            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
                option = _ref1[_i];
                if (!option.disabled && !option.empty) {
                    if (option.group) {
                        $("#" + option.dom_id).css("display", "none");
                    } else if (!(this.is_multiple && option.selected)) {
                        found = false;
                        result_id = option.dom_id;
                        result = $("#" + result_id);
                        if (regex.test(option.html)) {
                            found = true;
                            results += 1;
                        } else if (this.enable_split_word_search && (option.html.indexOf(" ") >= 0 || option.html.indexOf("[") === 0)) {
                            parts = option.html.replace(/\[|\]/g, "").split(" ");
                            if (parts.length) {
                                for (_j = 0, _len1 = parts.length; _j < _len1; _j++) {
                                    part = parts[_j];
                                    if (regex.test(part)) {
                                        found = true;
                                        results += 1;
                                    }
                                }
                            }
                        }
                        if (found) {
                            if (searchText.length) {
                                startpos = option.html.search(zregex);
                                text = option.html.substr(0, startpos + searchText.length) + "</em>" + option.html.substr(startpos + searchText.length);
                                text = text.substr(0, startpos) + "<em>" + text.substr(startpos);
                            } else {
                                text = option.html;
                            }
                            result.html(text);
                            this.result_activate(result);
                            if (option.group_array_index != null) {
                                $("#" + this.results_data[option.group_array_index].dom_id).css("display", "list-item");
                            }
                        } else {
                            if (this.result_highlight && result_id === this.result_highlight.attr("id")) {
                                this.result_clear_highlight();
                            }
                            this.result_deactivate(result);
                        }
                    }
                }
            }
            if (results < 1 && searchText.length) {
                return this.no_results(searchText);
            } else {
                return this.winnow_results_set_highlight();
            }
        };
        Chosen.prototype.winnow_results_clear = function() {
            var li, lis, _i, _len, _results;
            this.search_field.val("");
            lis = this.search_results.find("li");
            _results = [];
            for (_i = 0, _len = lis.length; _i < _len; _i++) {
                li = lis[_i];
                li = $(li);
                if (li.hasClass("group-result")) {
                    _results.push(li.css("display", "auto"));
                } else if (!this.is_multiple || !li.hasClass("result-selected")) {
                    _results.push(this.result_activate(li));
                } else {
                    _results.push(void 0);
                }
            }
            return _results;
        };
        Chosen.prototype.winnow_results_set_highlight = function() {
            var do_high, selected_results;
            if (!this.result_highlight) {
                selected_results = !this.is_multiple ? this.search_results.find(".result-selected.active-result") : [];
                do_high = selected_results.length ? selected_results.first() : this.search_results.find(".active-result").first();
                if (do_high != null) {
                    return this.result_do_highlight(do_high);
                }
            }
        };
        Chosen.prototype.no_results = function(terms) {
            var no_results_html;
            no_results_html = $('<li class="no-results">' + this.results_none_found + ' "<span></span>"</li>');
            no_results_html.find("span").first().html(terms);
            return this.search_results.append(no_results_html);
        };
        Chosen.prototype.no_results_clear = function() {
            return this.search_results.find(".no-results").remove();
        };
        Chosen.prototype.keydown_arrow = function() {
            var first_active, next_sib;
            if (!this.result_highlight) {
                first_active = this.search_results.find("li.active-result").first();
                if (first_active) {
                    this.result_do_highlight($(first_active));
                }
            } else if (this.results_showing) {
                next_sib = this.result_highlight.nextAll("li.active-result").first();
                if (next_sib) {
                    this.result_do_highlight(next_sib);
                }
            }
            if (!this.results_showing) {
                return this.results_show();
            }
        };
        Chosen.prototype.keyup_arrow = function() {
            var prev_sibs;
            if (!this.results_showing && !this.is_multiple) {
                return this.results_show();
            } else if (this.result_highlight) {
                prev_sibs = this.result_highlight.prevAll("li.active-result");
                if (prev_sibs.length) {
                    return this.result_do_highlight(prev_sibs.first());
                } else {
                    if (this.choices_count() > 0) {
                        this.results_hide();
                    }
                    return this.result_clear_highlight();
                }
            }
        };
        Chosen.prototype.keydown_backstroke = function() {
            var next_available_destroy;
            if (this.pending_backstroke) {
                this.choice_destroy(this.pending_backstroke.find("a").first());
                return this.clear_backstroke();
            } else {
                next_available_destroy = this.search_container.siblings("li.search-choice").last();
                if (next_available_destroy.length && !next_available_destroy.hasClass("search-choice-disabled")) {
                    this.pending_backstroke = next_available_destroy;
                    if (this.single_backstroke_delete) {
                        return this.keydown_backstroke();
                    } else {
                        return this.pending_backstroke.addClass("search-choice-focus");
                    }
                }
            }
        };
        Chosen.prototype.clear_backstroke = function() {
            if (this.pending_backstroke) {
                this.pending_backstroke.removeClass("search-choice-focus");
            }
            return this.pending_backstroke = null;
        };
        Chosen.prototype.keydown_checker = function(evt) {
            var stroke, _ref1;
            stroke = (_ref1 = evt.which) != null ? _ref1 : evt.keyCode;
            this.search_field_scale();
            if (stroke !== 8 && this.pending_backstroke) {
                this.clear_backstroke();
            }
            switch (stroke) {
              case 8:
                this.backstroke_length = this.search_field.val().length;
                break;

              case 9:
                if (this.results_showing && !this.is_multiple) {
                    this.result_select(evt);
                }
                this.mouse_on_container = false;
                break;

              case 13:
                evt.preventDefault();
                break;

              case 38:
                evt.preventDefault();
                this.keyup_arrow();
                break;

              case 40:
                this.keydown_arrow();
                break;
            }
        };
        Chosen.prototype.search_field_scale = function() {
            var div, h, style, style_block, styles, w, _i, _len;
            if (this.is_multiple) {
                h = 0;
                w = 0;
                style_block = "position:absolute; left: -1000px; top: -1000px; display:none;";
                styles = [ "font-size", "font-style", "font-weight", "font-family", "line-height", "text-transform", "letter-spacing" ];
                for (_i = 0, _len = styles.length; _i < _len; _i++) {
                    style = styles[_i];
                    style_block += style + ":" + this.search_field.css(style) + ";";
                }
                div = $("<div />", {
                    style: style_block
                });
                div.text(this.search_field.val());
                $("body").append(div);
                w = div.width() + 25;
                div.remove();
                if (!this.f_width) {
                    this.f_width = this.container.outerWidth();
                }
                if (w > this.f_width - 10) {
                    w = this.f_width - 10;
                }
                return this.search_field.css({
                    width: w + "px"
                });
            }
        };
        Chosen.prototype.generate_random_id = function() {
            var string;
            string = "sel" + this.generate_random_char() + this.generate_random_char() + this.generate_random_char();
            while ($("#" + string).length > 0) {
                string += this.generate_random_char();
            }
            return string;
        };
        return Chosen;
    }(AbstractChosen);
    root.Chosen = Chosen;
}).call(this);

/*global jQuery */
/*jshint multistr:true browser:true */
/*!
* FitVids 1.0
*
* Copyright 2013, Chris Coyier - http://css-tricks.com + Dave Rupert - http://daverupert.com
* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/
* Released under the WTFPL license - http://sam.zoy.org/wtfpl/
*
* Date: Thu Sept 01 18:00:00 2011 -0500
*/
(function($) {
    "use strict";
    $.fn.fitVids = function(options) {
        var settings = {
            customSelector: null
        };
        if (!document.getElementById("fit-vids-style")) {
            var div = document.createElement("div"), ref = document.getElementsByTagName("base")[0] || document.getElementsByTagName("script")[0], cssStyles = "&shy;<style>.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style>";
            div.className = "fit-vids-style";
            div.id = "fit-vids-style";
            div.style.display = "none";
            div.innerHTML = cssStyles;
            ref.parentNode.insertBefore(div, ref);
        }
        if (options) {
            $.extend(settings, options);
        }
        return this.each(function() {
            var selectors = [ "iframe[src*='player.vimeo.com']", "iframe[src*='youtube.com']", "iframe[src*='youtube-nocookie.com']", "iframe[src*='kickstarter.com'][src*='video.html']", "object", "embed" ];
            if (settings.customSelector) {
                selectors.push(settings.customSelector);
            }
            var $allVideos = $(this).find(selectors.join(","));
            $allVideos = $allVideos.not("object object");
            // SwfObj conflict patch
            $allVideos.each(function() {
                var $this = $(this);
                if (this.tagName.toLowerCase() === "embed" && $this.parent("object").length || $this.parent(".fluid-width-video-wrapper").length) {
                    return;
                }
                var height = this.tagName.toLowerCase() === "object" || $this.attr("height") && !isNaN(parseInt($this.attr("height"), 10)) ? parseInt($this.attr("height"), 10) : $this.height(), width = !isNaN(parseInt($this.attr("width"), 10)) ? parseInt($this.attr("width"), 10) : $this.width(), aspectRatio = height / width;
                if (!$this.attr("id")) {
                    var videoID = "fitvid" + Math.floor(Math.random() * 999999);
                    $this.attr("id", videoID);
                }
                $this.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top", aspectRatio * 100 + "%");
                $this.removeAttr("height").removeAttr("width");
            });
        });
    };
})(window.jQuery || window.Zepto);

(function(window, document, $) {
    var isInputSupported = "placeholder" in document.createElement("input"), isTextareaSupported = "placeholder" in document.createElement("textarea"), prototype = $.fn, valHooks = $.valHooks, hooks, placeholder;
    if (isInputSupported && isTextareaSupported) {
        placeholder = prototype.placeholder = function() {
            return this;
        };
        placeholder.input = placeholder.textarea = true;
    } else {
        placeholder = prototype.placeholder = function() {
            var $this = this;
            $this.filter((isInputSupported ? "textarea" : ":input") + "[placeholder]").not(".placeholder").bind({
                "focus.placeholder": clearPlaceholder,
                "blur.placeholder": setPlaceholder
            }).data("placeholder-enabled", true).trigger("blur.placeholder");
            return $this;
        };
        placeholder.input = isInputSupported;
        placeholder.textarea = isTextareaSupported;
        hooks = {
            get: function(element) {
                var $element = $(element);
                return $element.data("placeholder-enabled") && $element.hasClass("placeholder") ? "" : element.value;
            },
            set: function(element, value) {
                var $element = $(element);
                if (!$element.data("placeholder-enabled")) {
                    return element.value = value;
                }
                if (value == "") {
                    element.value = value;
                    // Issue #56: Setting the placeholder causes problems if the element continues to have focus.
                    if (element != document.activeElement) {
                        // We can’t use `triggerHandler` here because of dummy text/password inputs :(
                        setPlaceholder.call(element);
                    }
                } else if ($element.hasClass("placeholder")) {
                    clearPlaceholder.call(element, true, value) || (element.value = value);
                } else {
                    element.value = value;
                }
                // `set` can not return `undefined`; see http://jsapi.info/jquery/1.7.1/val#L2363
                return $element;
            }
        };
        isInputSupported || (valHooks.input = hooks);
        isTextareaSupported || (valHooks.textarea = hooks);
        $(function() {
            // Look for forms
            $(document).delegate("form", "submit.placeholder", function() {
                // Clear the placeholder values so they don’t get submitted
                var $inputs = $(".placeholder", this).each(clearPlaceholder);
                setTimeout(function() {
                    $inputs.each(setPlaceholder);
                }, 10);
            });
        });
        // Clear placeholder values upon page reload
        $(window).bind("beforeunload.placeholder", function() {
            $(".placeholder").each(function() {
                this.value = "";
            });
        });
    }
    function args(elem) {
        // Return an object of element attributes
        var newAttrs = {}, rinlinejQuery = /^jQuery\d+$/;
        $.each(elem.attributes, function(i, attr) {
            if (attr.specified && !rinlinejQuery.test(attr.name)) {
                newAttrs[attr.name] = attr.value;
            }
        });
        return newAttrs;
    }
    function clearPlaceholder(event, value) {
        var input = this, $input = $(input);
        if (input.value == $input.attr("placeholder") && $input.hasClass("placeholder")) {
            if ($input.data("placeholder-password")) {
                $input = $input.hide().next().show().attr("id", $input.removeAttr("id").data("placeholder-id"));
                // If `clearPlaceholder` was called from `$.valHooks.input.set`
                if (event === true) {
                    return $input[0].value = value;
                }
                $input.focus();
            } else {
                input.value = "";
                $input.removeClass("placeholder");
                input == document.activeElement && input.select();
            }
        }
    }
    function setPlaceholder() {
        var $replacement, input = this, $input = $(input), $origInput = $input, id = this.id;
        if (input.value == "") {
            if (input.type == "password") {
                if (!$input.data("placeholder-textinput")) {
                    try {
                        $replacement = $input.clone().attr({
                            type: "text"
                        });
                    } catch (e) {
                        $replacement = $("<input>").attr($.extend(args(this), {
                            type: "text"
                        }));
                    }
                    $replacement.removeAttr("name").data({
                        "placeholder-password": true,
                        "placeholder-id": id
                    }).bind("focus.placeholder", clearPlaceholder);
                    $input.data({
                        "placeholder-textinput": $replacement,
                        "placeholder-id": id
                    }).before($replacement);
                }
                $input = $input.removeAttr("id").hide().prev().attr("id", id).show();
            }
            $input.addClass("placeholder");
            $input[0].value = $input.attr("placeholder");
        } else {
            $input.removeClass("placeholder");
        }
    }
})(this, document, jQuery);

/*!
 * hoverIntent r7 // 2013.03.11 // jQuery 1.9.1+
 * http://cherne.net/brian/resources/jquery.hoverIntent.html
 *
 * You may use hoverIntent under the terms of the MIT license. Basically that
 * means you are free to use hoverIntent as long as this header is left intact.
 * Copyright 2007, 2013 Brian Cherne
 */
/* hoverIntent is similar to jQuery's built-in "hover" method except that
 * instead of firing the handlerIn function immediately, hoverIntent checks
 * to see if the user's mouse has slowed down (beneath the sensitivity
 * threshold) before firing the event. The handlerOut function is only
 * called after a matching handlerIn.
 *
 * // basic usage ... just like .hover()
 * .hoverIntent( handlerIn, handlerOut )
 * .hoverIntent( handlerInOut )
 *
 * // basic usage ... with event delegation!
 * .hoverIntent( handlerIn, handlerOut, selector )
 * .hoverIntent( handlerInOut, selector )
 *
 * // using a basic configuration object
 * .hoverIntent( config )
 *
 * @param  handlerIn   function OR configuration object
 * @param  handlerOut  function OR selector for delegation OR undefined
 * @param  selector    selector OR undefined
 * @author Brian Cherne <brian(at)cherne(dot)net>
 */
(function($) {
    $.fn.hoverIntent = function(handlerIn, handlerOut, selector) {
        // default configuration values
        var cfg = {
            interval: 100,
            sensitivity: 7,
            timeout: 0
        };
        if (typeof handlerIn === "object") {
            cfg = $.extend(cfg, handlerIn);
        } else if ($.isFunction(handlerOut)) {
            cfg = $.extend(cfg, {
                over: handlerIn,
                out: handlerOut,
                selector: selector
            });
        } else {
            cfg = $.extend(cfg, {
                over: handlerIn,
                out: handlerIn,
                selector: handlerOut
            });
        }
        // instantiate variables
        // cX, cY = current X and Y position of mouse, updated by mousemove event
        // pX, pY = previous X and Y position of mouse, set by mouseover and polling interval
        var cX, cY, pX, pY;
        // A private function for getting mouse position
        var track = function(ev) {
            cX = ev.pageX;
            cY = ev.pageY;
        };
        // A private function for comparing current and previous mouse position
        var compare = function(ev, ob) {
            ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
            // compare mouse positions to see if they've crossed the threshold
            if (Math.abs(pX - cX) + Math.abs(pY - cY) < cfg.sensitivity) {
                $(ob).off("mousemove.hoverIntent", track);
                // set hoverIntent state to true (so mouseOut can be called)
                ob.hoverIntent_s = 1;
                return cfg.over.apply(ob, [ ev ]);
            } else {
                // set previous coordinates for next time
                pX = cX;
                pY = cY;
                // use self-calling timeout, guarantees intervals are spaced out properly (avoids JavaScript timer bugs)
                ob.hoverIntent_t = setTimeout(function() {
                    compare(ev, ob);
                }, cfg.interval);
            }
        };
        // A private function for delaying the mouseOut function
        var delay = function(ev, ob) {
            ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
            ob.hoverIntent_s = 0;
            return cfg.out.apply(ob, [ ev ]);
        };
        // A private function for handling mouse 'hovering'
        var handleHover = function(e) {
            // copy objects to be passed into t (required for event object to be passed in IE)
            var ev = jQuery.extend({}, e);
            var ob = this;
            // cancel hoverIntent timer if it exists
            if (ob.hoverIntent_t) {
                ob.hoverIntent_t = clearTimeout(ob.hoverIntent_t);
            }
            // if e.type == "mouseenter"
            if (e.type == "mouseenter") {
                // set "previous" X and Y position based on initial entry point
                pX = ev.pageX;
                pY = ev.pageY;
                // update "current" X and Y position based on mousemove
                $(ob).on("mousemove.hoverIntent", track);
                // start polling interval (self-calling timeout) to compare mouse coordinates over time
                if (ob.hoverIntent_s != 1) {
                    ob.hoverIntent_t = setTimeout(function() {
                        compare(ev, ob);
                    }, cfg.interval);
                }
            } else {
                // unbind expensive mousemove event
                $(ob).off("mousemove.hoverIntent", track);
                // if hoverIntent state is true, then call the mouseOut function after the specified delay
                if (ob.hoverIntent_s == 1) {
                    ob.hoverIntent_t = setTimeout(function() {
                        delay(ev, ob);
                    }, cfg.timeout);
                }
            }
        };
        // listen for mouseenter and mouseleave
        return this.on({
            "mouseenter.hoverIntent": handleHover,
            "mouseleave.hoverIntent": handleHover
        }, cfg.selector);
    };
})(jQuery);

/*! Picturefill - Responsive Images that work today. (and mimic the proposed Picture element with span elements). Author: Scott Jehl, Filament Group, 2012 | License: MIT/GPLv2 */
(function(w) {
    // Enable strict mode
    "use strict";
    w.picturefill = function() {
        var ps = w.document.getElementsByTagName("span");
        // Loop the pictures
        for (var i = 0, il = ps.length; i < il; i++) {
            if (ps[i].getAttribute("data-picture") !== null) {
                var sources = ps[i].getElementsByTagName("span"), matches = [];
                // See if which sources match
                for (var j = 0, jl = sources.length; j < jl; j++) {
                    var media = sources[j].getAttribute("data-media");
                    // if there's no media specified, OR w.matchMedia is supported 
                    if (!media || w.matchMedia && w.matchMedia(media).matches) {
                        matches.push(sources[j]);
                    }
                }
                // Find any existing img element in the picture element
                var picImg = ps[i].getElementsByTagName("img")[0];
                if (matches.length) {
                    var matchedEl = matches.pop();
                    if (!picImg || picImg.parentNode.nodeName === "NOSCRIPT") {
                        picImg = w.document.createElement("img");
                        picImg.alt = ps[i].getAttribute("data-alt");
                    } else if (matchedEl === picImg.parentNode) {
                        // Skip further actions if the correct image is already in place
                        continue;
                    }
                    picImg.src = matchedEl.getAttribute("data-src");
                    matchedEl.appendChild(picImg);
                    picImg.removeAttribute("width");
                    picImg.removeAttribute("height");
                } else if (picImg) {
                    picImg.parentNode.removeChild(picImg);
                }
            }
        }
    };
    // Run on resize and domready (w.load as a fallback)
    if (w.addEventListener) {
        w.addEventListener("resize", w.picturefill, false);
        w.addEventListener("DOMContentLoaded", function() {
            w.picturefill();
            // Run once only
            w.removeEventListener("load", w.picturefill, false);
        }, false);
        w.addEventListener("load", w.picturefill, false);
    } else if (w.attachEvent) {
        w.attachEvent("onload", w.picturefill);
    }
})(this);

/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */
window.matchMedia || (window.matchMedia = function() {
    "use strict";
    // For browsers that support matchMedium api such as IE 9 and webkit
    var styleMedia = window.styleMedia || window.media;
    // For those that don't support matchMedium
    if (!styleMedia) {
        var style = document.createElement("style"), script = document.getElementsByTagName("script")[0], info = null;
        style.type = "text/css";
        style.id = "matchmediajs-test";
        script.parentNode.insertBefore(style, script);
        // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers
        info = "getComputedStyle" in window && window.getComputedStyle(style, null) || style.currentStyle;
        styleMedia = {
            matchMedium: function(media) {
                var text = "@media " + media + "{ #matchmediajs-test { width: 1px; } }";
                // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers
                if (style.styleSheet) {
                    style.styleSheet.cssText = text;
                } else {
                    style.textContent = text;
                }
                // Test if media query is true or false
                return info.width === "1px";
            }
        };
    }
    return function(media) {
        return {
            matches: styleMedia.matchMedium(media || "all"),
            media: media || "all"
        };
    };
}());

(function(name, context, factory) {
    var matchMedia = window.matchMedia;
    if (typeof module !== "undefined" && module.exports) {
        module.exports = factory(matchMedia);
    } else if (typeof define === "function" && define.amd) {
        define(function() {
            return context[name] = factory(matchMedia);
        });
    } else {
        context[name] = factory(matchMedia);
    }
})("enquire", this, function(matchMedia) {
    "use strict";
    /*jshint unused:false */
    /**
     * Helper function for iterating over a collection
     *
     * @param collection
     * @param fn
     */
    function each(collection, fn) {
        var i = 0, length = collection.length, cont;
        for (i; i < length; i++) {
            cont = fn(collection[i], i);
            if (cont === false) {
                break;
            }
        }
    }
    /**
     * Helper function for determining whether target object is an array
     *
     * @param target the object under test
     * @return {Boolean} true if array, false otherwise
     */
    function isArray(target) {
        return Object.prototype.toString.apply(target) === "[object Array]";
    }
    /**
     * Helper function for determining whether target object is a function
     *
     * @param target the object under test
     * @return {Boolean} true if function, false otherwise
     */
    function isFunction(target) {
        return typeof target === "function";
    }
    /**
     * Delegate to handle a media query being matched and unmatched.
     *
     * @param {object} options
     * @param {function} options.match callback for when the media query is matched
     * @param {function} [options.unmatch] callback for when the media query is unmatched
     * @param {function} [options.setup] one-time callback triggered the first time a query is matched
     * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?
     * @constructor
     */
    function QueryHandler(options) {
        this.options = options;
        !options.deferSetup && this.setup();
    }
    QueryHandler.prototype = {
        /**
         * coordinates setup of the handler
         *
         * @function
         */
        setup: function() {
            if (this.options.setup) {
                this.options.setup();
            }
            this.initialised = true;
        },
        /**
         * coordinates setup and triggering of the handler
         *
         * @function
         */
        on: function() {
            !this.initialised && this.setup();
            this.options.match && this.options.match();
        },
        /**
         * coordinates the unmatch event for the handler
         *
         * @function
         */
        off: function() {
            this.options.unmatch && this.options.unmatch();
        },
        /**
         * called when a handler is to be destroyed.
         * delegates to the destroy or unmatch callbacks, depending on availability.
         *
         * @function
         */
        destroy: function() {
            this.options.destroy ? this.options.destroy() : this.off();
        },
        /**
         * determines equality by reference.
         * if object is supplied compare options, if function, compare match callback
         *
         * @function
         * @param {object || function} [target] the target for comparison
         */
        equals: function(target) {
            return this.options === target || this.options.match === target;
        }
    };
    /**
     * Represents a single media query, manages it's state and registered handlers for this query
     *
     * @constructor
     * @param {string} query the media query string
     * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design
     */
    function MediaQuery(query, isUnconditional) {
        this.query = query;
        this.isUnconditional = isUnconditional;
        this.handlers = [];
        this.mql = matchMedia(query);
        var self = this;
        this.listener = function(mql) {
            self.mql = mql;
            self.assess();
        };
        this.mql.addListener(this.listener);
    }
    MediaQuery.prototype = {
        /**
         * add a handler for this query, triggering if already active
         *
         * @param {object} handler
         * @param {function} handler.match callback for when query is activated
         * @param {function} [handler.unmatch] callback for when query is deactivated
         * @param {function} [handler.setup] callback for immediate execution when a query handler is registered
         * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?
         */
        addHandler: function(handler) {
            var qh = new QueryHandler(handler);
            this.handlers.push(qh);
            this.matches() && qh.on();
        },
        /**
         * removes the given handler from the collection, and calls it's destroy methods
         * 
         * @param {object || function} handler the handler to remove
         */
        removeHandler: function(handler) {
            var handlers = this.handlers;
            each(handlers, function(h, i) {
                if (h.equals(handler)) {
                    h.destroy();
                    return !handlers.splice(i, 1);
                }
            });
        },
        /**
         * Determine whether the media query should be considered a match
         * 
         * @return {Boolean} true if media query can be considered a match, false otherwise
         */
        matches: function() {
            return this.mql.matches || this.isUnconditional;
        },
        /**
         * Clears all handlers and unbinds events
         */
        clear: function() {
            each(this.handlers, function(handler) {
                handler.destroy();
            });
            this.mql.removeListener(this.listener);
            this.handlers.length = 0;
        },
        /*
         * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match
         */
        assess: function() {
            var action = this.matches() ? "on" : "off";
            each(this.handlers, function(handler) {
                handler[action]();
            });
        }
    };
    /**
     * Allows for registration of query handlers.
     * Manages the query handler's state and is responsible for wiring up browser events
     *
     * @constructor
     */
    function MediaQueryDispatch() {
        if (!matchMedia) {
            throw new Error("matchMedia not present, legacy browsers require a polyfill");
        }
        this.queries = {};
        this.browserIsIncapable = !matchMedia("only all").matches;
    }
    MediaQueryDispatch.prototype = {
        /**
         * Registers a handler for the given media query
         *
         * @param {string} q the media query
         * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers
         * @param {function} options.match fired when query matched
         * @param {function} [options.unmatch] fired when a query is no longer matched
         * @param {function} [options.setup] fired when handler first triggered
         * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched
         * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers
         */
        register: function(q, options, shouldDegrade) {
            var queries = this.queries, isUnconditional = shouldDegrade && this.browserIsIncapable;
            if (!queries[q]) {
                queries[q] = new MediaQuery(q, isUnconditional);
            }
            //normalise to object in an array
            if (isFunction(options)) {
                options = {
                    match: options
                };
            }
            if (!isArray(options)) {
                options = [ options ];
            }
            each(options, function(handler) {
                queries[q].addHandler(handler);
            });
            return this;
        },
        /**
         * unregisters a query and all it's handlers, or a specific handler for a query
         *
         * @param {string} q the media query to target
         * @param {object || function} [handler] specific handler to unregister
         */
        unregister: function(q, handler) {
            var query = this.queries[q];
            if (query) {
                if (handler) {
                    query.removeHandler(handler);
                } else {
                    query.clear();
                    delete this.queries[q];
                }
            }
            return this;
        }
    };
    return new MediaQueryDispatch();
});

/*
 * RoyalSlider
 *
 * @version 9.4.6:
 *
 * Copyright 2011-2012, Dmitry Semenov
 *
 */
(function($) {
    if (!$.rsModules) {
        $.rsModules = {
            uid: 0
        };
    }
    function RoyalSlider(element, options) {
        var i, self = this, ua = navigator.userAgent.toLowerCase();
        self.uid = $.rsModules.uid++;
        self.ns = ".rs" + self.uid;
        // unique namespace for events
        // feature detection, some ideas taken from Modernizr
        var tempStyle = document.createElement("div").style, vendors = [ "webkit", "Moz", "ms", "O" ], vendor = "", lastTime = 0, tempV;
        for (i = 0; i < vendors.length; i++) {
            tempV = vendors[i];
            if (!vendor && tempV + "Transform" in tempStyle) {
                vendor = tempV;
            }
            tempV = tempV.toLowerCase();
            if (!window.requestAnimationFrame) {
                window.requestAnimationFrame = window[tempV + "RequestAnimationFrame"];
                window.cancelAnimationFrame = window[tempV + "CancelAnimationFrame"] || window[tempV + "CancelRequestAnimationFrame"];
            }
        }
        // requestAnimationFrame polyfill by Erik Möller
        // fixes from Paul Irish and Tino Zijdel
        if (!window.requestAnimationFrame) {
            window.requestAnimationFrame = function(callback, element) {
                var currTime = new Date().getTime(), timeToCall = Math.max(0, 16 - (currTime - lastTime)), id = window.setTimeout(function() {
                    callback(currTime + timeToCall);
                }, timeToCall);
                lastTime = currTime + timeToCall;
                return id;
            };
        }
        if (!window.cancelAnimationFrame) window.cancelAnimationFrame = function(id) {
            clearTimeout(id);
        };
        self.isIPAD = ua.match(/(ipad)/);
        // browser UA sniffing, sadly still required
        var uaMatch = function(ua) {
            var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
            return {
                browser: match[1] || "",
                version: match[2] || "0"
            };
        };
        var matched = uaMatch(ua);
        var br = {};
        if (matched.browser) {
            br[matched.browser] = true;
            br.version = matched.version;
        }
        if (br.chrome) {
            br.webkit = true;
        }
        self._browser = br;
        self.slider = $(element);
        // DOM reference
        self.ev = $(self);
        // event object
        self._doc = $(document);
        self.st = $.extend({}, $.fn.royalSlider.defaults, options);
        self._currAnimSpeed = self.st.transitionSpeed;
        self._minPosOffset = 0;
        if (self.st.allowCSS3) {
            if (!br.webkit || self.st.allowCSS3OnWebkit) {
                var bT = vendor + (vendor ? "T" : "t");
                self._useCSS3Transitions = bT + "ransform" in tempStyle && bT + "ransition" in tempStyle;
                if (self._useCSS3Transitions) {
                    self._use3dTransform = vendor + (vendor ? "P" : "p") + "erspective" in tempStyle;
                }
            }
        }
        vendor = vendor.toLowerCase();
        self._vendorPref = "-" + vendor + "-";
        self._slidesHorizontal = self.st.slidesOrientation === "vertical" ? false : true;
        self._reorderProp = self._slidesHorizontal ? "left" : "top";
        self._sizeProp = self._slidesHorizontal ? "width" : "height";
        self._prevNavItemId = -1;
        self._isMove = self.st.transitionType === "fade" ? false : true;
        if (!self._isMove) {
            self.st.sliderDrag = false;
            self._fadeZIndex = 10;
        }
        self._opacityCSS = "z-index:0; display:none; opacity:0;";
        self._newSlideId = 0;
        self._sPosition = 0;
        self._nextSlidePos = 0;
        // init modules
        $.each($.rsModules, function(helper, opts) {
            if (helper !== "uid") opts.call(self);
        });
        // parse all slides
        self.slides = [];
        self._idCount = 0;
        var returnVal;
        var ts = self.st.slides ? $(self.st.slides) : self.slider.children().detach();
        ts.each(function() {
            self._parseNode(this, true);
        });
        if (self.st.randomizeSlides) {
            self.slides.sort(function() {
                return .5 - Math.random();
            });
        }
        self.numSlides = self.slides.length;
        self._refreshNumPreloadImages();
        if (!self.st.startSlideId) {
            self.st.startSlideId = 0;
        } else if (self.st.startSlideId > self.numSlides - 1) {
            self.st.startSlideId = self.numSlides - 1;
        }
        self._newSlideId = self.staticSlideId = self.currSlideId = self._realId = self.st.startSlideId;
        self.currSlide = self.slides[self.currSlideId];
        self._accelerationPos = 0;
        self.msTouch = false;
        self.slider.addClass((self._slidesHorizontal ? "rsHor" : "rsVer") + (self._isMove ? "" : " rsFade"));
        var sliderHTML = '<div class="rsOverflow"><div class="rsContainer">';
        self.slidesSpacing = self.st.slidesSpacing;
        self._slideSize = (self._slidesHorizontal ? self.slider.width() : self.slider.height()) + self.st.slidesSpacing;
        self._preload = Boolean(self._numPreloadImages > 0);
        if (self.numSlides <= 1) {
            self._loop = false;
        }
        var loopHelpers = self._loop && self._isMove ? self.numSlides === 2 ? 1 : 2 : 0;
        self._loopHelpers = loopHelpers;
        self._maxImages = self.numSlides < 6 ? self.numSlides : 6;
        self._currBlockIndex = 0;
        self._idOffset = 0;
        self.slidesJQ = [];
        for (i = 0; i < self.numSlides; i++) {
            self.slidesJQ.push($(createItemHTML(i)));
        }
        self._sliderOverflow = sliderHTML = $(sliderHTML + "</div></div>");
        var addCursors = function() {
            if (self.st.sliderDrag) {
                self._hasDrag = true;
                if (br.msie || br.opera) {
                    self._grabCursor = self._grabbingCursor = "move";
                } else if (br.mozilla) {
                    self._grabCursor = "-moz-grab";
                    self._grabbingCursor = "-moz-grabbing";
                } else if (br.webkit && navigator.platform.indexOf("Mac") != -1) {
                    self._grabCursor = "-webkit-grab";
                    self._grabbingCursor = "-webkit-grabbing";
                }
                self._setGrabCursor();
            }
        };
        var rsNS = self.ns;
        var addEventNames = function(pref, down, move, up, cancel) {
            self._downEvent = pref + down + rsNS;
            self._moveEvent = pref + move + rsNS;
            self._upEvent = pref + up + rsNS;
            if (cancel) self._cancelEvent = pref + cancel + rsNS;
        };
        // ie10
        self.msEnabled = window.navigator.msPointerEnabled;
        if (self.msEnabled) {
            self.msTouch = Boolean(window.navigator.msMaxTouchPoints > 1);
            self.hasTouch = false;
            self._lastItemFriction = .2;
            addEventNames("MSPointer", "Down", "Move", "Up", "Cancel");
        } else {
            addEventNames("mouse", "down", "move", "up", "up");
            if ("ontouchstart" in window || "createTouch" in document) {
                self.hasTouch = true;
                self._downEvent += " touchstart" + rsNS;
                self._moveEvent += " touchmove" + rsNS;
                self._upEvent += " touchend" + rsNS;
                self._cancelEvent += " touchcancel" + rsNS;
                self._lastItemFriction = .5;
                if (self.st.sliderTouch) {
                    self._hasDrag = true;
                }
            } else {
                self.hasTouch = false;
                self._lastItemFriction = .2;
            }
        }
        addCursors();
        self.slider.html(sliderHTML);
        self._controlsContainer = self.st.controlsInside ? self._sliderOverflow : self.slider;
        self._slidesContainer = self._sliderOverflow.children(".rsContainer");
        if (self.msEnabled) {
            self._slidesContainer.css("-ms-touch-action", self._slidesHorizontal ? "pan-y" : "pan-x");
        }
        self._preloader = $('<div class="rsPreloader"></div>');
        var slides = self._slidesContainer.children(".rsSlide");
        self._currHolder = self.slidesJQ[self.currSlideId];
        self._selectedSlideHolder = 0;
        function createItemHTML(i, className) {
            return '<div style="' + (self._isMove ? "" : i !== self.currSlideId ? self._opacityCSS : "z-index:0;") + '" class="rsSlide ' + (className || "") + '"></div>';
        }
        if (self._useCSS3Transitions) {
            // some constants for CSS3
            self._TP = "transition-property";
            self._TD = "transition-duration";
            self._TTF = "transition-timing-function";
            self._yProp = self._xProp = self._vendorPref + "transform";
            if (self._use3dTransform) {
                if (br.webkit) {
                    self.slider.addClass("rsWebkit3d");
                }
                self._tPref1 = "translate3d(";
                self._tPref2 = "px, ";
                self._tPref3 = "px, 0px)";
            } else {
                self._tPref1 = "translate(";
                self._tPref2 = "px, ";
                self._tPref3 = "px)";
            }
            if (!self._isMove) {
                var animObj = {};
                animObj[self._vendorPref + self._TP] = "opacity";
                animObj[self._vendorPref + self._TD] = self.st.transitionSpeed + "ms";
                animObj[self._vendorPref + self._TTF] = self.st.css3easeInOut;
                slides.css(animObj);
            } else {
                self._slidesContainer[self._vendorPref + self._TP] = self._vendorPref + "transform";
            }
        } else {
            self._xProp = "left";
            self._yProp = "top";
        }
        // window resize
        var resizeTimer;
        $(window).on("resize" + self.ns, function() {
            if (resizeTimer) {
                clearTimeout(resizeTimer);
            }
            resizeTimer = setTimeout(function() {
                self.updateSliderSize();
            }, 50);
        });
        self.ev.trigger("rsAfterPropsSetup");
        // navigation (bullets, thumbs...) are created here
        self.updateSliderSize();
        // keyboard nav
        if (self.st.keyboardNavEnabled) {
            self._bindKeyboardNav();
        }
        if (self.st.arrowsNavHideOnTouch && (self.hasTouch || self.msTouch)) {
            self.st.arrowsNav = false;
        }
        //Direction navigation (arrows)
        if (self.st.arrowsNav) {
            var rArr = "rsArrow", container = self._controlsContainer;
            $('<div class="' + rArr + " " + rArr + 'Left"><div class="' + rArr + 'Icn"></div></div><div class="' + rArr + " " + rArr + 'Right"><div class="' + rArr + 'Icn"></div></div>').appendTo(container);
            self._arrowLeft = container.children("." + rArr + "Left").click(function(e) {
                e.preventDefault();
                self.prev();
            });
            self._arrowRight = container.children("." + rArr + "Right").click(function(e) {
                e.preventDefault();
                self.next();
            });
            if (self.st.arrowsNavAutoHide && !self.hasTouch) {
                self._arrowLeft.addClass("rsHidden");
                self._arrowRight.addClass("rsHidden");
                var hoverEl = container;
                hoverEl.one("mousemove.arrowshover", function() {
                    self._arrowLeft.removeClass("rsHidden");
                    self._arrowRight.removeClass("rsHidden");
                });
                hoverEl.hover(function() {
                    if (!self._arrowsAutoHideLocked) {
                        self._arrowLeft.removeClass("rsHidden");
                        self._arrowRight.removeClass("rsHidden");
                    }
                }, function() {
                    if (!self._arrowsAutoHideLocked) {
                        self._arrowLeft.addClass("rsHidden");
                        self._arrowRight.addClass("rsHidden");
                    }
                });
            }
            self.ev.on("rsOnUpdateNav", function() {
                self._updateArrowsNav();
            });
            self._updateArrowsNav();
        }
        if (self._hasDrag) {
            self._slidesContainer.on(self._downEvent, function(e) {
                self._onDragStart(e);
            });
        } else {
            self.dragSuccess = false;
        }
        var videoClasses = [ "rsPlayBtnIcon", "rsPlayBtn", "rsCloseVideoBtn", "rsCloseVideoIcn" ];
        self._slidesContainer.click(function(e) {
            if (!self.dragSuccess) {
                var t = $(e.target);
                var tClass = t.attr("class");
                if ($.inArray(tClass, videoClasses) !== -1) {
                    if (self.toggleVideo()) {
                        return false;
                    }
                }
                if (self.st.navigateByClick && !self._blockActions) {
                    if ($(e.target).closest(".rsNoDrag", self._currHolder).length) {
                        return true;
                    }
                    self._mouseNext(e);
                }
                self.ev.trigger("rsSlideClick");
            }
        }).on("click.rs", "a", function(e) {
            if (self.dragSuccess) {
                return false;
            } else {
                self._blockActions = true;
                //e.stopPropagation();
                //e.stopImmediatePropagation();
                setTimeout(function() {
                    self._blockActions = false;
                }, 3);
            }
        });
        self.ev.trigger("rsAfterInit");
    }
    /* RoyalSlider Constructor End */
    /**
	 *
	 * RoyalSlider Core Prototype
	 * 
	 */
    RoyalSlider.prototype = {
        constructor: RoyalSlider,
        _mouseNext: function(e) {
            var self = this, relativePos = e[self._slidesHorizontal ? "pageX" : "pageY"] - self._sliderOffset;
            if (relativePos >= self._nextSlidePos) {
                self.next();
            } else if (relativePos < 0) {
                self.prev();
            }
        },
        _refreshNumPreloadImages: function() {
            var self = this, n;
            n = self.st.numImagesToPreload;
            self._loop = self.st.loop;
            if (self._loop) {
                if (self.numSlides === 2) {
                    self._loop = false;
                    self.st.loopRewind = true;
                } else if (self.numSlides < 2) {
                    self.st.loopRewind = self._loop = false;
                }
            }
            if (self._loop && n > 0) {
                if (self.numSlides <= 4) {
                    n = 1;
                } else {
                    if (self.st.numImagesToPreload > (self.numSlides - 1) / 2) {
                        n = Math.floor((self.numSlides - 1) / 2);
                    }
                }
            }
            self._numPreloadImages = n;
        },
        _parseNode: function(content, pushToSlides) {
            var self = this, hasImg, isRoot, hasCover, obj = {}, tempEl, first = true;
            content = $(content);
            self._currContent = content;
            self.ev.trigger("rsBeforeParseNode", [ content, obj ]);
            if (obj.stopParsing) {
                return;
            }
            content = self._currContent;
            obj.id = self._idCount;
            obj.contentAdded = false;
            self._idCount++;
            obj.images = [];
            obj.isBig = false;
            if (!obj.hasCover) {
                if (content.hasClass("rsImg")) {
                    tempEl = content;
                    hasImg = true;
                } else {
                    tempEl = content.find(".rsImg");
                    if (tempEl.length) {
                        hasImg = true;
                    }
                }
                if (hasImg) {
                    obj.bigImage = tempEl.eq(0).attr("data-rsBigImg");
                    tempEl.each(function() {
                        var item = $(this);
                        if (item.is("a")) {
                            parseEl(item, "href");
                        } else if (item.is("img")) {
                            parseEl(item, "src");
                        } else {
                            parseEl(item);
                        }
                    });
                } else if (content.is("img")) {
                    content.addClass("rsImg rsMainSlideImage");
                    parseEl(content, "src");
                }
            }
            tempEl = content.find(".rsCaption");
            if (tempEl.length) {
                obj.caption = tempEl.remove();
            }
            obj.content = content;
            self.ev.trigger("rsAfterParseNode", [ content, obj ]);
            function parseEl(el, s) {
                if (s) {
                    obj.images.push(el.attr(s));
                } else {
                    obj.images.push(el.text());
                }
                if (first) {
                    first = false;
                    obj.caption = s === "src" ? el.attr("alt") : el.contents();
                    obj.image = obj.images[0];
                    obj.videoURL = el.attr("data-rsVideo");
                    var wAtt = el.attr("data-rsw"), hAtt = el.attr("data-rsh");
                    if (typeof wAtt !== "undefined" && wAtt !== false && typeof hAtt !== "undefined" && hAtt !== false) {
                        obj.iW = parseInt(wAtt);
                        obj.iH = parseInt(hAtt);
                    } else if (self.st.imgWidth && self.st.imgHeight) {
                        obj.iW = self.st.imgWidth;
                        obj.iH = self.st.imgHeight;
                    }
                }
            }
            if (pushToSlides) {
                self.slides.push(obj);
            }
            if (obj.images.length === 0) {
                obj.isLoaded = true;
                obj.isRendered = false;
                obj.isLoading = false;
                obj.images = null;
            }
            return obj;
        },
        _bindKeyboardNav: function() {
            var self = this, interval, keyCode, onKeyboardAction = function(keyCode) {
                if (keyCode === 37) {
                    self.prev();
                } else if (keyCode === 39) {
                    self.next();
                }
            };
            self._doc.on("keydown" + self.ns, function(e) {
                if (!self._isDragging) {
                    keyCode = e.keyCode;
                    if (keyCode === 37 || keyCode === 39) {
                        if (!interval) {
                            onKeyboardAction(keyCode);
                            interval = setInterval(function() {
                                onKeyboardAction(keyCode);
                            }, 700);
                        }
                    }
                }
            }).on("keyup" + self.ns, function(e) {
                if (interval) {
                    clearInterval(interval);
                    interval = null;
                }
            });
        },
        goTo: function(id, notUserAction) {
            var self = this;
            if (id !== self.currSlideId) {
                self._moveTo(id, self.st.transitionSpeed, true, !notUserAction);
            }
        },
        destroy: function(remove) {
            var self = this;
            self.ev.trigger("rsBeforeDestroy");
            self._doc.off("keydown" + self.ns + " keyup" + self.ns + " " + self._moveEvent + " " + self._upEvent);
            self._slidesContainer.off(self._downEvent + " click");
            self.slider.data("royalSlider", null);
            $.removeData(self.slider, "royalSlider");
            $(window).off("resize" + self.ns);
            if (remove) {
                self.slider.remove();
            }
            self.slides = null;
            self.slider = null;
            self.ev = null;
        },
        _updateBlocksContent: function(beforeTransition, getId) {
            var self = this, item, i, n, pref, group, groupId, slideCode, loop = self._loop, numSlides = self.numSlides;
            if (!isNaN(getId)) {
                return getCorrectLoopedId(getId);
            }
            var id = self.currSlideId;
            var groupOffset;
            var itemsOnSide = beforeTransition ? Math.abs(self._prevSlideId - self.currSlideId) >= self.numSlides - 1 ? 0 : 1 : self._numPreloadImages;
            var itemsToCheck = Math.min(2, itemsOnSide);
            var updateAfter = false;
            var updateBefore = false;
            var tempId;
            for (i = id; i < id + 1 + itemsToCheck; i++) {
                tempId = getCorrectLoopedId(i);
                item = self.slides[tempId];
                if (item && (!item.isAdded || !item.positionSet)) {
                    updateAfter = true;
                    break;
                }
            }
            for (i = id - 1; i > id - 1 - itemsToCheck; i--) {
                tempId = getCorrectLoopedId(i);
                item = self.slides[tempId];
                if (item && (!item.isAdded || !item.positionSet)) {
                    updateBefore = true;
                    break;
                }
            }
            if (updateAfter) {
                for (i = id; i < id + itemsOnSide + 1; i++) {
                    tempId = getCorrectLoopedId(i);
                    groupOffset = Math.floor((self._realId - (id - i)) / self.numSlides) * self.numSlides;
                    item = self.slides[tempId];
                    if (item) {
                        updateItem(item, tempId);
                    }
                }
            }
            if (updateBefore) {
                for (i = id - 1; i > id - 1 - itemsOnSide; i--) {
                    tempId = getCorrectLoopedId(i);
                    groupOffset = Math.floor((self._realId - (id - i)) / numSlides) * numSlides;
                    item = self.slides[tempId];
                    if (item) {
                        updateItem(item, tempId);
                    }
                }
            }
            if (!beforeTransition) {
                var start = id;
                var distance = itemsOnSide;
                var min = getCorrectLoopedId(id - itemsOnSide);
                var max = getCorrectLoopedId(id + itemsOnSide);
                var nmin = min > max ? 0 : min;
                for (i = 0; i < numSlides; i++) {
                    if (min > max) {
                        if (i > min - 1) {
                            continue;
                        }
                    }
                    if (i < nmin || i > max) {
                        item = self.slides[i];
                        if (item && item.holder) {
                            //slideCode = self.slidesJQ[i];
                            //if(typeof slideCode !== "string") { 
                            item.holder.detach();
                            item.isAdded = false;
                        }
                    }
                }
            }
            function updateItem(item, i, slideCode) {
                if (!item.isAdded) {
                    if (!slideCode) slideCode = self.slidesJQ[i];
                    if (!item.holder) {
                        slideCode = self.slidesJQ[i] = $(slideCode);
                        item.holder = slideCode;
                    } else {
                        slideCode = item.holder;
                    }
                    item.appendOnLoaded = false;
                    updatePos(i, item, slideCode);
                    addContent(i, item);
                    self._addBlockToContainer(item, slideCode, beforeTransition);
                    item.isAdded = true;
                    appended = true;
                } else {
                    addContent(i, item);
                    updatePos(i, item);
                }
            }
            function addContent(i, item) {
                if (!item.contentAdded) {
                    self.setItemHtml(item, beforeTransition);
                    if (!beforeTransition) {
                        item.contentAdded = true;
                    }
                }
            }
            function updatePos(i, item, slideCode) {
                if (self._isMove) {
                    if (!slideCode) {
                        slideCode = self.slidesJQ[i];
                    }
                    slideCode.css(self._reorderProp, (i + self._idOffset + groupOffset) * self._slideSize);
                }
            }
            function getCorrectLoopedId(index) {
                var changed = false;
                if (loop) {
                    if (index > numSlides - 1) {
                        return getCorrectLoopedId(index - numSlides);
                    } else if (index < 0) {
                        return getCorrectLoopedId(numSlides + index);
                    }
                }
                return index;
            }
        },
        /**
		 * Sets or loads HTML for specified slide
		 * @param {Object} currSlideObject  holds data about curr slide (read about rsAfterParseNode for more info)
		 * @param {Boolean} beforeTransition determines if setItemHTML method is called before or after transition
		 */
        setItemHtml: function(currSlideObject, beforeTransition) {
            var self = this;
            if (currSlideObject.isLoaded) {
                appendContent();
                return;
            } else {
                if (beforeTransition) {
                    waitForTransition();
                } else {
                    parseDataAndLoad();
                }
            }
            function parseDataAndLoad() {
                if (!currSlideObject.images) {
                    currSlideObject.isRendered = true;
                    currSlideObject.isLoaded = true;
                    currSlideObject.isLoading = false;
                    appendContent(true);
                    return;
                }
                if (currSlideObject.isLoading) {
                    return;
                }
                var el, isRoot;
                if (currSlideObject.content.hasClass("rsImg")) {
                    el = currSlideObject.content;
                    isRoot = true;
                } else {
                    el = currSlideObject.content.find(".rsImg:not(img)");
                }
                if (el && !el.is("img")) {
                    el.each(function() {
                        var item = $(this), newEl = '<img class="rsImg" src="' + (item.is("a") ? item.attr("href") : item.text()) + '" />';
                        if (!isRoot) {
                            item.replaceWith(newEl);
                        } else {
                            currSlideObject.content = $(newEl);
                        }
                    });
                }
                el = isRoot ? currSlideObject.content : currSlideObject.content.find("img.rsImg");
                setPreloader();
                el.eq(0).addClass("rsMainSlideImage");
                if (currSlideObject.iW && currSlideObject.iH) {
                    if (!currSlideObject.isLoaded) {
                        self._resizeImage(currSlideObject);
                    }
                    appendContent();
                }
                currSlideObject.isLoading = true;
                var newEl;
                if (currSlideObject.isBig) {
                    $("<img />").on("load.rs error.rs", function(e) {
                        onLoad([ this ], true);
                    }).attr("src", currSlideObject.image);
                } else {
                    currSlideObject.loaded = [];
                    currSlideObject.imgLoaders = [];
                    for (var i = 0; i < currSlideObject.images.length; i++) {
                        var image = $("<img />");
                        currSlideObject.imgLoaders.push(this);
                        image.on("load.rs error.rs", function(e) {
                            currSlideObject.loaded.push(this);
                            if (currSlideObject.loaded.length === currSlideObject.imgLoaders.length) {
                                onLoad(currSlideObject.loaded, false);
                            }
                        }).attr("src", currSlideObject.images[i]);
                    }
                }
            }
            function onLoad($images, isBig) {
                if ($images.length) {
                    var img = $images[0], src = img.src;
                    if (isBig !== currSlideObject.isBig) {
                        var c = currSlideObject.holder.children();
                        if (c && c.length > 1) {
                            removePreloader();
                        }
                        return;
                    }
                    if (currSlideObject.iW && currSlideObject.iH) {
                        imageLoadingComplete();
                        return;
                    }
                    currSlideObject.iW = img.width;
                    currSlideObject.iH = img.height;
                    if (currSlideObject.iW && currSlideObject.iH) {
                        imageLoadingComplete();
                        return;
                    } else {
                        // if no size, try again
                        var loader = new Image();
                        loader.onload = function() {
                            if (loader.width) {
                                currSlideObject.iW = loader.width;
                                currSlideObject.iH = loader.height;
                                imageLoadingComplete();
                            } else {
                                setTimeout(function() {
                                    if (loader.width) {
                                        currSlideObject.iW = loader.width;
                                        currSlideObject.iH = loader.height;
                                    }
                                    // failed to get size on last tier, just output image
                                    imageLoadingComplete();
                                }, 1e3);
                            }
                        };
                        loader.src = img.src;
                    }
                } else {
                    imageLoadingComplete();
                }
            }
            function imageLoadingComplete() {
                currSlideObject.isLoaded = true;
                currSlideObject.isLoading = false;
                appendContent();
                removePreloader();
                triggerLoaded();
            }
            function waitForTransition() {
                if (!self._isMove && currSlideObject.images && currSlideObject.iW && currSlideObject.iH) {
                    parseDataAndLoad();
                    return;
                }
                currSlideObject.holder.isWaiting = true;
                setPreloader();
                currSlideObject.holder.slideId = -99;
            }
            function appendContent() {
                if (!currSlideObject.isAppended) {
                    var visibleNearby = self.st.visibleNearby, bId = currSlideObject.id - self._newSlideId;
                    if (!beforeTransition && !currSlideObject.appendOnLoaded && self.st.fadeinLoadedSlide && (bId === 0 || (visibleNearby || self._isAnimating || self._isDragging) && (bId === -1 || bId === 1))) {
                        var css = {
                            visibility: "visible",
                            opacity: 0
                        };
                        css[self._vendorPref + "transition"] = "opacity 400ms ease-in-out";
                        currSlideObject.content.css(css);
                        setTimeout(function() {
                            currSlideObject.content.css("opacity", 1);
                        }, 16);
                    }
                    if (currSlideObject.holder.find(".rsPreloader").length) {
                        currSlideObject.holder.append(currSlideObject.content);
                    } else {
                        currSlideObject.holder.html(currSlideObject.content);
                    }
                    currSlideObject.isAppended = true;
                    if (currSlideObject.isLoaded) {
                        self._resizeImage(currSlideObject);
                        triggerLoaded();
                    }
                    if (!currSlideObject.sizeReady) {
                        currSlideObject.sizeReady = true;
                        setTimeout(function() {
                            // triggers after content is added, usually is true when page is refreshed from cache
                            self.ev.trigger("rsMaybeSizeReady", currSlideObject);
                        }, 100);
                    }
                }
            }
            function triggerLoaded() {
                if (!currSlideObject.loadedTriggered) {
                    currSlideObject.isLoaded = currSlideObject.loadedTriggered = true;
                    currSlideObject.holder.trigger("rsAfterContentSet");
                    self.ev.trigger("rsAfterContentSet", currSlideObject);
                }
            }
            function setPreloader() {
                if (self.st.usePreloader) currSlideObject.holder.html(self._preloader.clone());
            }
            function removePreloader(now) {
                if (self.st.usePreloader) {
                    var preloader = currSlideObject.holder.find(".rsPreloader");
                    if (preloader.length) {
                        preloader.remove();
                    }
                }
            }
        },
        _addBlockToContainer: function(slideObject, content, dontFade) {
            var self = this;
            var holder = slideObject.holder;
            var bId = slideObject.id - self._newSlideId;
            var visibleNearby = false;
            // if(self._isMove && !dontFade && self.st.fadeinLoadedSlide  && ( bId === 0 || ( (visibleNearby || self._isAnimating || self._isDragging) && (bId === -1 || bId === 1) ) ) ) {
            // 	var content = slideObject.content;
            // 	content.css(self._vendorPref + 'transition', 'opacity 400ms ease-in-out').css({visibility: 'visible', opacity: 0});
            // 	//holder.css('opacity', 0);
            // 	self._slidesContainer.append(holder);
            // 	setTimeout(function() {
            // 		content.css('opacity', 1);
            // 		//self.ev.trigger('rsAfterContentSet', holder);
            // 	}, 6);
            // } else {
            self._slidesContainer.append(holder);
            //}
            slideObject.appendOnLoaded = false;
        },
        _onDragStart: function(e, isThumbs) {
            var self = this, point, wasAnimating, isTouch = e.type === "touchstart";
            self._isTouchGesture = isTouch;
            self.ev.trigger("rsDragStart");
            if ($(e.target).closest(".rsNoDrag", self._currHolder).length) {
                self.dragSuccess = false;
                return true;
            }
            if (!isThumbs) {
                if (self._isAnimating) {
                    self._wasAnimating = true;
                    self._stopAnimation();
                }
            }
            self.dragSuccess = false;
            if (self._isDragging) {
                if (isTouch) {
                    self._multipleTouches = true;
                }
                return;
            } else {
                if (isTouch) {
                    self._multipleTouches = false;
                }
            }
            self._setGrabbingCursor();
            if (isTouch) {
                //parsing touch event
                var touches = e.originalEvent.touches;
                if (touches && touches.length > 0) {
                    point = touches[0];
                    if (touches.length > 1) {
                        self._multipleTouches = true;
                    }
                } else {
                    return;
                }
            } else {
                e.preventDefault();
                point = e;
                if (self.msEnabled) point = point.originalEvent;
            }
            self._isDragging = true;
            self._doc.on(self._moveEvent, function(e) {
                self._onDragMove(e, isThumbs);
            }).on(self._upEvent, function(e) {
                self._onDragRelease(e, isThumbs);
            });
            self._currMoveAxis = "";
            self._hasMoved = false;
            self._pageX = point.pageX;
            self._pageY = point.pageY;
            self._startPagePos = self._accelerationPos = (!isThumbs ? self._slidesHorizontal : self._thumbsHorizontal) ? point.pageX : point.pageY;
            self._horDir = 0;
            self._verDir = 0;
            self._currRenderPosition = !isThumbs ? self._sPosition : self._thumbsPosition;
            self._startTime = new Date().getTime();
            if (isTouch) {
                self._sliderOverflow.on(self._cancelEvent, function(e) {
                    self._onDragRelease(e, isThumbs);
                });
            }
        },
        _renderMovement: function(point, isThumbs) {
            var self = this;
            if (self._checkedAxis) {
                var timeStamp = self._renderMoveTime, deltaX = point.pageX - self._pageX, deltaY = point.pageY - self._pageY, newX = self._currRenderPosition + deltaX, newY = self._currRenderPosition + deltaY, isHorizontal = !isThumbs ? self._slidesHorizontal : self._thumbsHorizontal, newPos = isHorizontal ? newX : newY, mAxis = self._currMoveAxis;
                self._hasMoved = true;
                self._pageX = point.pageX;
                self._pageY = point.pageY;
                if (mAxis === "x" && deltaX !== 0) {
                    self._horDir = deltaX > 0 ? 1 : -1;
                } else if (mAxis === "y" && deltaY !== 0) {
                    self._verDir = deltaY > 0 ? 1 : -1;
                }
                var pointPos = isHorizontal ? self._pageX : self._pageY, deltaPos = isHorizontal ? deltaX : deltaY;
                if (!isThumbs) {
                    if (!self._loop) {
                        if (self.currSlideId <= 0) {
                            if (pointPos - self._startPagePos > 0) {
                                newPos = self._currRenderPosition + deltaPos * self._lastItemFriction;
                            }
                        }
                        if (self.currSlideId >= self.numSlides - 1) {
                            if (pointPos - self._startPagePos < 0) {
                                newPos = self._currRenderPosition + deltaPos * self._lastItemFriction;
                            }
                        }
                    }
                } else {
                    if (newPos > self._thumbsMinPosition) {
                        newPos = self._currRenderPosition + deltaPos * self._lastItemFriction;
                    } else if (newPos < self._thumbsMaxPosition) {
                        newPos = self._currRenderPosition + deltaPos * self._lastItemFriction;
                    }
                }
                self._currRenderPosition = newPos;
                if (timeStamp - self._startTime > 200) {
                    self._startTime = timeStamp;
                    self._accelerationPos = pointPos;
                }
                if (!isThumbs) {
                    if (self._isMove) {
                        self._setPosition(self._currRenderPosition);
                    }
                } else {
                    self._setThumbsPosition(self._currRenderPosition);
                }
            }
        },
        _onDragMove: function(e, isThumbs) {
            var self = this, point, isTouch = e.type === "touchmove";
            if (self._isTouchGesture && !isTouch) {
                return;
            }
            if (isTouch) {
                if (self._lockAxis) {
                    return;
                }
                var touches = e.originalEvent.touches;
                if (touches) {
                    if (touches.length > 1) {
                        return;
                    } else {
                        point = touches[0];
                    }
                } else {
                    return;
                }
            } else {
                point = e;
                if (self.msEnabled) point = point.originalEvent;
            }
            if (!self._hasMoved) {
                if (self._useCSS3Transitions) {
                    (!isThumbs ? self._slidesContainer : self._thumbsContainer).css(self._vendorPref + self._TD, "0s");
                }
                (function animloop() {
                    if (self._isDragging) {
                        self._animFrame = requestAnimationFrame(animloop);
                        if (self._renderMoveEvent) self._renderMovement(self._renderMoveEvent, isThumbs);
                    }
                })();
            }
            if (!self._checkedAxis) {
                var dir = !isThumbs ? self._slidesHorizontal : self._thumbsHorizontal, diff = Math.abs(point.pageX - self._pageX) - Math.abs(point.pageY - self._pageY) - (dir ? -7 : 7);
                if (diff > 7) {
                    // hor movement
                    if (dir) {
                        e.preventDefault();
                        self._currMoveAxis = "x";
                    } else if (isTouch) {
                        self._completeGesture();
                        return;
                    }
                    self._checkedAxis = true;
                } else if (diff < -7) {
                    // ver movement
                    if (!dir) {
                        e.preventDefault();
                        self._currMoveAxis = "y";
                    } else if (isTouch) {
                        self._completeGesture();
                        return;
                    }
                    self._checkedAxis = true;
                }
                return;
            }
            e.preventDefault();
            self._renderMoveTime = new Date().getTime();
            self._renderMoveEvent = point;
        },
        _completeGesture: function() {
            var self = this;
            self._lockAxis = true;
            self._hasMoved = self._isDragging = false;
            self._onDragRelease();
        },
        _onDragRelease: function(e, isThumbs) {
            var self = this, totalMoveDist, accDist, duration, v0, newPos, newDist, newDuration, blockLink, isTouch = e.type === "touchend" || e.type === "touchcancel";
            if (self._isTouchGesture && !isTouch) {
                return;
            }
            self._isTouchGesture = false;
            self.ev.trigger("rsDragRelease");
            self._renderMoveEvent = null;
            self._isDragging = false;
            self._lockAxis = false;
            self._checkedAxis = false;
            self._renderMoveTime = 0;
            cancelAnimationFrame(self._animFrame);
            if (self._hasMoved) {
                if (!isThumbs) {
                    if (self._isMove) {
                        self._setPosition(self._currRenderPosition);
                    }
                } else {
                    self._setThumbsPosition(self._currRenderPosition);
                }
            }
            self._doc.off(self._moveEvent).off(self._upEvent);
            if (isTouch) {
                self._sliderOverflow.off(self._cancelEvent);
            }
            self._setGrabCursor();
            if (!self._hasMoved && !self._multipleTouches) {
                if (isThumbs && self._thumbsEnabled) {
                    var item = $(e.target).closest(".rsNavItem");
                    if (item.length) {
                        self.goTo(item.index());
                    }
                    return;
                }
            }
            var orient = !isThumbs ? self._slidesHorizontal : self._thumbsHorizontal;
            if (!self._hasMoved || self._currMoveAxis === "y" && orient || self._currMoveAxis === "x" && !orient) {
                if (!isThumbs && self._wasAnimating) {
                    self._wasAnimating = false;
                    if (!self.st.navigateByClick) {
                        self.dragSuccess = true;
                    } else {
                        self._mouseNext(self.msEnabled ? e.originalEvent : e);
                        self.dragSuccess = true;
                        return;
                    }
                } else {
                    self._wasAnimating = false;
                    self.dragSuccess = false;
                    return;
                }
            } else {
                self.dragSuccess = true;
            }
            self._wasAnimating = false;
            self._currMoveAxis = "";
            function getCorrectSpeed(newSpeed) {
                if (newSpeed < 100) {
                    return 100;
                } else if (newSpeed > 500) {
                    return 500;
                }
                return newSpeed;
            }
            function returnToCurrent(isSlow, v0) {
                if (self._isMove || isThumbs) {
                    newPos = (-self._realId - self._idOffset) * self._slideSize;
                    newDist = Math.abs(self._sPosition - newPos);
                    self._currAnimSpeed = newDist / v0;
                    if (isSlow) {
                        self._currAnimSpeed += 250;
                    }
                    self._currAnimSpeed = getCorrectSpeed(self._currAnimSpeed);
                    self._animateTo(newPos, false);
                }
            }
            var snapDist = self.st.minSlideOffset, point = isTouch ? e.originalEvent.changedTouches[0] : self.msEnabled ? e.originalEvent : e, pPos = orient ? point.pageX : point.pageY, sPos = self._startPagePos, axPos = self._accelerationPos, axCurrItem = self.currSlideId, axNumItems = self.numSlides, dir = orient ? self._horDir : self._verDir, loop = self._loop, changeHash = false, distOffset = 0;
            totalMoveDist = Math.abs(pPos - sPos);
            accDist = pPos - axPos;
            duration = new Date().getTime() - self._startTime;
            v0 = Math.abs(accDist) / duration;
            if (dir === 0 || axNumItems <= 1) {
                returnToCurrent(true, v0);
                return;
            }
            if (!loop && !isThumbs) {
                if (axCurrItem <= 0) {
                    if (dir > 0) {
                        returnToCurrent(true, v0);
                        return;
                    }
                } else if (axCurrItem >= axNumItems - 1) {
                    if (dir < 0) {
                        returnToCurrent(true, v0);
                        return;
                    }
                }
            }
            if (!isThumbs) {
                if (sPos + snapDist < pPos) {
                    if (dir < 0) {
                        returnToCurrent(false, v0);
                        return;
                    }
                    self._moveTo("prev", getCorrectSpeed(Math.abs(self._sPosition - (-self._realId - self._idOffset + 1) * self._slideSize) / v0), changeHash, true, true);
                } else if (sPos - snapDist > pPos) {
                    if (dir > 0) {
                        returnToCurrent(false, v0);
                        return;
                    }
                    self._moveTo("next", getCorrectSpeed(Math.abs(self._sPosition - (-self._realId - self._idOffset - 1) * self._slideSize) / v0), changeHash, true, true);
                } else {
                    returnToCurrent(false, v0);
                }
            } else {
                var newPos = self._thumbsPosition;
                var transitionSpeed;
                if (newPos > self._thumbsMinPosition) {
                    newPos = self._thumbsMinPosition;
                } else if (newPos < self._thumbsMaxPosition) {
                    newPos = self._thumbsMaxPosition;
                } else {
                    var friction = .003, S = v0 * v0 / (friction * 2), minXDist = -self._thumbsPosition, maxXDist = self._thumbsContainerSize - self._thumbsViewportSize + self._thumbsPosition;
                    if (accDist > 0 && S > minXDist) {
                        minXDist = minXDist + self._thumbsViewportSize / (15 / (S / v0 * friction));
                        v0 = v0 * minXDist / S;
                        S = minXDist;
                    } else if (accDist < 0 && S > maxXDist) {
                        maxXDist = maxXDist + self._thumbsViewportSize / (15 / (S / v0 * friction));
                        v0 = v0 * maxXDist / S;
                        S = maxXDist;
                    }
                    transitionSpeed = Math.max(Math.round(v0 / friction), 50);
                    newPos = newPos + S * (accDist < 0 ? -1 : 1);
                    if (newPos > self._thumbsMinPosition) {
                        self._animateThumbsTo(newPos, transitionSpeed, true, self._thumbsMinPosition, 200);
                        return;
                    } else if (newPos < self._thumbsMaxPosition) {
                        self._animateThumbsTo(newPos, transitionSpeed, true, self._thumbsMaxPosition, 200);
                        return;
                    }
                }
                self._animateThumbsTo(newPos, transitionSpeed, true);
            }
        },
        _setPosition: function(pos) {
            var self = this;
            pos = self._sPosition = pos;
            if (self._useCSS3Transitions) {
                self._slidesContainer.css(self._xProp, self._tPref1 + (self._slidesHorizontal ? pos + self._tPref2 + 0 : 0 + self._tPref2 + pos) + self._tPref3);
            } else {
                self._slidesContainer.css(self._slidesHorizontal ? self._xProp : self._yProp, pos);
            }
        },
        updateSliderSize: function(force) {
            var self = this, newWidth, newHeight;
            if (self.st.autoScaleSlider) {
                var asw = self.st.autoScaleSliderWidth, ash = self.st.autoScaleSliderHeight;
                if (self.st.autoScaleHeight) {
                    newWidth = self.slider.width();
                    if (newWidth != self.width) {
                        self.slider.css("height", newWidth * (ash / asw));
                        newWidth = self.slider.width();
                    }
                    newHeight = self.slider.height();
                } else {
                    newHeight = self.slider.height();
                    if (newHeight != self.height) {
                        self.slider.css("width", newHeight * (asw / ash));
                        newHeight = self.slider.height();
                    }
                    newWidth = self.slider.width();
                }
            } else {
                newWidth = self.slider.width();
                newHeight = self.slider.height();
            }
            if (force || newWidth != self.width || newHeight != self.height) {
                self.width = newWidth;
                self.height = newHeight;
                self._wrapWidth = newWidth;
                self._wrapHeight = newHeight;
                self.ev.trigger("rsBeforeSizeSet");
                self.ev.trigger("rsAfterSizePropSet");
                self._sliderOverflow.css({
                    width: self._wrapWidth,
                    height: self._wrapHeight
                });
                self._slideSize = (self._slidesHorizontal ? self._wrapWidth : self._wrapHeight) + self.st.slidesSpacing;
                self._imagePadding = self.st.imageScalePadding;
                var item, slideItem, i, img;
                for (i = 0; i < self.slides.length; i++) {
                    item = self.slides[i];
                    item.positionSet = false;
                    if (item && item.images && item.isLoaded) {
                        item.isRendered = false;
                        self._resizeImage(item);
                    }
                }
                if (self._cloneHolders) {
                    for (i = 0; i < self._cloneHolders.length; i++) {
                        item = self._cloneHolders[i];
                        item.holder.css(self._reorderProp, (item.id + self._idOffset) * self._slideSize);
                    }
                }
                self._updateBlocksContent();
                if (self._isMove) {
                    if (self._useCSS3Transitions) {
                        self._slidesContainer.css(self._vendorPref + "transition-duration", "0s");
                    }
                    self._setPosition((-self._realId - self._idOffset) * self._slideSize);
                }
                self.ev.trigger("rsOnUpdateNav");
            }
            self._sliderOffset = self._sliderOverflow.offset();
            self._sliderOffset = self._sliderOffset[self._reorderProp];
        },
        //setSlidesOrientation: function(orient) {
        // TODO
        // var self = this,
        // 	newHor = Boolean(orient === 'horizontal');
        // if(self._slidesHorizontal !== newHor) {
        // 	self._setPosition(0);
        // 	if(self._isMove) {
        // 		for(var i = 0; i < self._slideHolders.length; i++) {
        // 			self._slideHolders[i].block.css(self._reorderProp, '');
        // 		}
        // 	}
        // 	self.slider.removeClass(self._slidesHorizontal ? 'rsHor' : 'rsVer').addClass(newHor ? 'rsHor' : 'rsVer');
        // 	self._slidesHorizontal = newHor;
        // 	self._reorderProp = newHor ? 'left' : 'top';
        // 	self.updateSliderSize(true);
        // }
        //},
        /**
		 * Adds slide
		 * @param  {jQuery object or raw HTML} htmltext 
		 * @param  {int} index    (optional) Index where item should be added (last item is removed of not specified)
		 */
        appendSlide: function(htmltext, index) {
            var self = this, parsedSlide = self._parseNode(htmltext);
            if (isNaN(index) || index > self.numSlides) {
                index = self.numSlides;
            }
            self.slides.splice(index, 0, parsedSlide);
            self.slidesJQ.splice(index, 0, '<div style="' + (self._isMove ? "position:absolute;" : self._opacityCSS) + '" class="rsSlide"></div>');
            if (index < self.currSlideId) {
                self.currSlideId++;
            }
            self.ev.trigger("rsOnAppendSlide", [ parsedSlide, index ]);
            self._refreshSlides(index);
            if (index === self.currSlideId) {
                self.ev.trigger("rsAfterSlideChange");
            }
        },
        /**
		 * Removes slide
		 * @param  {int} Index of item that should be removed
		 */
        removeSlide: function(index) {
            var self = this, slideToRemove = self.slides[index];
            if (slideToRemove) {
                if (slideToRemove.holder) {
                    slideToRemove.holder.remove();
                }
                if (index < self.currSlideId) {
                    self.currSlideId--;
                }
                self.slides.splice(index, 1);
                self.slidesJQ.splice(index, 1);
                self.ev.trigger("rsOnRemoveSlide", [ index ]);
                self._refreshSlides(index);
                if (index === self.currSlideId) {
                    self.ev.trigger("rsAfterSlideChange");
                }
            }
        },
        _refreshSlides: function(refreshIndex) {
            // todo: optimize this stuff
            var self = this;
            var oldNumSlides = self.numSlides;
            var numLoops = self._realId <= 0 ? 0 : Math.floor(self._realId / oldNumSlides);
            self.numSlides = self.slides.length;
            if (self.numSlides === 0) {
                self.currSlideId = self._idOffset = self._realId = 0;
                self.currSlide = self._oldHolder = null;
            } else {
                self._realId = numLoops * self.numSlides + self.currSlideId;
            }
            for (var i = 0; i < self.numSlides; i++) {
                self.slides[i].id = i;
            }
            self.currSlide = self.slides[self.currSlideId];
            self._currHolder = self.slidesJQ[self.currSlideId];
            if (self.currSlideId >= self.numSlides) {
                self.goTo(self.numSlides - 1);
            } else if (self.currSlideId < 0) {
                self.goTo(0);
            }
            self._refreshNumPreloadImages();
            if (self._isMove && self._loop) {
                self._slidesContainer.css(self._vendorPref + self._TD, "0ms");
            }
            if (self._refreshSlidesTimeout) {
                clearTimeout(self._refreshSlidesTimeout);
            }
            self._refreshSlidesTimeout = setTimeout(function() {
                if (self._isMove) {
                    self._setPosition((-self._realId - self._idOffset) * self._slideSize);
                }
                self._updateBlocksContent();
                if (!self._isMove) {
                    self._currHolder.css({
                        display: "block",
                        opacity: 1
                    });
                }
            }, 14);
            self.ev.trigger("rsOnUpdateNav");
        },
        _setGrabCursor: function() {
            var self = this;
            if (self._hasDrag && self._isMove) {
                if (self._grabCursor) {
                    self._sliderOverflow.css("cursor", self._grabCursor);
                } else {
                    self._sliderOverflow.removeClass("grabbing-cursor");
                    self._sliderOverflow.addClass("grab-cursor");
                }
            }
        },
        _setGrabbingCursor: function() {
            var self = this;
            if (self._hasDrag && self._isMove) {
                if (self._grabbingCursor) {
                    self._sliderOverflow.css("cursor", self._grabbingCursor);
                } else {
                    self._sliderOverflow.removeClass("grab-cursor");
                    self._sliderOverflow.addClass("grabbing-cursor");
                }
            }
        },
        next: function(notUserAction) {
            var self = this;
            self._moveTo("next", self.st.transitionSpeed, true, !notUserAction);
        },
        prev: function(notUserAction) {
            var self = this;
            self._moveTo("prev", self.st.transitionSpeed, true, !notUserAction);
        },
        _moveTo: function(type, speed, inOutEasing, userAction, fromSwipe) {
            var self = this, newPos, difference, i;
            self.ev.trigger("rsBeforeMove", [ type, userAction ]);
            if (type === "next") {
                newItemId = self.currSlideId + 1;
            } else if (type === "prev") {
                newItemId = self.currSlideId - 1;
            } else {
                newItemId = type = parseInt(type, 10);
            }
            if (!self._loop) {
                if (newItemId < 0) {
                    self._doBackAndForthAnim("left", !userAction);
                    return;
                } else if (newItemId >= self.numSlides) {
                    self._doBackAndForthAnim("right", !userAction);
                    return;
                }
            }
            if (self._isAnimating) {
                self._stopAnimation(true);
                inOutEasing = false;
            }
            difference = newItemId - self.currSlideId;
            self._prevSlideId = self.currSlideId;
            var prevId = self.currSlideId;
            var id = self.currSlideId + difference;
            var realId = self._realId;
            var temp;
            var delayed;
            if (self._loop) {
                id = self._updateBlocksContent(false, id);
                realId += difference;
            } else {
                realId = id;
            }
            self._newSlideId = id;
            self._oldHolder = self.slidesJQ[self.currSlideId];
            self._realId = realId;
            self.currSlideId = self._newSlideId;
            self.currSlide = self.slides[self.currSlideId];
            self._currHolder = self.slidesJQ[self.currSlideId];
            var checkDist = self.st.slidesDiff;
            var next = Boolean(difference > 0);
            var absDiff = Math.abs(difference);
            var g1 = Math.floor(prevId / self._numPreloadImages);
            var g2 = Math.floor((prevId + (next ? checkDist : -checkDist)) / self._numPreloadImages);
            var biggest = next ? Math.max(g1, g2) : Math.min(g1, g2);
            var biggestId = biggest * self._numPreloadImages + (next ? self._numPreloadImages - 1 : 0);
            if (biggestId > self.numSlides - 1) {
                biggestId = self.numSlides - 1;
            } else if (biggestId < 0) {
                biggestId = 0;
            }
            var toLast = next ? biggestId - prevId : prevId - biggestId;
            if (toLast > self._numPreloadImages) {
                toLast = self._numPreloadImages;
            }
            if (absDiff > toLast + checkDist) {
                self._idOffset += (absDiff - (toLast + checkDist)) * (next ? -1 : 1);
                speed = speed * 1.4;
                for (i = 0; i < self.numSlides; i++) {
                    self.slides[i].positionSet = false;
                }
            }
            self._currAnimSpeed = speed;
            self._updateBlocksContent(true);
            if (!fromSwipe) {
                delayed = true;
            }
            newPos = (-realId - self._idOffset) * self._slideSize;
            if (delayed) {
                setTimeout(function() {
                    self._isWorking = false;
                    self._animateTo(newPos, type, false, inOutEasing);
                    self.ev.trigger("rsOnUpdateNav");
                }, 0);
            } else {
                self._animateTo(newPos, type, false, inOutEasing);
                self.ev.trigger("rsOnUpdateNav");
            }
            function isSetToCurrent(testId) {
                if (testId < 0) {
                    testId = self.numSlides + testId;
                } else if (testId > self.numSlides - 1) {
                    testId = testId - self.numSlides;
                }
                if (testId !== self.currSlideId) {
                    return false;
                }
                return true;
            }
        },
        _updateArrowsNav: function() {
            var self = this, arrDisClass = "rsArrowDisabled";
            if (self.st.arrowsNav) {
                if (self.numSlides <= 1) {
                    self._arrowLeft.css("display", "none");
                    self._arrowRight.css("display", "none");
                    return;
                } else {
                    self._arrowLeft.css("display", "block");
                    self._arrowRight.css("display", "block");
                }
                if (!self._loop && !self.st.loopRewind) {
                    if (self.currSlideId === 0) {
                        self._arrowLeft.addClass(arrDisClass);
                    } else {
                        self._arrowLeft.removeClass(arrDisClass);
                    }
                    if (self.currSlideId === self.numSlides - 1) {
                        self._arrowRight.addClass(arrDisClass);
                    } else {
                        self._arrowRight.removeClass(arrDisClass);
                    }
                }
            }
        },
        _animateTo: function(pos, dir, loadAll, inOutEasing, customComplete) {
            var self = this, moveProp, oldBlock, animBlock;
            var animObj = {};
            if (isNaN(self._currAnimSpeed)) {
                self._currAnimSpeed = 400;
            }
            self._sPosition = self._currRenderPosition = pos;
            self.ev.trigger("rsBeforeAnimStart");
            if (!self._useCSS3Transitions) {
                if (self._isMove) {
                    animObj[self._slidesHorizontal ? self._xProp : self._yProp] = pos + "px";
                    self._slidesContainer.animate(animObj, self._currAnimSpeed, /*'easeOutQuart'*/ inOutEasing ? self.st.easeInOut : self.st.easeOut);
                } else {
                    oldBlock = self._oldHolder;
                    animBlock = self._currHolder;
                    animBlock.stop(true, true).css({
                        opacity: 0,
                        display: "block",
                        zIndex: self._fadeZIndex
                    });
                    self._currAnimSpeed = self.st.transitionSpeed;
                    animBlock.animate({
                        opacity: 1
                    }, self._currAnimSpeed, self.st.easeInOut);
                    clearTimeouts();
                    if (oldBlock) {
                        oldBlock.data("rsTimeout", setTimeout(function() {
                            oldBlock.stop(true, true).css({
                                opacity: 0,
                                display: "none",
                                zIndex: 0
                            });
                        }, self._currAnimSpeed + 60));
                    }
                }
            } else {
                if (self._isMove) {
                    self._currAnimSpeed = parseInt(self._currAnimSpeed);
                    var td = self._vendorPref + self._TD;
                    var ttf = self._vendorPref + self._TTF;
                    animObj[td] = self._currAnimSpeed + "ms";
                    animObj[ttf] = inOutEasing ? $.rsCSS3Easing[self.st.easeInOut] : $.rsCSS3Easing[self.st.easeOut];
                    self._slidesContainer.css(animObj);
                    if (inOutEasing || !self.hasTouch) {
                        setTimeout(function() {
                            self._setPosition(pos);
                        }, 5);
                    } else {
                        self._setPosition(pos);
                    }
                } else {
                    //self._currAnimSpeed = 10
                    self._currAnimSpeed = self.st.transitionSpeed;
                    oldBlock = self._oldHolder;
                    animBlock = self._currHolder;
                    if (animBlock.data("rsTimeout")) {
                        animBlock.css("opacity", 0);
                    }
                    clearTimeouts();
                    if (oldBlock) {
                        //if(oldBlock)
                        oldBlock.data("rsTimeout", setTimeout(function() {
                            animObj[self._vendorPref + self._TD] = "0ms";
                            animObj.zIndex = 0;
                            animObj.display = "none";
                            oldBlock.data("rsTimeout", "");
                            oldBlock.css(animObj);
                            setTimeout(function() {
                                oldBlock.css("opacity", 0);
                            }, 16);
                        }, self._currAnimSpeed + 60));
                    }
                    animObj.display = "block";
                    animObj.zIndex = self._fadeZIndex;
                    animObj.opacity = 0;
                    animObj[self._vendorPref + self._TD] = "0ms";
                    animObj[self._vendorPref + self._TTF] = $.rsCSS3Easing[self.st.easeInOut];
                    animBlock.css(animObj);
                    animBlock.data("rsTimeout", setTimeout(function() {
                        //animBlock.css('opacity', 0);
                        animBlock.css(self._vendorPref + self._TD, self._currAnimSpeed + "ms");
                        //oldBlock.css(self._vendorPref + self._TD,  '0ms');
                        animBlock.data("rsTimeout", setTimeout(function() {
                            animBlock.css("opacity", 1);
                            animBlock.data("rsTimeout", "");
                        }, 20));
                    }, 20));
                }
            }
            self._isAnimating = true;
            if (self.loadingTimeout) {
                clearTimeout(self.loadingTimeout);
            }
            if (customComplete) {
                self.loadingTimeout = setTimeout(function() {
                    self.loadingTimeout = null;
                    customComplete.call();
                }, self._currAnimSpeed + 60);
            } else {
                self.loadingTimeout = setTimeout(function() {
                    self.loadingTimeout = null;
                    self._animationComplete(dir);
                }, self._currAnimSpeed + 60);
            }
            function clearTimeouts() {
                var t;
                if (oldBlock) {
                    t = oldBlock.data("rsTimeout");
                    if (t) {
                        if (oldBlock !== animBlock) {
                            oldBlock.css({
                                opacity: 0,
                                display: "none",
                                zIndex: 0
                            });
                        }
                        clearTimeout(t);
                        oldBlock.data("rsTimeout", "");
                    }
                }
                t = animBlock.data("rsTimeout");
                if (t) {
                    clearTimeout(t);
                    animBlock.data("rsTimeout", "");
                }
            }
        },
        _stopAnimation: function(noCSS3) {
            var self = this;
            self._isAnimating = false;
            clearTimeout(self.loadingTimeout);
            if (self._isMove) {
                if (!self._useCSS3Transitions) {
                    self._slidesContainer.stop(true);
                    self._sPosition = parseInt(self._slidesContainer.css(self._xProp), 10);
                } else if (!noCSS3) {
                    var oldPos = self._sPosition;
                    var newPos = self._currRenderPosition = self._getTransformProp();
                    self._slidesContainer.css(self._vendorPref + self._TD, "0ms");
                    if (oldPos !== newPos) {
                        self._setPosition(newPos);
                    }
                }
            } else {
                // kung fu
                if (self._fadeZIndex > 20) {
                    self._fadeZIndex = 10;
                } else {
                    self._fadeZIndex++;
                }
            }
        },
        // Thanks to @benpbarnett
        _getTransformProp: function() {
            var self = this, transform = window.getComputedStyle(self._slidesContainer.get(0), null).getPropertyValue(self._vendorPref + "transform"), explodedMatrix = transform.replace(/^matrix\(/i, "").split(/, |\)$/g), isMatrix3d = explodedMatrix[0].indexOf("matrix3d") === 0;
            return parseInt(explodedMatrix[self._slidesHorizontal ? isMatrix3d ? 12 : 4 : isMatrix3d ? 13 : 5], 10);
        },
        _getCSS3Prop: function(pos, hor) {
            var self = this;
            return self._useCSS3Transitions ? self._tPref1 + (hor ? pos + self._tPref2 + 0 : 0 + self._tPref2 + pos) + self._tPref3 : pos;
        },
        _animationComplete: function(dir) {
            var self = this;
            if (!self._isMove) {
                self._currHolder.css("z-index", 0);
                self._fadeZIndex = 10;
            }
            self._isAnimating = false;
            self.staticSlideId = self.currSlideId;
            self._updateBlocksContent();
            self._slidesMoved = false;
            self.ev.trigger("rsAfterSlideChange");
        },
        _doBackAndForthAnim: function(type, userAction) {
            var self = this, newPos = (-self._realId - self._idOffset) * self._slideSize;
            if (self.numSlides === 0 || self._isAnimating) {
                return;
            }
            if (self.st.loopRewind) {
                self.goTo(type === "left" ? self.numSlides - 1 : 0, userAction);
                return;
            }
            if (self._isMove) {
                self._currAnimSpeed = 200;
                function allAnimComplete() {
                    self._isAnimating = false;
                }
                function firstAnimComplete() {
                    self._isAnimating = false;
                    self._animateTo(newPos, "", false, true, allAnimComplete);
                }
                self._animateTo(newPos + (type === "left" ? 30 : -30), "", false, true, firstAnimComplete);
            }
        },
        _resizeImage: function(slideObject, useClone) {
            var isRoot = true;
            if (slideObject.isRendered) {
                return;
            }
            var img = slideObject.content;
            var classToFind = "rsMainSlideImage";
            var isVideo;
            var self = this, imgAlignCenter = self.st.imageAlignCenter, imgScaleMode = self.st.imageScaleMode, tempEl;
            if (slideObject.videoURL) {
                classToFind = "rsVideoContainer";
                if (imgScaleMode !== "fill") {
                    isVideo = true;
                } else {
                    tempEl = img;
                    if (!tempEl.hasClass(classToFind)) {
                        tempEl = tempEl.find("." + classToFind);
                    }
                    tempEl.css({
                        width: "100%",
                        height: "100%"
                    });
                    classToFind = "rsMainSlideImage";
                }
            }
            if (!img.hasClass(classToFind)) {
                isRoot = false;
                img = img.find("." + classToFind);
            }
            if (!img) {
                return;
            }
            var baseImageWidth = slideObject.iW, baseImageHeight = slideObject.iH;
            slideObject.isRendered = true;
            if (imgScaleMode === "none" && !imgAlignCenter) {
                return;
            }
            if (imgScaleMode !== "fill") {
                bMargin = self._imagePadding;
            } else {
                bMargin = 0;
            }
            //var block = img.parent('.block-inside').css('margin', bMargin);
            var containerWidth = self._wrapWidth - bMargin * 2, containerHeight = self._wrapHeight - bMargin * 2, hRatio, vRatio, ratio, nWidth, nHeight, cssObj = {};
            if (imgScaleMode === "fit-if-smaller") {
                if (baseImageWidth > containerWidth || baseImageHeight > containerHeight) {
                    imgScaleMode = "fit";
                }
            }
            if (imgScaleMode === "fill" || imgScaleMode === "fit") {
                hRatio = containerWidth / baseImageWidth;
                vRatio = containerHeight / baseImageHeight;
                if (imgScaleMode == "fill") {
                    ratio = hRatio > vRatio ? hRatio : vRatio;
                } else if (imgScaleMode == "fit") {
                    ratio = hRatio < vRatio ? hRatio : vRatio;
                } else {
                    ratio = 1;
                }
                nWidth = Math.ceil(baseImageWidth * ratio, 10);
                nHeight = Math.ceil(baseImageHeight * ratio, 10);
            } else {
                nWidth = baseImageWidth;
                nHeight = baseImageHeight;
            }
            if (imgScaleMode !== "none") {
                cssObj.width = nWidth;
                cssObj.height = nHeight;
                if (isVideo) {
                    img.find(".rsImg").css({
                        width: "100%",
                        height: "100%"
                    });
                }
            }
            if (imgAlignCenter) {
                cssObj.marginLeft = Math.floor((containerWidth - nWidth) / 2) + bMargin;
                cssObj.marginTop = Math.floor((containerHeight - nHeight) / 2) + bMargin;
            }
            img.css(cssObj);
        }
    };
    /* RoyalSlider core prototype end */
    $.rsProto = RoyalSlider.prototype;
    $.fn.royalSlider = function(options) {
        var args = arguments;
        return this.each(function() {
            var self = $(this);
            if (typeof options === "object" || !options) {
                if (!self.data("royalSlider")) {
                    self.data("royalSlider", new RoyalSlider(self, options));
                }
            } else {
                var royalSlider = self.data("royalSlider");
                if (royalSlider && royalSlider[options]) {
                    return royalSlider[options].apply(royalSlider, Array.prototype.slice.call(args, 1));
                }
            }
        });
    };
    $.fn.royalSlider.defaults = {
        slidesSpacing: 8,
        startSlideId: 0,
        loop: false,
        loopRewind: false,
        numImagesToPreload: 4,
        fadeinLoadedSlide: true,
        slidesOrientation: "horizontal",
        transitionType: "move",
        transitionSpeed: 600,
        controlNavigation: "bullets",
        controlsInside: true,
        arrowsNav: true,
        arrowsNavAutoHide: true,
        navigateByClick: true,
        randomizeSlides: false,
        sliderDrag: true,
        sliderTouch: true,
        keyboardNavEnabled: false,
        fadeInAfterLoaded: true,
        allowCSS3: true,
        allowCSS3OnWebkit: true,
        addActiveClass: false,
        autoHeight: false,
        easeOut: "easeOutSine",
        easeInOut: "easeInOutSine",
        minSlideOffset: 10,
        imageScaleMode: "fit-if-smaller",
        imageAlignCenter: true,
        imageScalePadding: 4,
        usePreloader: true,
        autoScaleSlider: false,
        autoScaleSliderWidth: 800,
        autoScaleSliderHeight: 400,
        autoScaleHeight: true,
        arrowsNavHideOnTouch: false,
        globalCaption: false,
        slidesDiff: 2
    };
    /* default options end */
    $.rsCSS3Easing = {
        easeOutSine: "cubic-bezier(0.390, 0.575, 0.565, 1.000)",
        easeInOutSine: "cubic-bezier(0.445, 0.050, 0.550, 0.950)"
    };
    $.extend(jQuery.easing, {
        easeInOutSine: function(x, t, b, c, d) {
            return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;
        },
        easeOutSine: function(x, t, b, c, d) {
            return c * Math.sin(t / d * (Math.PI / 2)) + b;
        },
        easeOutCubic: function(x, t, b, c, d) {
            return c * ((t = t / d - 1) * t * t + 1) + b;
        }
    });
})(jQuery, window);

(function($) {
    /**
	 *
	 * RoyalSlider auto height module
	 * @version 1.0.2:
	 *
	 * 1.0.2
	 * - Changed "on" to "one" in afterInit event listener
	 * - Removed id="clear"
	 */
    $.extend($.rsProto, {
        _initAutoHeight: function() {
            var self = this;
            if (self.st.autoHeight) {
                var holder, tH, currSlide, currHeight, updHeight = function(animate) {
                    currSlide = self.slides[self.currSlideId];
                    holder = currSlide.holder;
                    if (holder) {
                        tH = holder.height();
                        if (tH && tH !== currHeight) {
                            self._wrapHeight = tH;
                            if (self._useCSS3Transitions || !animate) {
                                self._sliderOverflow.css("height", tH);
                            } else {
                                self._sliderOverflow.stop(true, true).animate({
                                    height: tH
                                }, self.st.transitionSpeed);
                            }
                        }
                    }
                };
                self.ev.on("rsMaybeSizeReady.rsAutoHeight", function(e, slideObject) {
                    if (currSlide === slideObject) {
                        updHeight();
                    }
                });
                self.ev.on("rsAfterContentSet.rsAutoHeight", function(e, slideObject) {
                    if (currSlide === slideObject) {
                        updHeight();
                    }
                });
                self.slider.addClass("rsAutoHeight");
                self.ev.one("rsAfterInit", function() {
                    setTimeout(function() {
                        updHeight(false);
                        setTimeout(function() {
                            self.slider.append('<div style="clear:both; float: none;"></div>');
                            if (self._useCSS3Transitions) {
                                self._sliderOverflow.css(self._vendorPref + "transition", "height " + self.st.transitionSpeed + "ms ease-in-out");
                            }
                        }, 16);
                    }, 16);
                });
                self.ev.on("rsBeforeAnimStart", function() {
                    updHeight(true);
                });
                self.ev.on("rsBeforeSizeSet", function() {
                    setTimeout(function() {
                        updHeight(false);
                    }, 16);
                });
            }
        }
    });
    $.rsModules.autoHeight = $.rsProto._initAutoHeight;
})(jQuery);

(function($) {
    /**
	 *
	 * RoyalSlider auto play module
	 * @version 1.0.5:
	 *
	 * 1.0.3:
	 * - added support for 'autoplay' property name. 
	 *
	 * 1.0.4
	 * - added toggleAutoPlay public method
	 *
	 * 1.0.5
	 * - Fixed issue when autoPlay may not pause when switching browser tabs
	 */
    $.extend($.rsProto, {
        _initAutoplay: function() {
            var self = this, del;
            self._autoPlayDefaults = {
                enabled: false,
                stopAtAction: true,
                pauseOnHover: true,
                delay: 2e3
            };
            // fix deprecated name
            if (!self.st.autoPlay && self.st.autoplay) {
                self.st.autoPlay = self.st.autoplay;
            }
            self.st.autoPlay = $.extend({}, self._autoPlayDefaults, self.st.autoPlay);
            if (self.st.autoPlay.enabled) {
                self.ev.on("rsBeforeParseNode", function(e, content, obj) {
                    content = $(content);
                    del = content.attr("data-rsDelay");
                    if (del) {
                        obj.customDelay = parseInt(del, 10);
                    }
                });
                self.ev.one("rsAfterInit", function() {
                    self._setupAutoPlay();
                });
                self.ev.on("rsBeforeDestroy", function() {
                    self.stopAutoPlay();
                    $(window).off("blur" + self.ns + " focus" + self.ns);
                });
            }
        },
        _setupAutoPlay: function() {
            var self = this;
            self.startAutoPlay();
            self.ev.on("rsAfterContentSet", function(e, slideObject) {
                if (!self._isDragging && !self._isAnimating && self._autoPlayEnabled && slideObject === self.currSlide) {
                    self._play();
                }
            });
            self.ev.on("rsDragRelease", function() {
                if (self._autoPlayEnabled && self._autoPlayPaused) {
                    self._autoPlayPaused = false;
                    self._play();
                }
            });
            self.ev.on("rsAfterSlideChange", function() {
                if (self._autoPlayEnabled) {
                    if (self._autoPlayPaused) {
                        self._autoPlayPaused = false;
                        if (self.currSlide.isLoaded) {
                            self._play();
                        }
                    }
                }
            });
            self.ev.on("rsDragStart", function() {
                if (self._autoPlayEnabled) {
                    if (self.st.autoPlay.stopAtAction) {
                        self.stopAutoPlay();
                    } else {
                        self._autoPlayPaused = true;
                        self._pause();
                    }
                }
            });
            self.ev.on("rsBeforeMove", function(e, type, userAction) {
                if (self._autoPlayEnabled) {
                    if (userAction && self.st.autoPlay.stopAtAction) {
                        self.stopAutoPlay();
                    } else {
                        self._autoPlayPaused = true;
                        self._pause();
                    }
                }
            });
            self._pausedByVideo = false;
            self.ev.on("rsVideoStop", function() {
                if (self._autoPlayEnabled) {
                    self._pausedByVideo = false;
                    self._play();
                }
            });
            self.ev.on("rsVideoPlay", function() {
                if (self._autoPlayEnabled) {
                    self._autoPlayPaused = false;
                    self._pause();
                    self._pausedByVideo = true;
                }
            });
            $(window).on("blur" + self.ns, function() {
                if (self._autoPlayEnabled) {
                    self._autoPlayPaused = true;
                    self._pause();
                }
            }).on("focus" + self.ns, function() {
                if (self._autoPlayEnabled && self._autoPlayPaused) {
                    self._autoPlayPaused = false;
                    self._play();
                }
            });
            if (self.st.autoPlay.pauseOnHover) {
                self._pausedByHover = false;
                self.slider.hover(function() {
                    if (self._autoPlayEnabled) {
                        self._autoPlayPaused = false;
                        self._pause();
                        self._pausedByHover = true;
                    }
                }, function() {
                    if (self._autoPlayEnabled) {
                        self._pausedByHover = false;
                        self._play();
                    }
                });
            }
        },
        toggleAutoPlay: function() {
            var self = this;
            if (self._autoPlayEnabled) {
                self.stopAutoPlay();
            } else {
                self.startAutoPlay();
            }
        },
        startAutoPlay: function() {
            var self = this;
            self._autoPlayEnabled = true;
            if (self.currSlide.isLoaded) {
                self._play();
            }
        },
        stopAutoPlay: function() {
            var self = this;
            self._pausedByVideo = self._pausedByHover = self._autoPlayPaused = self._autoPlayEnabled = false;
            self._pause();
        },
        _play: function() {
            var self = this;
            if (!self._pausedByHover && !self._pausedByVideo) {
                self._autoPlayRunning = true;
                if (self._autoPlayTimeout) {
                    clearTimeout(self._autoPlayTimeout);
                }
                self._autoPlayTimeout = setTimeout(function() {
                    var changed;
                    if (!self._loop && !self.st.loopRewind) {
                        changed = true;
                        self.st.loopRewind = true;
                    }
                    self.next(true);
                    if (changed) {
                        changed = false;
                        self.st.loopRewind = false;
                    }
                }, !self.currSlide.customDelay ? self.st.autoPlay.delay : self.currSlide.customDelay);
            }
        },
        _pause: function() {
            var self = this;
            if (!self._pausedByHover && !self._pausedByVideo) {
                self._autoPlayRunning = false;
                if (self._autoPlayTimeout) {
                    clearTimeout(self._autoPlayTimeout);
                    self._autoPlayTimeout = null;
                }
            }
        }
    });
    $.rsModules.autoplay = $.rsProto._initAutoplay;
})(jQuery);

jQuery(function($) {
    "use strict";
    // initialize CoEnvMenu plugin
    // IE9+ only
    $("html").not(".lt-ie9").coenvmenu();
});

(function($, window, document, undefined) {
    "use strict";
    // Plugin definition
    // =========================================================================
    $.CoEnvMenu = function(options, element) {
        this.options = options;
        this.element = $(element);
        this._create(options);
    };
    $.CoEnvMenu.settings = {
        outerSelector: "#outer",
        wrapperSelector: "#wrapper",
        menuSelector: ".main-menu",
        submenuClass: "children",
        topMenuSelector: ".top-menu",
        menuButtonSelector: "#show-menu button",
        topLevelItemSelector: ".page-depth-0",
        mobileMenuClass: "mobile-menu",
        normalMenuClass: "normal-menu",
        normalTopMenuClass: "normal-top-menu",
        mobileTopMenuClass: "mobile-top-menu",
        mobileMenuActiveClass: "mobile-menu-active",
        mobileTopMenuActiveClass: "mobile-top-menu-active",
        menuItemActiveClass: "menu-item-active"
    };
    // Create
    // =========================================================================
    $.CoEnvMenu.prototype._create = function(options) {
        // set options
        this.options = $.extend(true, {}, $.CoEnvMenu.settings, options);
        // initialize
        this._init();
    };
    // Initialize
    // =========================================================================
    $.CoEnvMenu.prototype._init = function() {
        this.$outer = $(this.options.outerSelector);
        this.$wrapper = $(this.options.wrapperSelector);
        this.$menu = $(this.options.menuSelector);
        this.$topMenu = $(this.options.topMenuSelector);
        this.$menuButton = $(this.options.menuButtonSelector);
        // set up menu DOM structure
        this._buildMenu();
        // handle main menu dropdowns
        this._dropdowns();
        // set up mobile menu
        this._setupMobileMenu();
        // add arrow icons before nav items
        this._addArrowIcons();
        // set up top menu
        this._setupTopMenu();
        // handle menu button interactions
        this._handleMenuButton();
        // handle clicking on this.$wrapper when mobile menu is active
        this._handleWrapperClicking();
        // handle interacting on top level items in mobile menu
        this._handleMenuInteractions();
        // handle window resize with mobile menu still visible
        this._handleWindowResize();
    };
    /**
	 * Build menu DOM structure
	 */
    $.CoEnvMenu.prototype._buildMenu = function() {
        var _this = this;
        // select top level menu items
        var $navItem = this.$menu.find(this.options.topLevelItemSelector);
        // select all submenus in the menu
        var $submenu = $navItem.find("> ." + this.options.submenuClass);
        var $submenuContainer = $('<div class="submenu-container"></div>');
        // divide each submenu's items into two columns
        $submenu.each(function() {
            var $items = $(this).find("> li"), itemsLength = $items.length, colBreak = Math.round(itemsLength / 2);
            // wrap items in left and right columns
            $items.slice(0, colBreak).wrapAll('<li class="col-left"><ul></ul></li>');
            $items.slice(colBreak, itemsLength).wrapAll('<li class="col-right"><ul></ul></li>');
        });
        // for each top level nav item
        $navItem.each(function() {
            var $link = $(this).find("> span > a"), linkTitle = $link.attr("title"), title, url;
            title = linkTitle !== undefined && linkTitle !== false ? linkTitle : $link.text();
            url = $link.attr("href");
            // add submenu if it does not exist
            if (!$(this).find("> ." + _this.options.submenuClass).length) {
                $(this).append('<ul class="' + _this.options.submenuClass + '"></ul>');
            }
            $(this).find("> ." + _this.options.submenuClass).prepend('<li class="pagenav"><a href="' + url + '">' + title + "</a></li>");
        });
        // wrap first sub menu in .submenu-container
        this.$menu.find(this.options.topLevelItemSelector + " > ." + this.options.submenuClass).wrap($submenuContainer);
    };
    // Handle dropdowns
    // =========================================================================
    $.CoEnvMenu.prototype._dropdowns = function() {
        var _this = this;
        // use hover intent to apply active class to top level nav items
        this.$menu.find(this.options.topLevelItemSelector).has("." + this.options.submenuClass).hoverIntent(function() {
            $(this).toggleClass(_this.options.menuItemActiveClass);
        });
    };
    // Set up mobile menu
    // =========================================================================
    $.CoEnvMenu.prototype._setupMobileMenu = function() {
        // make a copy of this.$menu to place behind this.$wrapper within this.$outer
        this.$mobileMenu = this.$menu.clone();
        this.$mobileMenu.removeClass(this.options.normalMenuClass).addClass(this.options.mobileMenuClass);
        // add a "home" link to the top of the mobile menu
        //this.$mobileMenu.find('ul').prepend('<li><a href="/">Home</a></li>');
        this.$mobileMenu.appendTo(this.$outer).show();
    };
    // Add arrow icons to menu items
    // =========================================================================
    $.CoEnvMenu.prototype._addArrowIcons = function() {
        this.$mobileMenu.find(this.options.topLevelItemSelector).has("." + this.options.submenuClass).each(function() {
            $(this).find("a").first().prepend("<i></i>");
        });
    };
    // Set up top links menu
    // =========================================================================
    $.CoEnvMenu.prototype._setupTopMenu = function() {
        // make a copy of this.$topMenu to place within this.$mobileMenu
        this.$mobileTopMenu = this.$topMenu.clone();
        this.$mobileTopMenu.removeClass(this.options.normalTopMenuClass).addClass(this.options.mobileTopMenuClass);
        this.$mobileTopMenu.appendTo(this.$mobileMenu).show();
    };
    // Handle menu button interactions
    // =========================================================================
    $.CoEnvMenu.prototype._handleMenuButton = function() {
        var _this = this;
        // handle clicking on menu button (using fastClick)
        this.$menuButton.fastClick(function(e) {
            e.preventDefault();
            _this._toggleMobileMenu();
        });
    };
    // Show/hide mobile menu
    // =========================================================================
    $.CoEnvMenu.prototype._toggleMobileMenu = function() {
        $("html").toggleClass(this.options.mobileMenuActiveClass);
    };
    // Handle window resize when mobile menu is still visible
    // =========================================================================
    $.CoEnvMenu.prototype._handleWindowResize = function() {
        var _this = this;
        $(window).on("resize", $.debounce(100, function() {
            if ($(window).width() >= 768 && $("html").hasClass(_this.options.mobileMenuActiveClass)) {
                _this._toggleMobileMenu();
            }
        }));
    };
    // Handle clicking on this.$wrapper when mobile menu is active
    // =========================================================================
    $.CoEnvMenu.prototype._handleWrapperClicking = function() {
        var _this = this;
        this.$wrapper.on("click", function(e) {
            if ($("html").hasClass(_this.options.mobileMenuActiveClass)) {
                e.preventDefault();
                _this._toggleMobileMenu();
            }
        });
    };
    // Handle menu interactions
    // =========================================================================
    $.CoEnvMenu.prototype._handleMenuInteractions = function() {
        var _this = this, $items = this.$mobileMenu.find(this.options.topLevelItemSelector), $itemLinks = $items.find("> span > a");
        // on page load, make sure appropriate item has the expanded class
        $items.filter(".menu-item-active, .current_page_item, .current-page-ancestor").each(function() {
            $(this).addClass("expanded");
        });
        $itemLinks.fastClick(function(e) {
            e.preventDefault();
            var $item = $(this).parents(_this.options.topLevelItemSelector), $icon = $(this).find("i"), $subMenu = $item.find("." + _this.options.submenuClass);
            if ($item.hasClass("expanded")) {
                $subMenu.slideUp(200);
                $item.removeClass("expanded");
            } else {
                $subMenu.slideDown(200);
                $item.addClass("expanded");
            }
        });
    };
    // Plugin bridge
    // =========================================================================
    // Leverages data method to either create or return plugin constructor
    //
    // Pattern developed by desandro for Masonry
    //		https://github.com/desandro/masonry/blob/master/jquery.masonry.js
    // Based off of jQuery UI's widget factory
    //		https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.widget.js
    // And a bit from jcarousel
    //		https://github.com/jsor/jcarousel/blob/master/lib/jquery.jcarousel.js
    $.CoEnvMenu.prototype.option = function(key) {
        if ($.isPlainObject(key)) {
            this.options = $.extend(true, this.options, key);
        }
    };
    $.fn.coenvmenu = function(options) {
        if (typeof options === "string") {
            // call method
            var args = Array.prototype.slice.call(arguments, 1);
            this.each(function() {
                var instance = $.data(this, "coenvmenu");
                if (!instance) {
                    console.log("error", "cannot call methods on coenvmenu prior to initialization; " + 'attempted to call method "' + options + '"');
                    return;
                }
                if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
                    console.log("error", 'no such method "' + options + '" for coenvmenu instance');
                    return;
                }
                // apply method
                instance[options].apply(instance, args);
            });
        } else {
            this.each(function() {
                var instance = $.data(this, "coenvmenu");
                if (instance) {
                    // apply options & init
                    instance.option(options || {});
                    instance._init();
                } else {
                    // initialize new instance
                    $.data(this, "coenvmenu", new $.CoEnvMenu(options, this));
                }
            });
        }
        return this;
    };
})(jQuery, window, document);

jQuery(function($) {
    "use strict";
    // no feature animations for < ie8
    if (!$("body").hasClass("lt-ie8")) {
        $(".home #features").homeFeatures();
    }
});

$.fn.homeFeatures = function() {
    "use strict";
    var $container = $(this), $rsContainer = $container.find(".features-container"), $features = $container.find(".feature"), $nav = $("<div></div>"), offsetTop, rsInstance, navOutput;
    if (!$rsContainer.length) {
        return;
    }
    offsetTop = $rsContainer.offset().top;
    // init royalSlider
    $rsContainer.royalSlider({
        loop: true,
        fadeInLoadedSlide: false,
        autoHeight: true,
        navigateByClick: false,
        autoPlay: {
            enabled: true,
            pauseOnHover: true,
            stopAtAction: false,
            delay: 8e3
        }
    });
    rsInstance = $rsContainer.data("royalSlider");
    $features.removeClass("loading");
    // start/stop autoplay when scrolling up or down past 
    // halfway point of feature
    $(window).on("scroll", $.debounce(200, function() {
        var scrollTop = $(window).scrollTop(), rsContainerOffset = $rsContainer.offset().top, rsContainerHeight = $rsContainer.outerHeight(true);
        if (scrollTop > rsContainerOffset + rsContainerHeight / 2) {
            rsInstance.stopAutoPlay();
        } else {
            rsInstance.startAutoPlay();
        }
    }));
    // set up nav links
    navOutput = "<ul>";
    $nav.addClass("features-nav");
    for (var i = 0, len = rsInstance.numSlides; i < len; i++) {
        navOutput += '<li><a href="#"><span>' + (i + 1) + "</span></a></li>";
    }
    navOutput += "</ul>";
    $nav.append($(navOutput));
    $nav.appendTo($container);
    $nav.find("a").eq(rsInstance.currSlideId).addClass("active");
    $nav.find("a").on("click", function(e) {
        e.preventDefault();
        $rsContainer.royalSlider("goTo", $(this).parent().index());
        $nav.find("a").removeClass("active");
        $(this).addClass("active");
    });
    // update nav on slide change
    rsInstance.ev.on("rsAfterSlideChange", function() {
        $nav.find("a").removeClass("active");
        $nav.find("a").eq(rsInstance.currSlideId).addClass("active");
    });
};

jQuery(function($) {
    "use strict";
    // handle blog header form
    $("#blog-header").blogHeader();
});

$.fn.blogHeader = function() {
    "use strict";
    var $header = $(this), $selectCategory = $header.find(".select-category select"), $selectMonth = $header.find(".select-month select");
    $selectCategory.on("change", function() {
        var term_id = $(this).val(), url = $(this).parent("div").attr("data-url");
        window.location.href = url + term_id;
    });
    $selectMonth.on("change", function() {
        var url = $(this).val();
        window.location.href = url;
    });
};

/**
 * Share modals
 * for blog posts
 */
(function($, window, document, undefined) {
    "use strict";
    // Plugin definition
    // =========================================================================
    $.coenvshare = function(options, element) {
        this.options = options;
        this.element = $(element);
        this._create(options);
    };
    $.coenvshare.settings = {};
    // Create
    // =========================================================================
    $.coenvshare.prototype._create = function(options) {
        // set options
        this.options = $.extend(true, {}, $.coenvshare.settings, options);
        // initialize
        this._init();
    };
    // Initialize
    // =========================================================================
    $.coenvshare.prototype._init = function() {
        this.articleID = this.element.attr("data-article-id");
        this.articleTitle = this.element.attr("data-article-title");
        this.articleShortLink = this.element.attr("data-article-shortlink");
        this.articlePermalink = this.element.attr("data-article-permalink");
        // show share button
        // must have data-article-id set
        if (typeof this.articleID !== "undefined" && typeof this.articleTitle !== "undefined" && typeof this.articleShortLink !== "undefined" && typeof this.articlePermalink !== "undefined") {
            this.element.addClass("active");
        } else {
            return;
        }
        // build modal
        this._buildModal();
        // handle interactions
        this._interactions();
    };
    /**
	 * Build modal
	 * Building DOM elements here to keep things quick and simple, but this should really be in a template
	 */
    $.coenvshare.prototype._buildModal = function() {
        var services = [ {
            name: "Twitter",
            className: "twitter",
            url: "http://twitter.com/home?status=" + this.articleTitle + " " + this.articleShortLink + '" target="_blank'
        }, {
            name: "Facebook",
            className: "facebook",
            url: "http://www.facebook.com/sharer/sharer.php?s=100&p[url]=" + this.articleShortLink + "&p[images][0]=&p[title]=" + this.articleTitle + '" target="_blank'
        }, {
            name: "Email",
            className: "email",
            url: "mailto:?subject=" + this.articleTitle + "&body=Check%20out%20this%20article:%20" + this.articleShortLink
        } ];
        this.$modal = $('<div class="share-modal" role="dialog" aria-labelledby="shareModal" aria-hidden="true"></div>');
        this.$modal.append('<div class="share-modal-inner"><ul class="share-modal-content"></ul></div>');
        for (var i = 0, len = services.length; i < len; i++) {
            this.$modal.find(".share-modal-content").append('<a href="' + services[i].url + '" ><li class="social-link share-' + services[i].className + '"></li></a>');
        }
    };
    /**
	 * Handle interactions
	 */
    $.coenvshare.prototype._interactions = function() {
        var _this = this;
        // clicking on link
        this.element.on("click", function(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            _this._launchModal();
        });
        // clicking outside of modal
        $("body").on("click", function(ev) {
            if (_this.modalIsActive === true) {
                if (!$(ev.target).is(".social-link")) {
                    _this._hideModal();
                }
            }
        });
    };
    /**
	 * Launch share modal
	 */
    $.coenvshare.prototype._launchModal = function() {
        var _this = this;
        // append modal
        $(".post-" + this.articleID).prepend(this.$modal);
        // show modal
        this.$modal.addClass("active");
        this.modalIsActive = true;
        setTimeout(function() {
            _this.$modal.addClass("active-visible");
        }, 10);
    };
    /**
	 * Hide modal
	 */
    $.coenvshare.prototype._hideModal = function() {
        var _this = this;
        this.$modal.removeClass("active-visible");
        //setTimeout( function () {
        _this.$modal.removeClass("active");
        _this.$modal.remove();
        _this.modalIsActive = false;
    };
    // Plugin bridge
    // =========================================================================
    // Leverages data method to either create or return plugin constructor
    //
    // Pattern developed by desandro for Masonry
    //		https://github.com/desandro/masonry/blob/master/jquery.masonry.js
    // Based off of jQuery UI's widget factory
    //		https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.widget.js
    // And a bit from jcarousel
    //		https://github.com/jsor/jcarousel/blob/master/lib/jquery.jcarousel.js
    $.coenvshare.prototype.option = function(key) {
        if ($.isPlainObject(key)) {
            this.options = $.extend(true, this.options, key);
        }
    };
    $.fn.coenvshare = function(options) {
        if (typeof options === "string") {
            // call method
            var args = Array.prototype.slice.call(arguments, 1);
            this.each(function() {
                var instance = $.data(this, "coenvshare");
                if (!instance) {
                    console.log("error", "cannot call methods on coenvshare prior to initialization; " + 'attempted to call method "' + options + '"');
                    return;
                }
                if (!$.isFunction(instance[options]) || options.charAt(0) === "_") {
                    console.log("error", 'no such method "' + options + '" for coenvshare instance');
                    return;
                }
                // apply method
                instance[options].apply(instance, args);
            });
        } else {
            this.each(function() {
                var instance = $.data(this, "coenvshare");
                if (instance) {
                    // apply options & init
                    instance.option(options || {});
                    instance._init();
                } else {
                    // initialize new instance
                    $.data(this, "coenvshare", new $.coenvshare(options, this));
                }
            });
        }
        return this;
    };
})(jQuery, window, document);

jQuery(function($) {
    "use strict";
    if (!$("body").hasClass("lt-ie8")) {
        // use chosen for form inputs
        $("select.chosen").chosen();
        // placeholders for older browsers
        $("input, textarea").placeholder();
        // fitvids for responsive videos
        $(".article-content").handleFitVids();
        // single faculty member tabs
        $(".Faculty-member-tab-nav").memberTabs();
        // banner image reveals
        $(".banner-wrapper").bannerReveals();
        // share buttons
        $(".share").coenvshare();
    }
});

/**
 * Banner image reveals
 */
$.fn.bannerReveals = function() {
    "use strict";
    return this.each(function() {
        var $container = $(this), $revealBtn = $(".banner-info"), activeClass = "banner-revealed";
        $revealBtn.on("click", function(e) {
            e.preventDefault();
            e.stopPropagation();
            $("body").toggleClass(activeClass);
        });
        $container.on("click", function() {
            if ($("body").hasClass(activeClass)) {
                $("body").removeClass(activeClass);
            }
        });
    });
};

/**
 * Handle responsive videos
 */
$.fn.handleFitVids = function() {
    "use strict";
    $(this).fitVids();
    $(".fluid-width-video-wrapper").each(function() {
        var $this = $(this), maxWidth = parseFloat($this.css("max-width")), paddingTop = parseFloat($this[0].style["padding-top"]);
        // increase padding-top relative to max-width set on this element
        var adjustment = maxWidth * (paddingTop * .01) + "%";
        $this.css("padding-top", adjustment);
    });
};

$.fn.memberTabs = function() {
    "use strict";
    var $nav = $(this), $tabs = $(".Faculty-member-tabs"), activeClass = "active-tab";
    $nav.find("a").click(function(e) {
        e.preventDefault();
        var $navItem = $(this), $tab = $tabs.find("." + $(this).attr("data-tab"));
        $nav.find("." + activeClass).removeClass(activeClass);
        $(this).parent("li").addClass(activeClass);
        $tabs.find("." + activeClass).removeClass(activeClass);
        $tab.addClass(activeClass);
    });
};
//# sourceMappingURL=../maps/main.js.map
>>>>>>> Stashed changes
=======
return b=a("<div />",{style:e}),b.text(this.search_field.val()),a("body").append(b),g=b.width()+25,b.remove(),this.f_width||(this.f_width=this.container.outerWidth()),g>this.f_width-10&&(g=this.f_width-10),this.search_field.css({width:g+"px"})}},e.prototype.generate_random_id=function(){var b;for(b="sel"+this.generate_random_char()+this.generate_random_char()+this.generate_random_char();a("#"+b).length>0;)b+=this.generate_random_char();return b},e}(AbstractChosen),c.Chosen=b}.call(this),function(a){"use strict";a.fn.fitVids=function(b){var c={customSelector:null};if(!document.getElementById("fit-vids-style")){var d=document.createElement("div"),e=document.getElementsByTagName("base")[0]||document.getElementsByTagName("script")[0],f="&shy;<style>.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}</style>";d.className="fit-vids-style",d.id="fit-vids-style",d.style.display="none",d.innerHTML=f,e.parentNode.insertBefore(d,e)}return b&&a.extend(c,b),this.each(function(){var b=["iframe[src*='player.vimeo.com']","iframe[src*='youtube.com']","iframe[src*='youtube-nocookie.com']","iframe[src*='kickstarter.com'][src*='video.html']","object","embed"];c.customSelector&&b.push(c.customSelector);var d=a(this).find(b.join(","));d=d.not("object object"),d.each(function(){var b=a(this);if(!("embed"===this.tagName.toLowerCase()&&b.parent("object").length||b.parent(".fluid-width-video-wrapper").length)){var c="object"===this.tagName.toLowerCase()||b.attr("height")&&!isNaN(parseInt(b.attr("height"),10))?parseInt(b.attr("height"),10):b.height(),d=isNaN(parseInt(b.attr("width"),10))?b.width():parseInt(b.attr("width"),10),e=c/d;if(!b.attr("id")){var f="fitvid"+Math.floor(999999*Math.random());b.attr("id",f)}b.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top",100*e+"%"),b.removeAttr("height").removeAttr("width")}})})}}(window.jQuery||window.Zepto),function(a,b,c){function d(a){var b={},d=/^jQuery\d+$/;return c.each(a.attributes,function(a,c){c.specified&&!d.test(c.name)&&(b[c.name]=c.value)}),b}function e(a,d){var e=this,f=c(e);if(e.value==f.attr("placeholder")&&f.hasClass("placeholder"))if(f.data("placeholder-password")){if(f=f.hide().next().show().attr("id",f.removeAttr("id").data("placeholder-id")),a===!0)return f[0].value=d;f.focus()}else e.value="",f.removeClass("placeholder"),e==b.activeElement&&e.select()}function f(){var a,b=this,f=c(b),g=this.id;if(""==b.value){if("password"==b.type){if(!f.data("placeholder-textinput")){try{a=f.clone().attr({type:"text"})}catch(h){a=c("<input>").attr(c.extend(d(this),{type:"text"}))}a.removeAttr("name").data({"placeholder-password":!0,"placeholder-id":g}).bind("focus.placeholder",e),f.data({"placeholder-textinput":a,"placeholder-id":g}).before(a)}f=f.removeAttr("id").hide().prev().attr("id",g).show()}f.addClass("placeholder"),f[0].value=f.attr("placeholder")}else f.removeClass("placeholder")}var g,h,i="placeholder"in b.createElement("input"),j="placeholder"in b.createElement("textarea"),k=c.fn,l=c.valHooks;i&&j?(h=k.placeholder=function(){return this},h.input=h.textarea=!0):(h=k.placeholder=function(){var a=this;return a.filter((i?"textarea":":input")+"[placeholder]").not(".placeholder").bind({"focus.placeholder":e,"blur.placeholder":f}).data("placeholder-enabled",!0).trigger("blur.placeholder"),a},h.input=i,h.textarea=j,g={get:function(a){var b=c(a);return b.data("placeholder-enabled")&&b.hasClass("placeholder")?"":a.value},set:function(a,d){var g=c(a);return g.data("placeholder-enabled")?(""==d?(a.value=d,a!=b.activeElement&&f.call(a)):g.hasClass("placeholder")?e.call(a,!0,d)||(a.value=d):a.value=d,g):a.value=d}},i||(l.input=g),j||(l.textarea=g),c(function(){c(b).delegate("form","submit.placeholder",function(){var a=c(".placeholder",this).each(e);setTimeout(function(){a.each(f)},10)})}),c(a).bind("beforeunload.placeholder",function(){c(".placeholder").each(function(){this.value=""})}))}(this,document,jQuery),function(a){a.fn.hoverIntent=function(b,c,d){var e={interval:100,sensitivity:7,timeout:0};e="object"==typeof b?a.extend(e,b):a.isFunction(c)?a.extend(e,{over:b,out:c,selector:d}):a.extend(e,{over:b,out:b,selector:c});var f,g,h,i,j=function(a){f=a.pageX,g=a.pageY},k=function(b,c){return c.hoverIntent_t=clearTimeout(c.hoverIntent_t),Math.abs(h-f)+Math.abs(i-g)<e.sensitivity?(a(c).off("mousemove.hoverIntent",j),c.hoverIntent_s=1,e.over.apply(c,[b])):(h=f,i=g,c.hoverIntent_t=setTimeout(function(){k(b,c)},e.interval),void 0)},l=function(a,b){return b.hoverIntent_t=clearTimeout(b.hoverIntent_t),b.hoverIntent_s=0,e.out.apply(b,[a])},m=function(b){var c=jQuery.extend({},b),d=this;d.hoverIntent_t&&(d.hoverIntent_t=clearTimeout(d.hoverIntent_t)),"mouseenter"==b.type?(h=c.pageX,i=c.pageY,a(d).on("mousemove.hoverIntent",j),1!=d.hoverIntent_s&&(d.hoverIntent_t=setTimeout(function(){k(c,d)},e.interval))):(a(d).off("mousemove.hoverIntent",j),1==d.hoverIntent_s&&(d.hoverIntent_t=setTimeout(function(){l(c,d)},e.timeout)))};return this.on({"mouseenter.hoverIntent":m,"mouseleave.hoverIntent":m},e.selector)}}(jQuery),function(a){"use strict";a.picturefill=function(){for(var b=a.document.getElementsByTagName("span"),c=0,d=b.length;d>c;c++)if(null!==b[c].getAttribute("data-picture")){for(var e=b[c].getElementsByTagName("span"),f=[],g=0,h=e.length;h>g;g++){var i=e[g].getAttribute("data-media");(!i||a.matchMedia&&a.matchMedia(i).matches)&&f.push(e[g])}var j=b[c].getElementsByTagName("img")[0];if(f.length){var k=f.pop();if(j&&"NOSCRIPT"!==j.parentNode.nodeName){if(k===j.parentNode)continue}else j=a.document.createElement("img"),j.alt=b[c].getAttribute("data-alt");j.src=k.getAttribute("data-src"),k.appendChild(j),j.removeAttribute("width"),j.removeAttribute("height")}else j&&j.parentNode.removeChild(j)}},a.addEventListener?(a.addEventListener("resize",a.picturefill,!1),a.addEventListener("DOMContentLoaded",function(){a.picturefill(),a.removeEventListener("load",a.picturefill,!1)},!1),a.addEventListener("load",a.picturefill,!1)):a.attachEvent&&a.attachEvent("onload",a.picturefill)}(this),window.matchMedia||(window.matchMedia=function(){"use strict";var a=window.styleMedia||window.media;if(!a){var b=document.createElement("style"),c=document.getElementsByTagName("script")[0],d=null;b.type="text/css",b.id="matchmediajs-test",c.parentNode.insertBefore(b,c),d="getComputedStyle"in window&&window.getComputedStyle(b,null)||b.currentStyle,a={matchMedium:function(a){var c="@media "+a+"{ #matchmediajs-test { width: 1px; } }";return b.styleSheet?b.styleSheet.cssText=c:b.textContent=c,"1px"===d.width}}}return function(b){return{matches:a.matchMedium(b||"all"),media:b||"all"}}}()),function(a,b,c){var d=b.matchMedia;"undefined"!=typeof module&&module.exports?module.exports=c(d):"function"==typeof define&&define.amd?define(function(){return b[a]=c(d)}):b[a]=c(d)}("enquire",this,function(a){"use strict";function b(a,b){var c,d=0,e=a.length;for(d;e>d&&(c=b(a[d],d),c!==!1);d++);}function c(a){return"[object Array]"===Object.prototype.toString.apply(a)}function d(a){return"function"==typeof a}function e(a){this.options=a,!a.deferSetup&&this.setup()}function f(b,c){this.query=b,this.isUnconditional=c,this.handlers=[],this.mql=a(b);var d=this;this.listener=function(a){d.mql=a,d.assess()},this.mql.addListener(this.listener)}function g(){if(!a)throw new Error("matchMedia not present, legacy browsers require a polyfill");this.queries={},this.browserIsIncapable=!a("only all").matches}return e.prototype={setup:function(){this.options.setup&&this.options.setup(),this.initialised=!0},on:function(){!this.initialised&&this.setup(),this.options.match&&this.options.match()},off:function(){this.options.unmatch&&this.options.unmatch()},destroy:function(){this.options.destroy?this.options.destroy():this.off()},equals:function(a){return this.options===a||this.options.match===a}},f.prototype={addHandler:function(a){var b=new e(a);this.handlers.push(b),this.matches()&&b.on()},removeHandler:function(a){var c=this.handlers;b(c,function(b,d){return b.equals(a)?(b.destroy(),!c.splice(d,1)):void 0})},matches:function(){return this.mql.matches||this.isUnconditional},clear:function(){b(this.handlers,function(a){a.destroy()}),this.mql.removeListener(this.listener),this.handlers.length=0},assess:function(){var a=this.matches()?"on":"off";b(this.handlers,function(b){b[a]()})}},g.prototype={register:function(a,e,g){var h=this.queries,i=g&&this.browserIsIncapable;return h[a]||(h[a]=new f(a,i)),d(e)&&(e={match:e}),c(e)||(e=[e]),b(e,function(b){h[a].addHandler(b)}),this},unregister:function(a,b){var c=this.queries[a];return c&&(b?c.removeHandler(b):(c.clear(),delete this.queries[a])),this}},new g}),function(a){function b(b,c){function d(a,b){return'<div style="'+(f._isMove?"":a!==f.currSlideId?f._opacityCSS:"z-index:0;")+'" class="rsSlide '+(b||"")+'"></div>'}var e,f=this,g=navigator.userAgent.toLowerCase();f.uid=a.rsModules.uid++,f.ns=".rs"+f.uid;var h,i=document.createElement("div").style,j=["webkit","Moz","ms","O"],k="",l=0;for(e=0;e<j.length;e++)h=j[e],!k&&h+"Transform"in i&&(k=h),h=h.toLowerCase(),window.requestAnimationFrame||(window.requestAnimationFrame=window[h+"RequestAnimationFrame"],window.cancelAnimationFrame=window[h+"CancelAnimationFrame"]||window[h+"CancelRequestAnimationFrame"]);window.requestAnimationFrame||(window.requestAnimationFrame=function(a){var b=(new Date).getTime(),c=Math.max(0,16-(b-l)),d=window.setTimeout(function(){a(b+c)},c);return l=b+c,d}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)}),f.isIPAD=g.match(/(ipad)/);var m=function(a){var b=/(chrome)[ \/]([\w.]+)/.exec(a)||/(webkit)[ \/]([\w.]+)/.exec(a)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(a)||/(msie) ([\w.]+)/.exec(a)||a.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(a)||[];return{browser:b[1]||"",version:b[2]||"0"}},n=m(g),o={};if(n.browser&&(o[n.browser]=!0,o.version=n.version),o.chrome&&(o.webkit=!0),f._browser=o,f.slider=a(b),f.ev=a(f),f._doc=a(document),f.st=a.extend({},a.fn.royalSlider.defaults,c),f._currAnimSpeed=f.st.transitionSpeed,f._minPosOffset=0,f.st.allowCSS3&&(!o.webkit||f.st.allowCSS3OnWebkit)){var p=k+(k?"T":"t");f._useCSS3Transitions=p+"ransform"in i&&p+"ransition"in i,f._useCSS3Transitions&&(f._use3dTransform=k+(k?"P":"p")+"erspective"in i)}k=k.toLowerCase(),f._vendorPref="-"+k+"-",f._slidesHorizontal="vertical"===f.st.slidesOrientation?!1:!0,f._reorderProp=f._slidesHorizontal?"left":"top",f._sizeProp=f._slidesHorizontal?"width":"height",f._prevNavItemId=-1,f._isMove="fade"===f.st.transitionType?!1:!0,f._isMove||(f.st.sliderDrag=!1,f._fadeZIndex=10),f._opacityCSS="z-index:0; display:none; opacity:0;",f._newSlideId=0,f._sPosition=0,f._nextSlidePos=0,a.each(a.rsModules,function(a,b){"uid"!==a&&b.call(f)}),f.slides=[],f._idCount=0;var q=f.st.slides?a(f.st.slides):f.slider.children().detach();q.each(function(){f._parseNode(this,!0)}),f.st.randomizeSlides&&f.slides.sort(function(){return.5-Math.random()}),f.numSlides=f.slides.length,f._refreshNumPreloadImages(),f.st.startSlideId?f.st.startSlideId>f.numSlides-1&&(f.st.startSlideId=f.numSlides-1):f.st.startSlideId=0,f._newSlideId=f.staticSlideId=f.currSlideId=f._realId=f.st.startSlideId,f.currSlide=f.slides[f.currSlideId],f._accelerationPos=0,f.msTouch=!1,f.slider.addClass((f._slidesHorizontal?"rsHor":"rsVer")+(f._isMove?"":" rsFade"));var r='<div class="rsOverflow"><div class="rsContainer">';f.slidesSpacing=f.st.slidesSpacing,f._slideSize=(f._slidesHorizontal?f.slider.width():f.slider.height())+f.st.slidesSpacing,f._preload=Boolean(f._numPreloadImages>0),f.numSlides<=1&&(f._loop=!1);var s=f._loop&&f._isMove?2===f.numSlides?1:2:0;for(f._loopHelpers=s,f._maxImages=f.numSlides<6?f.numSlides:6,f._currBlockIndex=0,f._idOffset=0,f.slidesJQ=[],e=0;e<f.numSlides;e++)f.slidesJQ.push(a(d(e)));f._sliderOverflow=r=a(r+"</div></div>");var t=function(){f.st.sliderDrag&&(f._hasDrag=!0,o.msie||o.opera?f._grabCursor=f._grabbingCursor="move":o.mozilla?(f._grabCursor="-moz-grab",f._grabbingCursor="-moz-grabbing"):o.webkit&&-1!=navigator.platform.indexOf("Mac")&&(f._grabCursor="-webkit-grab",f._grabbingCursor="-webkit-grabbing"),f._setGrabCursor())},u=f.ns,v=function(a,b,c,d,e){f._downEvent=a+b+u,f._moveEvent=a+c+u,f._upEvent=a+d+u,e&&(f._cancelEvent=a+e+u)};f.msEnabled=window.navigator.msPointerEnabled,f.msEnabled?(f.msTouch=Boolean(window.navigator.msMaxTouchPoints>1),f.hasTouch=!1,f._lastItemFriction=.2,v("MSPointer","Down","Move","Up","Cancel")):(v("mouse","down","move","up","up"),"ontouchstart"in window||"createTouch"in document?(f.hasTouch=!0,f._downEvent+=" touchstart"+u,f._moveEvent+=" touchmove"+u,f._upEvent+=" touchend"+u,f._cancelEvent+=" touchcancel"+u,f._lastItemFriction=.5,f.st.sliderTouch&&(f._hasDrag=!0)):(f.hasTouch=!1,f._lastItemFriction=.2)),t(),f.slider.html(r),f._controlsContainer=f.st.controlsInside?f._sliderOverflow:f.slider,f._slidesContainer=f._sliderOverflow.children(".rsContainer"),f.msEnabled&&f._slidesContainer.css("-ms-touch-action",f._slidesHorizontal?"pan-y":"pan-x"),f._preloader=a('<div class="rsPreloader"></div>');var w=f._slidesContainer.children(".rsSlide");if(f._currHolder=f.slidesJQ[f.currSlideId],f._selectedSlideHolder=0,f._useCSS3Transitions)if(f._TP="transition-property",f._TD="transition-duration",f._TTF="transition-timing-function",f._yProp=f._xProp=f._vendorPref+"transform",f._use3dTransform?(o.webkit&&f.slider.addClass("rsWebkit3d"),f._tPref1="translate3d(",f._tPref2="px, ",f._tPref3="px, 0px)"):(f._tPref1="translate(",f._tPref2="px, ",f._tPref3="px)"),f._isMove)f._slidesContainer[f._vendorPref+f._TP]=f._vendorPref+"transform";else{var x={};x[f._vendorPref+f._TP]="opacity",x[f._vendorPref+f._TD]=f.st.transitionSpeed+"ms",x[f._vendorPref+f._TTF]=f.st.css3easeInOut,w.css(x)}else f._xProp="left",f._yProp="top";var y;if(a(window).on("resize"+f.ns,function(){y&&clearTimeout(y),y=setTimeout(function(){f.updateSliderSize()},50)}),f.ev.trigger("rsAfterPropsSetup"),f.updateSliderSize(),f.st.keyboardNavEnabled&&f._bindKeyboardNav(),f.st.arrowsNavHideOnTouch&&(f.hasTouch||f.msTouch)&&(f.st.arrowsNav=!1),f.st.arrowsNav){var z="rsArrow",A=f._controlsContainer;if(a('<div class="'+z+" "+z+'Left"><div class="'+z+'Icn"></div></div><div class="'+z+" "+z+'Right"><div class="'+z+'Icn"></div></div>').appendTo(A),f._arrowLeft=A.children("."+z+"Left").click(function(a){a.preventDefault(),f.prev()}),f._arrowRight=A.children("."+z+"Right").click(function(a){a.preventDefault(),f.next()}),f.st.arrowsNavAutoHide&&!f.hasTouch){f._arrowLeft.addClass("rsHidden"),f._arrowRight.addClass("rsHidden");var B=A;B.one("mousemove.arrowshover",function(){f._arrowLeft.removeClass("rsHidden"),f._arrowRight.removeClass("rsHidden")}),B.hover(function(){f._arrowsAutoHideLocked||(f._arrowLeft.removeClass("rsHidden"),f._arrowRight.removeClass("rsHidden"))},function(){f._arrowsAutoHideLocked||(f._arrowLeft.addClass("rsHidden"),f._arrowRight.addClass("rsHidden"))})}f.ev.on("rsOnUpdateNav",function(){f._updateArrowsNav()}),f._updateArrowsNav()}f._hasDrag?f._slidesContainer.on(f._downEvent,function(a){f._onDragStart(a)}):f.dragSuccess=!1;var C=["rsPlayBtnIcon","rsPlayBtn","rsCloseVideoBtn","rsCloseVideoIcn"];f._slidesContainer.click(function(b){if(!f.dragSuccess){var c=a(b.target),d=c.attr("class");if(-1!==a.inArray(d,C)&&f.toggleVideo())return!1;if(f.st.navigateByClick&&!f._blockActions){if(a(b.target).closest(".rsNoDrag",f._currHolder).length)return!0;f._mouseNext(b)}f.ev.trigger("rsSlideClick")}}).on("click.rs","a",function(){return f.dragSuccess?!1:(f._blockActions=!0,void setTimeout(function(){f._blockActions=!1},3))}),f.ev.trigger("rsAfterInit")}a.rsModules||(a.rsModules={uid:0}),b.prototype={constructor:b,_mouseNext:function(a){var b=this,c=a[b._slidesHorizontal?"pageX":"pageY"]-b._sliderOffset;c>=b._nextSlidePos?b.next():0>c&&b.prev()},_refreshNumPreloadImages:function(){var a,b=this;a=b.st.numImagesToPreload,b._loop=b.st.loop,b._loop&&(2===b.numSlides?(b._loop=!1,b.st.loopRewind=!0):b.numSlides<2&&(b.st.loopRewind=b._loop=!1)),b._loop&&a>0&&(b.numSlides<=4?a=1:b.st.numImagesToPreload>(b.numSlides-1)/2&&(a=Math.floor((b.numSlides-1)/2))),b._numPreloadImages=a},_parseNode:function(b,c){function d(a,b){if(h.images.push(b?a.attr(b):a.text()),i){i=!1,h.caption="src"===b?a.attr("alt"):a.contents(),h.image=h.images[0],h.videoURL=a.attr("data-rsVideo");var c=a.attr("data-rsw"),d=a.attr("data-rsh");"undefined"!=typeof c&&c!==!1&&"undefined"!=typeof d&&d!==!1?(h.iW=parseInt(c),h.iH=parseInt(d)):g.st.imgWidth&&g.st.imgHeight&&(h.iW=g.st.imgWidth,h.iH=g.st.imgHeight)}}var e,f,g=this,h={},i=!0;return b=a(b),g._currContent=b,g.ev.trigger("rsBeforeParseNode",[b,h]),h.stopParsing?void 0:(b=g._currContent,h.id=g._idCount,h.contentAdded=!1,g._idCount++,h.images=[],h.isBig=!1,h.hasCover||(b.hasClass("rsImg")?(f=b,e=!0):(f=b.find(".rsImg"),f.length&&(e=!0)),e?(h.bigImage=f.eq(0).attr("data-rsBigImg"),f.each(function(){var b=a(this);b.is("a")?d(b,"href"):b.is("img")?d(b,"src"):d(b)})):b.is("img")&&(b.addClass("rsImg rsMainSlideImage"),d(b,"src"))),f=b.find(".rsCaption"),f.length&&(h.caption=f.remove()),h.content=b,g.ev.trigger("rsAfterParseNode",[b,h]),c&&g.slides.push(h),0===h.images.length&&(h.isLoaded=!0,h.isRendered=!1,h.isLoading=!1,h.images=null),h)},_bindKeyboardNav:function(){var a,b,c=this,d=function(a){37===a?c.prev():39===a&&c.next()};c._doc.on("keydown"+c.ns,function(e){c._isDragging||(b=e.keyCode,(37===b||39===b)&&(a||(d(b),a=setInterval(function(){d(b)},700))))}).on("keyup"+c.ns,function(){a&&(clearInterval(a),a=null)})},goTo:function(a,b){var c=this;a!==c.currSlideId&&c._moveTo(a,c.st.transitionSpeed,!0,!b)},destroy:function(b){var c=this;c.ev.trigger("rsBeforeDestroy"),c._doc.off("keydown"+c.ns+" keyup"+c.ns+" "+c._moveEvent+" "+c._upEvent),c._slidesContainer.off(c._downEvent+" click"),c.slider.data("royalSlider",null),a.removeData(c.slider,"royalSlider"),a(window).off("resize"+c.ns),b&&c.slider.remove(),c.slides=null,c.slider=null,c.ev=null},_updateBlocksContent:function(b,c){function d(c,d,g){c.isAdded?(e(d,c),f(d,c)):(g||(g=j.slidesJQ[d]),c.holder?g=c.holder:(g=j.slidesJQ[d]=a(g),c.holder=g),c.appendOnLoaded=!1,f(d,c,g),e(d,c),j._addBlockToContainer(c,g,b),c.isAdded=!0,appended=!0)}function e(a,c){c.contentAdded||(j.setItemHtml(c,b),b||(c.contentAdded=!0))}function f(a,b,c){j._isMove&&(c||(c=j.slidesJQ[a]),c.css(j._reorderProp,(a+j._idOffset+m)*j._slideSize))}function g(a){if(k){if(a>l-1)return g(a-l);if(0>a)return g(l+a)}return a}var h,i,j=this,k=j._loop,l=j.numSlides;if(!isNaN(c))return g(c);var m,n,o=j.currSlideId,p=b?Math.abs(j._prevSlideId-j.currSlideId)>=j.numSlides-1?0:1:j._numPreloadImages,q=Math.min(2,p),r=!1,s=!1;for(i=o;o+1+q>i;i++)if(n=g(i),h=j.slides[n],h&&(!h.isAdded||!h.positionSet)){r=!0;break}for(i=o-1;i>o-1-q;i--)if(n=g(i),h=j.slides[n],h&&(!h.isAdded||!h.positionSet)){s=!0;break}if(r)for(i=o;o+p+1>i;i++)n=g(i),m=Math.floor((j._realId-(o-i))/j.numSlides)*j.numSlides,h=j.slides[n],h&&d(h,n);if(s)for(i=o-1;i>o-1-p;i--)n=g(i),m=Math.floor((j._realId-(o-i))/l)*l,h=j.slides[n],h&&d(h,n);if(!b){var t=g(o-p),u=g(o+p),v=t>u?0:t;for(i=0;l>i;i++)t>u&&i>t-1||(v>i||i>u)&&(h=j.slides[i],h&&h.holder&&(h.holder.detach(),h.isAdded=!1))}},setItemHtml:function(b,c){function d(){if(!b.images)return b.isRendered=!0,b.isLoaded=!0,b.isLoading=!1,void h(!0);if(!b.isLoading){var c,d;b.content.hasClass("rsImg")?(c=b.content,d=!0):c=b.content.find(".rsImg:not(img)"),c&&!c.is("img")&&c.each(function(){var c=a(this),e='<img class="rsImg" src="'+(c.is("a")?c.attr("href"):c.text())+'" />';d?b.content=a(e):c.replaceWith(e)}),c=d?b.content:b.content.find("img.rsImg"),j(),c.eq(0).addClass("rsMainSlideImage"),b.iW&&b.iH&&(b.isLoaded||l._resizeImage(b),h()),b.isLoading=!0;if(b.isBig)a("<img />").on("load.rs error.rs",function(){e([this],!0)}).attr("src",b.image);else{b.loaded=[],b.imgLoaders=[];for(var f=0;f<b.images.length;f++){var g=a("<img />");b.imgLoaders.push(this),g.on("load.rs error.rs",function(){b.loaded.push(this),b.loaded.length===b.imgLoaders.length&&e(b.loaded,!1)}).attr("src",b.images[f])}}}}function e(a,c){if(a.length){{var d=a[0];d.src}if(c!==b.isBig){var e=b.holder.children();return void(e&&e.length>1&&k())}if(b.iW&&b.iH)return void f();if(b.iW=d.width,b.iH=d.height,b.iW&&b.iH)return void f();var g=new Image;g.onload=function(){g.width?(b.iW=g.width,b.iH=g.height,f()):setTimeout(function(){g.width&&(b.iW=g.width,b.iH=g.height),f()},1e3)},g.src=d.src}else f()}function f(){b.isLoaded=!0,b.isLoading=!1,h(),k(),i()}function g(){return!l._isMove&&b.images&&b.iW&&b.iH?void d():(b.holder.isWaiting=!0,j(),void(b.holder.slideId=-99))}function h(){if(!b.isAppended){var a=l.st.visibleNearby,d=b.id-l._newSlideId;if(!c&&!b.appendOnLoaded&&l.st.fadeinLoadedSlide&&(0===d||(a||l._isAnimating||l._isDragging)&&(-1===d||1===d))){var e={visibility:"visible",opacity:0};e[l._vendorPref+"transition"]="opacity 400ms ease-in-out",b.content.css(e),setTimeout(function(){b.content.css("opacity",1)},16)}b.holder.find(".rsPreloader").length?b.holder.append(b.content):b.holder.html(b.content),b.isAppended=!0,b.isLoaded&&(l._resizeImage(b),i()),b.sizeReady||(b.sizeReady=!0,setTimeout(function(){l.ev.trigger("rsMaybeSizeReady",b)},100))}}function i(){b.loadedTriggered||(b.isLoaded=b.loadedTriggered=!0,b.holder.trigger("rsAfterContentSet"),l.ev.trigger("rsAfterContentSet",b))}function j(){l.st.usePreloader&&b.holder.html(l._preloader.clone())}function k(){if(l.st.usePreloader){var a=b.holder.find(".rsPreloader");a.length&&a.remove()}}var l=this;return b.isLoaded?void h():void(c?g():d())},_addBlockToContainer:function(a){{var b=this,c=a.holder;a.id-b._newSlideId}b._slidesContainer.append(c),a.appendOnLoaded=!1},_onDragStart:function(b,c){var d,e=this,f="touchstart"===b.type;if(e._isTouchGesture=f,e.ev.trigger("rsDragStart"),a(b.target).closest(".rsNoDrag",e._currHolder).length)return e.dragSuccess=!1,!0;if(c||e._isAnimating&&(e._wasAnimating=!0,e._stopAnimation()),e.dragSuccess=!1,e._isDragging)return void(f&&(e._multipleTouches=!0));if(f&&(e._multipleTouches=!1),e._setGrabbingCursor(),f){var g=b.originalEvent.touches;if(!(g&&g.length>0))return;d=g[0],g.length>1&&(e._multipleTouches=!0)}else b.preventDefault(),d=b,e.msEnabled&&(d=d.originalEvent);e._isDragging=!0,e._doc.on(e._moveEvent,function(a){e._onDragMove(a,c)}).on(e._upEvent,function(a){e._onDragRelease(a,c)}),e._currMoveAxis="",e._hasMoved=!1,e._pageX=d.pageX,e._pageY=d.pageY,e._startPagePos=e._accelerationPos=(c?e._thumbsHorizontal:e._slidesHorizontal)?d.pageX:d.pageY,e._horDir=0,e._verDir=0,e._currRenderPosition=c?e._thumbsPosition:e._sPosition,e._startTime=(new Date).getTime(),f&&e._sliderOverflow.on(e._cancelEvent,function(a){e._onDragRelease(a,c)})},_renderMovement:function(a,b){var c=this;if(c._checkedAxis){var d=c._renderMoveTime,e=a.pageX-c._pageX,f=a.pageY-c._pageY,g=c._currRenderPosition+e,h=c._currRenderPosition+f,i=b?c._thumbsHorizontal:c._slidesHorizontal,j=i?g:h,k=c._currMoveAxis;c._hasMoved=!0,c._pageX=a.pageX,c._pageY=a.pageY,"x"===k&&0!==e?c._horDir=e>0?1:-1:"y"===k&&0!==f&&(c._verDir=f>0?1:-1);var l=i?c._pageX:c._pageY,m=i?e:f;b?j>c._thumbsMinPosition?j=c._currRenderPosition+m*c._lastItemFriction:j<c._thumbsMaxPosition&&(j=c._currRenderPosition+m*c._lastItemFriction):c._loop||(c.currSlideId<=0&&l-c._startPagePos>0&&(j=c._currRenderPosition+m*c._lastItemFriction),c.currSlideId>=c.numSlides-1&&l-c._startPagePos<0&&(j=c._currRenderPosition+m*c._lastItemFriction)),c._currRenderPosition=j,d-c._startTime>200&&(c._startTime=d,c._accelerationPos=l),b?c._setThumbsPosition(c._currRenderPosition):c._isMove&&c._setPosition(c._currRenderPosition)}},_onDragMove:function(a,b){var c,d=this,e="touchmove"===a.type;if(!d._isTouchGesture||e){if(e){if(d._lockAxis)return;var f=a.originalEvent.touches;if(!f)return;if(f.length>1)return;c=f[0]}else c=a,d.msEnabled&&(c=c.originalEvent);if(d._hasMoved||(d._useCSS3Transitions&&(b?d._thumbsContainer:d._slidesContainer).css(d._vendorPref+d._TD,"0s"),function i(){d._isDragging&&(d._animFrame=requestAnimationFrame(i),d._renderMoveEvent&&d._renderMovement(d._renderMoveEvent,b))}()),d._checkedAxis)a.preventDefault(),d._renderMoveTime=(new Date).getTime(),d._renderMoveEvent=c;else{var g=b?d._thumbsHorizontal:d._slidesHorizontal,h=Math.abs(c.pageX-d._pageX)-Math.abs(c.pageY-d._pageY)-(g?-7:7);if(h>7){if(g)a.preventDefault(),d._currMoveAxis="x";else if(e)return void d._completeGesture();d._checkedAxis=!0}else if(-7>h){if(g){if(e)return void d._completeGesture()}else a.preventDefault(),d._currMoveAxis="y";d._checkedAxis=!0}}}},_completeGesture:function(){var a=this;a._lockAxis=!0,a._hasMoved=a._isDragging=!1,a._onDragRelease()},_onDragRelease:function(b,c){function d(a){return 100>a?100:a>500?500:a}function e(a,b){(l._isMove||c)&&(j=(-l._realId-l._idOffset)*l._slideSize,k=Math.abs(l._sPosition-j),l._currAnimSpeed=k/b,a&&(l._currAnimSpeed+=250),l._currAnimSpeed=d(l._currAnimSpeed),l._animateTo(j,!1))}var f,g,h,i,j,k,l=this,m="touchend"===b.type||"touchcancel"===b.type;if(!l._isTouchGesture||m){if(l._isTouchGesture=!1,l.ev.trigger("rsDragRelease"),l._renderMoveEvent=null,l._isDragging=!1,l._lockAxis=!1,l._checkedAxis=!1,l._renderMoveTime=0,cancelAnimationFrame(l._animFrame),l._hasMoved&&(c?l._setThumbsPosition(l._currRenderPosition):l._isMove&&l._setPosition(l._currRenderPosition)),l._doc.off(l._moveEvent).off(l._upEvent),m&&l._sliderOverflow.off(l._cancelEvent),l._setGrabCursor(),!l._hasMoved&&!l._multipleTouches&&c&&l._thumbsEnabled){var n=a(b.target).closest(".rsNavItem");return void(n.length&&l.goTo(n.index()))}var o=c?l._thumbsHorizontal:l._slidesHorizontal;if(!l._hasMoved||"y"===l._currMoveAxis&&o||"x"===l._currMoveAxis&&!o){if(c||!l._wasAnimating)return l._wasAnimating=!1,void(l.dragSuccess=!1);if(l._wasAnimating=!1,l.st.navigateByClick)return l._mouseNext(l.msEnabled?b.originalEvent:b),void(l.dragSuccess=!0);l.dragSuccess=!0}else l.dragSuccess=!0;l._wasAnimating=!1,l._currMoveAxis="";var p=l.st.minSlideOffset,q=m?b.originalEvent.changedTouches[0]:l.msEnabled?b.originalEvent:b,r=o?q.pageX:q.pageY,s=l._startPagePos,t=l._accelerationPos,u=l.currSlideId,v=l.numSlides,w=o?l._horDir:l._verDir,x=l._loop,y=!1;if(f=Math.abs(r-s),g=r-t,h=(new Date).getTime()-l._startTime,i=Math.abs(g)/h,0===w||1>=v)return void e(!0,i);if(!x&&!c)if(0>=u){if(w>0)return void e(!0,i)}else if(u>=v-1&&0>w)return void e(!0,i);if(c){var z,j=l._thumbsPosition;if(j>l._thumbsMinPosition)j=l._thumbsMinPosition;else if(j<l._thumbsMaxPosition)j=l._thumbsMaxPosition;else{var A=.003,B=i*i/(2*A),C=-l._thumbsPosition,D=l._thumbsContainerSize-l._thumbsViewportSize+l._thumbsPosition;if(g>0&&B>C?(C+=l._thumbsViewportSize/(15/(B/i*A)),i=i*C/B,B=C):0>g&&B>D&&(D+=l._thumbsViewportSize/(15/(B/i*A)),i=i*D/B,B=D),z=Math.max(Math.round(i/A),50),j+=B*(0>g?-1:1),j>l._thumbsMinPosition)return void l._animateThumbsTo(j,z,!0,l._thumbsMinPosition,200);if(j<l._thumbsMaxPosition)return void l._animateThumbsTo(j,z,!0,l._thumbsMaxPosition,200)}l._animateThumbsTo(j,z,!0)}else if(r>s+p){if(0>w)return void e(!1,i);l._moveTo("prev",d(Math.abs(l._sPosition-(-l._realId-l._idOffset+1)*l._slideSize)/i),y,!0,!0)}else if(s-p>r){if(w>0)return void e(!1,i);l._moveTo("next",d(Math.abs(l._sPosition-(-l._realId-l._idOffset-1)*l._slideSize)/i),y,!0,!0)}else e(!1,i)}},_setPosition:function(a){var b=this;a=b._sPosition=a,b._useCSS3Transitions?b._slidesContainer.css(b._xProp,b._tPref1+(b._slidesHorizontal?a+b._tPref2+0:0+b._tPref2+a)+b._tPref3):b._slidesContainer.css(b._slidesHorizontal?b._xProp:b._yProp,a)},updateSliderSize:function(a){var b,c,d=this;if(d.st.autoScaleSlider){var e=d.st.autoScaleSliderWidth,f=d.st.autoScaleSliderHeight;d.st.autoScaleHeight?(b=d.slider.width(),b!=d.width&&(d.slider.css("height",b*(f/e)),b=d.slider.width()),c=d.slider.height()):(c=d.slider.height(),c!=d.height&&(d.slider.css("width",c*(e/f)),c=d.slider.height()),b=d.slider.width())}else b=d.slider.width(),c=d.slider.height();if(a||b!=d.width||c!=d.height){d.width=b,d.height=c,d._wrapWidth=b,d._wrapHeight=c,d.ev.trigger("rsBeforeSizeSet"),d.ev.trigger("rsAfterSizePropSet"),d._sliderOverflow.css({width:d._wrapWidth,height:d._wrapHeight}),d._slideSize=(d._slidesHorizontal?d._wrapWidth:d._wrapHeight)+d.st.slidesSpacing,d._imagePadding=d.st.imageScalePadding;var g,h;for(h=0;h<d.slides.length;h++)g=d.slides[h],g.positionSet=!1,g&&g.images&&g.isLoaded&&(g.isRendered=!1,d._resizeImage(g));if(d._cloneHolders)for(h=0;h<d._cloneHolders.length;h++)g=d._cloneHolders[h],g.holder.css(d._reorderProp,(g.id+d._idOffset)*d._slideSize);d._updateBlocksContent(),d._isMove&&(d._useCSS3Transitions&&d._slidesContainer.css(d._vendorPref+"transition-duration","0s"),d._setPosition((-d._realId-d._idOffset)*d._slideSize)),d.ev.trigger("rsOnUpdateNav")}d._sliderOffset=d._sliderOverflow.offset(),d._sliderOffset=d._sliderOffset[d._reorderProp]},appendSlide:function(a,b){var c=this,d=c._parseNode(a);(isNaN(b)||b>c.numSlides)&&(b=c.numSlides),c.slides.splice(b,0,d),c.slidesJQ.splice(b,0,'<div style="'+(c._isMove?"position:absolute;":c._opacityCSS)+'" class="rsSlide"></div>'),b<c.currSlideId&&c.currSlideId++,c.ev.trigger("rsOnAppendSlide",[d,b]),c._refreshSlides(b),b===c.currSlideId&&c.ev.trigger("rsAfterSlideChange")},removeSlide:function(a){var b=this,c=b.slides[a];c&&(c.holder&&c.holder.remove(),a<b.currSlideId&&b.currSlideId--,b.slides.splice(a,1),b.slidesJQ.splice(a,1),b.ev.trigger("rsOnRemoveSlide",[a]),b._refreshSlides(a),a===b.currSlideId&&b.ev.trigger("rsAfterSlideChange"))},_refreshSlides:function(){var a=this,b=a.numSlides,c=a._realId<=0?0:Math.floor(a._realId/b);a.numSlides=a.slides.length,0===a.numSlides?(a.currSlideId=a._idOffset=a._realId=0,a.currSlide=a._oldHolder=null):a._realId=c*a.numSlides+a.currSlideId;for(var d=0;d<a.numSlides;d++)a.slides[d].id=d;a.currSlide=a.slides[a.currSlideId],a._currHolder=a.slidesJQ[a.currSlideId],a.currSlideId>=a.numSlides?a.goTo(a.numSlides-1):a.currSlideId<0&&a.goTo(0),a._refreshNumPreloadImages(),a._isMove&&a._loop&&a._slidesContainer.css(a._vendorPref+a._TD,"0ms"),a._refreshSlidesTimeout&&clearTimeout(a._refreshSlidesTimeout),a._refreshSlidesTimeout=setTimeout(function(){a._isMove&&a._setPosition((-a._realId-a._idOffset)*a._slideSize),a._updateBlocksContent(),a._isMove||a._currHolder.css({display:"block",opacity:1})},14),a.ev.trigger("rsOnUpdateNav")},_setGrabCursor:function(){var a=this;a._hasDrag&&a._isMove&&(a._grabCursor?a._sliderOverflow.css("cursor",a._grabCursor):(a._sliderOverflow.removeClass("grabbing-cursor"),a._sliderOverflow.addClass("grab-cursor")))},_setGrabbingCursor:function(){var a=this;a._hasDrag&&a._isMove&&(a._grabbingCursor?a._sliderOverflow.css("cursor",a._grabbingCursor):(a._sliderOverflow.removeClass("grab-cursor"),a._sliderOverflow.addClass("grabbing-cursor")))},next:function(a){var b=this;b._moveTo("next",b.st.transitionSpeed,!0,!a)},prev:function(a){var b=this;b._moveTo("prev",b.st.transitionSpeed,!0,!a)},_moveTo:function(a,b,c,d,e){var f,g,h,i=this;if(i.ev.trigger("rsBeforeMove",[a,d]),newItemId="next"===a?i.currSlideId+1:"prev"===a?i.currSlideId-1:a=parseInt(a,10),!i._loop){if(0>newItemId)return void i._doBackAndForthAnim("left",!d);if(newItemId>=i.numSlides)return void i._doBackAndForthAnim("right",!d)}i._isAnimating&&(i._stopAnimation(!0),c=!1),g=newItemId-i.currSlideId,i._prevSlideId=i.currSlideId;var j,k=i.currSlideId,l=i.currSlideId+g,m=i._realId;i._loop?(l=i._updateBlocksContent(!1,l),m+=g):m=l,i._newSlideId=l,i._oldHolder=i.slidesJQ[i.currSlideId],i._realId=m,i.currSlideId=i._newSlideId,i.currSlide=i.slides[i.currSlideId],i._currHolder=i.slidesJQ[i.currSlideId];var n=i.st.slidesDiff,o=Boolean(g>0),p=Math.abs(g),q=Math.floor(k/i._numPreloadImages),r=Math.floor((k+(o?n:-n))/i._numPreloadImages),s=o?Math.max(q,r):Math.min(q,r),t=s*i._numPreloadImages+(o?i._numPreloadImages-1:0);t>i.numSlides-1?t=i.numSlides-1:0>t&&(t=0);
var u=o?t-k:k-t;if(u>i._numPreloadImages&&(u=i._numPreloadImages),p>u+n)for(i._idOffset+=(p-(u+n))*(o?-1:1),b=1.4*b,h=0;h<i.numSlides;h++)i.slides[h].positionSet=!1;i._currAnimSpeed=b,i._updateBlocksContent(!0),e||(j=!0),f=(-m-i._idOffset)*i._slideSize,j?setTimeout(function(){i._isWorking=!1,i._animateTo(f,a,!1,c),i.ev.trigger("rsOnUpdateNav")},0):(i._animateTo(f,a,!1,c),i.ev.trigger("rsOnUpdateNav"))},_updateArrowsNav:function(){var a=this,b="rsArrowDisabled";if(a.st.arrowsNav){if(a.numSlides<=1)return a._arrowLeft.css("display","none"),void a._arrowRight.css("display","none");a._arrowLeft.css("display","block"),a._arrowRight.css("display","block"),a._loop||a.st.loopRewind||(0===a.currSlideId?a._arrowLeft.addClass(b):a._arrowLeft.removeClass(b),a.currSlideId===a.numSlides-1?a._arrowRight.addClass(b):a._arrowRight.removeClass(b))}},_animateTo:function(b,c,d,e,f){function g(){var a;h&&(a=h.data("rsTimeout"),a&&(h!==i&&h.css({opacity:0,display:"none",zIndex:0}),clearTimeout(a),h.data("rsTimeout",""))),a=i.data("rsTimeout"),a&&(clearTimeout(a),i.data("rsTimeout",""))}var h,i,j=this,k={};if(isNaN(j._currAnimSpeed)&&(j._currAnimSpeed=400),j._sPosition=j._currRenderPosition=b,j.ev.trigger("rsBeforeAnimStart"),j._useCSS3Transitions)if(j._isMove){j._currAnimSpeed=parseInt(j._currAnimSpeed);var l=j._vendorPref+j._TD,m=j._vendorPref+j._TTF;k[l]=j._currAnimSpeed+"ms",k[m]=e?a.rsCSS3Easing[j.st.easeInOut]:a.rsCSS3Easing[j.st.easeOut],j._slidesContainer.css(k),e||!j.hasTouch?setTimeout(function(){j._setPosition(b)},5):j._setPosition(b)}else j._currAnimSpeed=j.st.transitionSpeed,h=j._oldHolder,i=j._currHolder,i.data("rsTimeout")&&i.css("opacity",0),g(),h&&h.data("rsTimeout",setTimeout(function(){k[j._vendorPref+j._TD]="0ms",k.zIndex=0,k.display="none",h.data("rsTimeout",""),h.css(k),setTimeout(function(){h.css("opacity",0)},16)},j._currAnimSpeed+60)),k.display="block",k.zIndex=j._fadeZIndex,k.opacity=0,k[j._vendorPref+j._TD]="0ms",k[j._vendorPref+j._TTF]=a.rsCSS3Easing[j.st.easeInOut],i.css(k),i.data("rsTimeout",setTimeout(function(){i.css(j._vendorPref+j._TD,j._currAnimSpeed+"ms"),i.data("rsTimeout",setTimeout(function(){i.css("opacity",1),i.data("rsTimeout","")},20))},20));else j._isMove?(k[j._slidesHorizontal?j._xProp:j._yProp]=b+"px",j._slidesContainer.animate(k,j._currAnimSpeed,e?j.st.easeInOut:j.st.easeOut)):(h=j._oldHolder,i=j._currHolder,i.stop(!0,!0).css({opacity:0,display:"block",zIndex:j._fadeZIndex}),j._currAnimSpeed=j.st.transitionSpeed,i.animate({opacity:1},j._currAnimSpeed,j.st.easeInOut),g(),h&&h.data("rsTimeout",setTimeout(function(){h.stop(!0,!0).css({opacity:0,display:"none",zIndex:0})},j._currAnimSpeed+60)));j._isAnimating=!0,j.loadingTimeout&&clearTimeout(j.loadingTimeout),j.loadingTimeout=f?setTimeout(function(){j.loadingTimeout=null,f.call()},j._currAnimSpeed+60):setTimeout(function(){j.loadingTimeout=null,j._animationComplete(c)},j._currAnimSpeed+60)},_stopAnimation:function(a){var b=this;if(b._isAnimating=!1,clearTimeout(b.loadingTimeout),b._isMove)if(b._useCSS3Transitions){if(!a){var c=b._sPosition,d=b._currRenderPosition=b._getTransformProp();b._slidesContainer.css(b._vendorPref+b._TD,"0ms"),c!==d&&b._setPosition(d)}}else b._slidesContainer.stop(!0),b._sPosition=parseInt(b._slidesContainer.css(b._xProp),10);else b._fadeZIndex>20?b._fadeZIndex=10:b._fadeZIndex++},_getTransformProp:function(){var a=this,b=window.getComputedStyle(a._slidesContainer.get(0),null).getPropertyValue(a._vendorPref+"transform"),c=b.replace(/^matrix\(/i,"").split(/, |\)$/g),d=0===c[0].indexOf("matrix3d");return parseInt(c[a._slidesHorizontal?d?12:4:d?13:5],10)},_getCSS3Prop:function(a,b){var c=this;return c._useCSS3Transitions?c._tPref1+(b?a+c._tPref2+0:0+c._tPref2+a)+c._tPref3:a},_animationComplete:function(){var a=this;a._isMove||(a._currHolder.css("z-index",0),a._fadeZIndex=10),a._isAnimating=!1,a.staticSlideId=a.currSlideId,a._updateBlocksContent(),a._slidesMoved=!1,a.ev.trigger("rsAfterSlideChange")},_doBackAndForthAnim:function(a,b){function c(){e._isAnimating=!1}function d(){e._isAnimating=!1,e._animateTo(f,"",!1,!0,c)}var e=this,f=(-e._realId-e._idOffset)*e._slideSize;if(0!==e.numSlides&&!e._isAnimating)return e.st.loopRewind?void e.goTo("left"===a?e.numSlides-1:0,b):void(e._isMove&&(e._currAnimSpeed=200,e._animateTo(f+("left"===a?30:-30),"",!1,!0,d)))},_resizeImage:function(a){var b=!0;if(!a.isRendered){var c,d,e=a.content,f="rsMainSlideImage",g=this,h=g.st.imageAlignCenter,i=g.st.imageScaleMode;if(a.videoURL&&(f="rsVideoContainer","fill"!==i?c=!0:(d=e,d.hasClass(f)||(d=d.find("."+f)),d.css({width:"100%",height:"100%"}),f="rsMainSlideImage")),e.hasClass(f)||(b=!1,e=e.find("."+f)),e){var j=a.iW,k=a.iH;if(a.isRendered=!0,"none"!==i||h){bMargin="fill"!==i?g._imagePadding:0;var l,m,n,o,p,q=g._wrapWidth-2*bMargin,r=g._wrapHeight-2*bMargin,s={};"fit-if-smaller"===i&&(j>q||k>r)&&(i="fit"),"fill"===i||"fit"===i?(l=q/j,m=r/k,n="fill"==i?l>m?l:m:"fit"==i?m>l?l:m:1,o=Math.ceil(j*n,10),p=Math.ceil(k*n,10)):(o=j,p=k),"none"!==i&&(s.width=o,s.height=p,c&&e.find(".rsImg").css({width:"100%",height:"100%"})),h&&(s.marginLeft=Math.floor((q-o)/2)+bMargin,s.marginTop=Math.floor((r-p)/2)+bMargin),e.css(s)}}}}},a.rsProto=b.prototype,a.fn.royalSlider=function(c){var d=arguments;return this.each(function(){var e=a(this);if("object"!=typeof c&&c){var f=e.data("royalSlider");if(f&&f[c])return f[c].apply(f,Array.prototype.slice.call(d,1))}else e.data("royalSlider")||e.data("royalSlider",new b(e,c))})},a.fn.royalSlider.defaults={slidesSpacing:8,startSlideId:0,loop:!1,loopRewind:!1,numImagesToPreload:4,fadeinLoadedSlide:!0,slidesOrientation:"horizontal",transitionType:"move",transitionSpeed:600,controlNavigation:"bullets",controlsInside:!0,arrowsNav:!0,arrowsNavAutoHide:!0,navigateByClick:!0,randomizeSlides:!1,sliderDrag:!0,sliderTouch:!0,keyboardNavEnabled:!1,fadeInAfterLoaded:!0,allowCSS3:!0,allowCSS3OnWebkit:!0,addActiveClass:!1,autoHeight:!1,easeOut:"easeOutSine",easeInOut:"easeInOutSine",minSlideOffset:10,imageScaleMode:"fit-if-smaller",imageAlignCenter:!0,imageScalePadding:4,usePreloader:!0,autoScaleSlider:!1,autoScaleSliderWidth:800,autoScaleSliderHeight:400,autoScaleHeight:!0,arrowsNavHideOnTouch:!1,globalCaption:!1,slidesDiff:2},a.rsCSS3Easing={easeOutSine:"cubic-bezier(0.390, 0.575, 0.565, 1.000)",easeInOutSine:"cubic-bezier(0.445, 0.050, 0.550, 0.950)"},a.extend(jQuery.easing,{easeInOutSine:function(a,b,c,d,e){return-d/2*(Math.cos(Math.PI*b/e)-1)+c},easeOutSine:function(a,b,c,d,e){return d*Math.sin(b/e*(Math.PI/2))+c},easeOutCubic:function(a,b,c,d,e){return d*((b=b/e-1)*b*b+1)+c}})}(jQuery,window),function(a){a.extend(a.rsProto,{_initAutoHeight:function(){var a=this;if(a.st.autoHeight){var b,c,d,e,f=function(f){d=a.slides[a.currSlideId],b=d.holder,b&&(c=b.height(),c&&c!==e&&(a._wrapHeight=c,a._useCSS3Transitions||!f?a._sliderOverflow.css("height",c):a._sliderOverflow.stop(!0,!0).animate({height:c},a.st.transitionSpeed)))};a.ev.on("rsMaybeSizeReady.rsAutoHeight",function(a,b){d===b&&f()}),a.ev.on("rsAfterContentSet.rsAutoHeight",function(a,b){d===b&&f()}),a.slider.addClass("rsAutoHeight"),a.ev.one("rsAfterInit",function(){setTimeout(function(){f(!1),setTimeout(function(){a.slider.append('<div style="clear:both; float: none;"></div>'),a._useCSS3Transitions&&a._sliderOverflow.css(a._vendorPref+"transition","height "+a.st.transitionSpeed+"ms ease-in-out")},16)},16)}),a.ev.on("rsBeforeAnimStart",function(){f(!0)}),a.ev.on("rsBeforeSizeSet",function(){setTimeout(function(){f(!1)},16)})}}}),a.rsModules.autoHeight=a.rsProto._initAutoHeight}(jQuery),function(a){a.extend(a.rsProto,{_initAutoplay:function(){var b,c=this;c._autoPlayDefaults={enabled:!1,stopAtAction:!0,pauseOnHover:!0,delay:2e3},!c.st.autoPlay&&c.st.autoplay&&(c.st.autoPlay=c.st.autoplay),c.st.autoPlay=a.extend({},c._autoPlayDefaults,c.st.autoPlay),c.st.autoPlay.enabled&&(c.ev.on("rsBeforeParseNode",function(c,d,e){d=a(d),b=d.attr("data-rsDelay"),b&&(e.customDelay=parseInt(b,10))}),c.ev.one("rsAfterInit",function(){c._setupAutoPlay()}),c.ev.on("rsBeforeDestroy",function(){c.stopAutoPlay(),a(window).off("blur"+c.ns+" focus"+c.ns)}))},_setupAutoPlay:function(){var b=this;b.startAutoPlay(),b.ev.on("rsAfterContentSet",function(a,c){b._isDragging||b._isAnimating||!b._autoPlayEnabled||c!==b.currSlide||b._play()}),b.ev.on("rsDragRelease",function(){b._autoPlayEnabled&&b._autoPlayPaused&&(b._autoPlayPaused=!1,b._play())}),b.ev.on("rsAfterSlideChange",function(){b._autoPlayEnabled&&b._autoPlayPaused&&(b._autoPlayPaused=!1,b.currSlide.isLoaded&&b._play())}),b.ev.on("rsDragStart",function(){b._autoPlayEnabled&&(b.st.autoPlay.stopAtAction?b.stopAutoPlay():(b._autoPlayPaused=!0,b._pause()))}),b.ev.on("rsBeforeMove",function(a,c,d){b._autoPlayEnabled&&(d&&b.st.autoPlay.stopAtAction?b.stopAutoPlay():(b._autoPlayPaused=!0,b._pause()))}),b._pausedByVideo=!1,b.ev.on("rsVideoStop",function(){b._autoPlayEnabled&&(b._pausedByVideo=!1,b._play())}),b.ev.on("rsVideoPlay",function(){b._autoPlayEnabled&&(b._autoPlayPaused=!1,b._pause(),b._pausedByVideo=!0)}),a(window).on("blur"+b.ns,function(){b._autoPlayEnabled&&(b._autoPlayPaused=!0,b._pause())}).on("focus"+b.ns,function(){b._autoPlayEnabled&&b._autoPlayPaused&&(b._autoPlayPaused=!1,b._play())}),b.st.autoPlay.pauseOnHover&&(b._pausedByHover=!1,b.slider.hover(function(){b._autoPlayEnabled&&(b._autoPlayPaused=!1,b._pause(),b._pausedByHover=!0)},function(){b._autoPlayEnabled&&(b._pausedByHover=!1,b._play())}))},toggleAutoPlay:function(){var a=this;a._autoPlayEnabled?a.stopAutoPlay():a.startAutoPlay()},startAutoPlay:function(){var a=this;a._autoPlayEnabled=!0,a.currSlide.isLoaded&&a._play()},stopAutoPlay:function(){var a=this;a._pausedByVideo=a._pausedByHover=a._autoPlayPaused=a._autoPlayEnabled=!1,a._pause()},_play:function(){var a=this;a._pausedByHover||a._pausedByVideo||(a._autoPlayRunning=!0,a._autoPlayTimeout&&clearTimeout(a._autoPlayTimeout),a._autoPlayTimeout=setTimeout(function(){var b;a._loop||a.st.loopRewind||(b=!0,a.st.loopRewind=!0),a.next(!0),b&&(b=!1,a.st.loopRewind=!1)},a.currSlide.customDelay?a.currSlide.customDelay:a.st.autoPlay.delay))},_pause:function(){var a=this;a._pausedByHover||a._pausedByVideo||(a._autoPlayRunning=!1,a._autoPlayTimeout&&(clearTimeout(a._autoPlayTimeout),a._autoPlayTimeout=null))}}),a.rsModules.autoplay=a.rsProto._initAutoplay}(jQuery),jQuery(function(a){"use strict";a("html").not(".lt-ie9").coenvmenu()}),function(a,b,c,d){"use strict";a.CoEnvMenu=function(b,c){this.options=b,this.element=a(c),this._create(b)},a.CoEnvMenu.settings={outerSelector:"#outer",wrapperSelector:"#wrapper",menuSelector:".main-menu",submenuClass:"children",topMenuSelector:".top-menu",menuButtonSelector:"#show-menu button",topLevelItemSelector:".page-depth-0",mobileMenuClass:"mobile-menu",normalMenuClass:"normal-menu",normalTopMenuClass:"normal-top-menu",mobileTopMenuClass:"mobile-top-menu",mobileMenuActiveClass:"mobile-menu-active",mobileTopMenuActiveClass:"mobile-top-menu-active",menuItemActiveClass:"menu-item-active"},a.CoEnvMenu.prototype._create=function(b){this.options=a.extend(!0,{},a.CoEnvMenu.settings,b),this._init()},a.CoEnvMenu.prototype._init=function(){this.$outer=a(this.options.outerSelector),this.$wrapper=a(this.options.wrapperSelector),this.$menu=a(this.options.menuSelector),this.$topMenu=a(this.options.topMenuSelector),this.$menuButton=a(this.options.menuButtonSelector),this._buildMenu(),this._dropdowns(),this._setupMobileMenu(),this._addArrowIcons(),this._setupTopMenu(),this._handleMenuButton(),this._handleWrapperClicking(),this._handleMenuInteractions(),this._handleWindowResize()},a.CoEnvMenu.prototype._buildMenu=function(){var b=this,c=this.$menu.find(this.options.topLevelItemSelector),e=c.find("> ."+this.options.submenuClass),f=a('<div class="submenu-container"></div>');e.each(function(){var b=a(this).find("> li"),c=b.length,d=Math.round(c/2);b.slice(0,d).wrapAll('<li class="col-left"><ul></ul></li>'),b.slice(d,c).wrapAll('<li class="col-right"><ul></ul></li>')}),c.each(function(){var c,e,f=a(this).find("> span > a"),g=f.attr("title");c=g!==d&&g!==!1?g:f.text(),e=f.attr("href"),a(this).find("> ."+b.options.submenuClass).length||a(this).append('<ul class="'+b.options.submenuClass+'"></ul>'),a(this).find("> ."+b.options.submenuClass).prepend('<li class="pagenav"><a href="'+e+'">'+c+"</a></li>")}),this.$menu.find(this.options.topLevelItemSelector+" > ."+this.options.submenuClass).wrap(f)},a.CoEnvMenu.prototype._dropdowns=function(){var b=this;this.$menu.find(this.options.topLevelItemSelector).has("."+this.options.submenuClass).hoverIntent(function(){a(this).toggleClass(b.options.menuItemActiveClass)})},a.CoEnvMenu.prototype._setupMobileMenu=function(){this.$mobileMenu=this.$menu.clone(),this.$mobileMenu.removeClass(this.options.normalMenuClass).addClass(this.options.mobileMenuClass),this.$mobileMenu.appendTo(this.$outer).show()},a.CoEnvMenu.prototype._addArrowIcons=function(){this.$mobileMenu.find(this.options.topLevelItemSelector).has("."+this.options.submenuClass).each(function(){a(this).find("a").first().prepend("<i></i>")})},a.CoEnvMenu.prototype._setupTopMenu=function(){this.$mobileTopMenu=this.$topMenu.clone(),this.$mobileTopMenu.removeClass(this.options.normalTopMenuClass).addClass(this.options.mobileTopMenuClass),this.$mobileTopMenu.appendTo(this.$mobileMenu).show()},a.CoEnvMenu.prototype._handleMenuButton=function(){var a=this;this.$menuButton.fastClick(function(b){b.preventDefault(),a._toggleMobileMenu()})},a.CoEnvMenu.prototype._toggleMobileMenu=function(){a("html").toggleClass(this.options.mobileMenuActiveClass)},a.CoEnvMenu.prototype._handleWindowResize=function(){var c=this;a(b).on("resize",a.debounce(100,function(){a(b).width()>=768&&a("html").hasClass(c.options.mobileMenuActiveClass)&&c._toggleMobileMenu()}))},a.CoEnvMenu.prototype._handleWrapperClicking=function(){var b=this;this.$wrapper.on("click",function(c){a("html").hasClass(b.options.mobileMenuActiveClass)&&(c.preventDefault(),b._toggleMobileMenu())})},a.CoEnvMenu.prototype._handleMenuInteractions=function(){var b=this,c=this.$mobileMenu.find(this.options.topLevelItemSelector),d=c.find("> span > a");c.filter(".menu-item-active, .current_page_item, .current-page-ancestor").each(function(){a(this).addClass("expanded")}),d.fastClick(function(c){c.preventDefault();var d=a(this).parents(b.options.topLevelItemSelector),e=(a(this).find("i"),d.find("."+b.options.submenuClass));d.hasClass("expanded")?(e.slideUp(200),d.removeClass("expanded")):(e.slideDown(200),d.addClass("expanded"))})},a.CoEnvMenu.prototype.option=function(b){a.isPlainObject(b)&&(this.options=a.extend(!0,this.options,b))},a.fn.coenvmenu=function(b){if("string"==typeof b){var c=Array.prototype.slice.call(arguments,1);this.each(function(){var d=a.data(this,"coenvmenu");return d?a.isFunction(d[b])&&"_"!==b.charAt(0)?void d[b].apply(d,c):void console.log("error",'no such method "'+b+'" for coenvmenu instance'):void console.log("error",'cannot call methods on coenvmenu prior to initialization; attempted to call method "'+b+'"')})}else this.each(function(){var c=a.data(this,"coenvmenu");c?(c.option(b||{}),c._init()):a.data(this,"coenvmenu",new a.CoEnvMenu(b,this))});return this}}(jQuery,window,document),jQuery(function(a){"use strict";a("body").hasClass("lt-ie8")||a(".home #features").homeFeatures()}),$.fn.homeFeatures=function(){"use strict";var a,b,c,d=$(this),e=d.find(".features-container"),f=d.find(".feature"),g=$("<div></div>");if(e.length){a=e.offset().top,e.royalSlider({loop:!0,fadeInLoadedSlide:!1,autoHeight:!0,navigateByClick:!1,autoPlay:{enabled:!0,pauseOnHover:!0,stopAtAction:!1,delay:8e3}}),b=e.data("royalSlider"),f.removeClass("loading"),$(window).on("scroll",$.debounce(200,function(){var a=$(window).scrollTop(),c=e.offset().top,d=e.outerHeight(!0);a>c+d/2?b.stopAutoPlay():b.startAutoPlay()})),c="<ul>",g.addClass("features-nav");for(var h=0,i=b.numSlides;i>h;h++)c+='<li><a href="#"><span>'+(h+1)+"</span></a></li>";c+="</ul>",g.append($(c)),g.appendTo(d),g.find("a").eq(b.currSlideId).addClass("active"),g.find("a").on("click",function(a){a.preventDefault(),e.royalSlider("goTo",$(this).parent().index()),g.find("a").removeClass("active"),$(this).addClass("active")}),b.ev.on("rsAfterSlideChange",function(){g.find("a").removeClass("active"),g.find("a").eq(b.currSlideId).addClass("active")})}},jQuery(function(a){"use strict";a("#blog-header").blogHeader()}),$.fn.blogHeader=function(){"use strict";var a=$(this),b=a.find(".select-category select"),c=a.find(".select-month select");b.on("change",function(){var a=$(this).val(),b=$(this).parent("div").attr("data-url");window.location.href=b+a}),c.on("change",function(){var a=$(this).val();window.location.href=a})},function(a){"use strict";a.coenvshare=function(b,c){this.options=b,this.element=a(c),this._create(b)},a.coenvshare.settings={},a.coenvshare.prototype._create=function(b){this.options=a.extend(!0,{},a.coenvshare.settings,b),this._init()},a.coenvshare.prototype._init=function(){this.articleID=this.element.attr("data-article-id"),this.articleTitle=this.element.attr("data-article-title"),this.articleShortLink=this.element.attr("data-article-shortlink"),this.articlePermalink=this.element.attr("data-article-permalink"),"undefined"!=typeof this.articleID&&"undefined"!=typeof this.articleTitle&&"undefined"!=typeof this.articleShortLink&&"undefined"!=typeof this.articlePermalink&&(this.element.addClass("active"),this._buildModal(),this._interactions())},a.coenvshare.prototype._buildModal=function(){var b=[{name:"Twitter",className:"twitter",url:"http://twitter.com/home?status="+this.articleTitle+" "+this.articleShortLink+' from @UW_CoEnv" target="_blank'},{name:"Facebook",className:"facebook",url:"http://www.facebook.com/sharer/sharer.php?s=100&p[url]="+this.articleShortLink+"&p[images][0]=&p[title]="+this.articleTitle+' from UW College of the Environment" target="_blank'},{name:"Email",className:"email",url:"mailto:?subject="+this.articleTitle+"&body=Check%20out%20this%20article%20from%20the%20UW%20College%20of%20the%20Environment:%20"+this.articleShortLink}];this.$modal=a('<div class="share-modal" role="dialog" aria-labelledby="shareModal" aria-hidden="true"></div>'),this.$modal.append('<div class="share-modal-inner"><ul class="share-modal-content"></ul></div>');for(var c=0,d=b.length;d>c;c++)this.$modal.find(".share-modal-content").append('<a href="'+b[c].url+'" ><li class="social-link share-'+b[c].className+'"></li></a>')},a.coenvshare.prototype._interactions=function(){var b=this;this.element.on("click",function(a){a.preventDefault(),a.stopPropagation(),b._launchModal()}),a("body").on("click",function(c){b.modalIsActive===!0&&(a(c.target).is(".social-link")||b._hideModal())})},a.coenvshare.prototype._launchModal=function(){var b=this;a(".post-"+this.articleID).prepend(this.$modal),this.$modal.addClass("active"),this.modalIsActive=!0,setTimeout(function(){b.$modal.addClass("active-visible")},10)},a.coenvshare.prototype._hideModal=function(){var a=this;this.$modal.removeClass("active-visible"),a.$modal.removeClass("active"),a.$modal.remove(),a.modalIsActive=!1},a.coenvshare.prototype.option=function(b){a.isPlainObject(b)&&(this.options=a.extend(!0,this.options,b))},a.fn.coenvshare=function(b){if("string"==typeof b){var c=Array.prototype.slice.call(arguments,1);this.each(function(){var d=a.data(this,"coenvshare");return d?a.isFunction(d[b])&&"_"!==b.charAt(0)?void d[b].apply(d,c):void console.log("error",'no such method "'+b+'" for coenvshare instance'):void console.log("error",'cannot call methods on coenvshare prior to initialization; attempted to call method "'+b+'"')})}else this.each(function(){var c=a.data(this,"coenvshare");c?(c.option(b||{}),c._init()):a.data(this,"coenvshare",new a.coenvshare(b,this))});return this}}(jQuery,window,document),jQuery(function(a){"use strict";a("body").hasClass("lt-ie8")||(a("select.chosen").chosen(),a("input, textarea").placeholder(),a(".article-content").handleFitVids(),a(".Faculty-member-tab-nav").memberTabs(),a(".banner-wrapper").bannerReveals(),a(".share").coenvshare())}),$.fn.bannerReveals=function(){"use strict";return this.each(function(){var a=$(this),b=$(".banner-info"),c="banner-revealed";b.on("click",function(a){a.preventDefault(),a.stopPropagation(),$("body").toggleClass(c)}),a.on("click",function(){$("body").hasClass(c)&&$("body").removeClass(c)})})},$.fn.handleFitVids=function(){"use strict";$(this).fitVids(),$(".fluid-width-video-wrapper").each(function(){var a=$(this),b=parseFloat(a.css("max-width")),c=parseFloat(a[0].style["padding-top"]),d=.01*b*c+"%";a.css("padding-top",d)})},$.fn.memberTabs=function(){"use strict";var a=$(this),b=$(".Faculty-member-tabs"),c="active-tab";a.find("a").click(function(d){d.preventDefault();var e=($(this),b.find("."+$(this).attr("data-tab")));a.find("."+c).removeClass(c),$(this).parent("li").addClass(c),b.find("."+c).removeClass(c),e.addClass(c)})};
//# sourceMappingURL=main.min.map
>>>>>>> 30e15eab2e6d7541d261b816a4f8ca2cc70258de
