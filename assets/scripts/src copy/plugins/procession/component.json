{
  "name": "procession",
  "version": "0.0.0",
  "dependencies": {
    "jquery": "~1.9.1",
    "twitter-bootstrap-sass": "~2.0.3"
  },
  "devDependencies": {
    "normalize": "https://raw.github.com/elcontraption/normalize.css/master/normalize.scss",
    "starter-components": "git@github.com:elcontraption/starter-components.git",
    "imagesloaded": "~2.1.1"
  },
  "gitHead": "942c1845a63781c2a99cf2a9e58a8a33adf114d7",
  "readme": "# jQuery Procession\nA jQuery plugin for sequential storytelling.\n\n## Intro\nProcession is a sequential layout plugin for jQuery. Essentially, it takes a collection of items of varying size, and loops them in a horizontal or vertical strip.\n\n## Features\n* **Flexible**: supports items of varying size and shape.\n* **Responsive**: responds to changes in viewport size.\n* **Progressively enhanced**: smooth animations fallback to jQuery animations for older browsers.\n\n## Basic instructions\nRequires jQuery 1.8 or above.\n\n### Markup\nCreate a containing element with a group of similar child items. You may use your own class names.\n\t\n\t<div class=\"container\">\n\t\t<div class=\"item\"></div>\n\t\t<div class=\"item\"></div>\n\t\t<div class=\"item\"></div>\n\t</div>\n\nAdd jQuery and the Procession script, before your closing ``</body>`` tag.\n\t\n\t<script src=\"//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\n\t<script src=\"/path/to/jquery.procession.min.js\"></script>\n\n### CSS\nSpecify item dimensions in your stylesheet. If you're depending on images or other loaded content to size your items, you'll need to fire .procession() after loading those items. [imagesLoaded()](https://github.com/desandro/imagesloaded) is a great plugin for checking that images are loaded.\n\n\t.item {\n\t\tmargin: 10px;\n\t\twidth: 100px;\n\t\theight: 100px;\n\t\tbackground: orange;\n\t}\n\t\n\n### JavaScript\nJust call procession on the containing element once the document is ready.\n\t\n\t$(function() {\n\t\t$('.container').procession();\n\t});\n\n## Options\nYou can set options like so:\n\n\t$('.container').procession({\n\t\titemSelector: '.item',\n\t\tautoHeight: false,\n\t\tkeyNav: true\n\t});\n\n##### itemSelector\nExplicitly select items for Procession to act on. This is required if ``innerSelector`` is set.\n\n##### innerSelector\nSet this if you've added your own inner element *within* the containing element, wrapping your items. If you set this, you must also select your items with ``itemSelector``.\n\n##### containerClass\nOverrides the default class applied to the containing element.\n\n\tcontainerClass: 'procession-wrapper'\n\n##### containerStyles\nOverrides the default styles applied to the containing element.\n\n\tcontainerStyles: {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden'\t\n\t}\n\n##### innerClass\nOverrides the default class applied to the inner element. If you've set ``innerSelector`` (see above), there is no need to change this.\n\n\tinnerClass: 'procession-inner'\n\n##### innerStyles\nOverrides the default styles applied to the inner element.\n\n\tinnerStyles {\n\t\tposition: 'relative',\n\t\tdisplay: 'block'\n\t}\n\n##### sliderClass\nOverrides the default class applied to the slider element. There is usually no need to change this.\n\n\tsliderClass: 'procession-slider\n\n##### sliderStyles\nOverrides the default styles applied to the slider element.\n\n\tsliderStyles: {\n\t\tposition: 'absolute',\n\t\twidth: '100%'\n\t}\n\n##### itemClass\nOverrides the default class applied to individual items.\n\n\titemClass: 'procession-item'\n\n##### itemStyle\nOverrides the default styles applied to individual items.\n\n\titemStyles: {\n\t\tposition: 'absolute',\n\t\tvisibility\t: 'visible'\n\t}\n\n##### transitionDuration\nThe animation time in milliseconds.\n\n\ttransitionDuration: 400\n\n##### easing\nThe easing style. Include the jQuery Easing plugin for more options.\n\n\teasing: 'ease'\n\n##### autoHeight\nIf set to true (default), the containing element will be resized to fit the tallest item.\n\n\tautoHeight: true\n\n##### keyNav\nIf set to true, Procession will respond to right and left keys.\n\n\tkeyNav: false\n\n##### clickNav\nIf set to true (default), Procession will respond to item clicks.\n\n\tclickNav: true\n\n##### autoAdvance\nIf enabled, items will auto-advance at the specified framerate.\n\n\tautoAdvance: {\n\t\tenable: false,\n\t\tfps: 0.25,\n\t\tdirection: 'forward',\n\t\tpauseOnHover: true,\n\t\tpauseOnClick: false\n\t}\n\n##### verticalAlign\nIf set to 'middle': (default) items will be vertically aligned within the inner element. If set to 'bottom': items will be vertically aligned to the bottom of the inner element.\n\n\tverticalAlign: 'middle'\n\n## Useful techniques\n### Layout relative to centered elements\nBy default, items will be arranged so that they span the width of the containing element, with the first item set against the far left side. It may be desirable to position the items relative to a centered element within your container.\n\n#### Markup\nHere we've wrapped all items in an element with the class ``.inner``.\n\n\t<div class=\"container\">\n\t\t<div class=\"inner\">\n\t\t\t<div class=\"item\"></div>\n\t\t\t<div class=\"item\"></div>\n\t\t\t<div class=\"item\"></div>\n\t\t</div>\n\t</div>\n\n#### Styles\nWe center the ``.inner`` element within ``.container``, and adjust its width.\n\n\t.inner {\n\t\tmargin: 0 auto;\n\t\twidth: 50%;\t\n\t}\n\nNow, your elements will be oriented relative to the ``.inner`` element, even when you resize the viewport.\n\n### Perfectly centered layout\n...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "readmeFilename": "README.md",
  "_id": "procession@0.1.0",
  "description": "A jQuery plugin for sequential storytelling.",
  "commit": "942c1845a63781c2a99cf2a9e58a8a33adf114d7",
  "repository": {
    "type": "git",
    "url": "https://github.com/elcontraption/procession.git"
  }
}